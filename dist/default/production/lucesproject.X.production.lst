

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Feb 10 13:59:52 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.40
    46                           ; Generated 17/11/2021 GMT
    47                           ; 
    48                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  0107                     	;# 
   223  0108                     	;# 
   224  0109                     	;# 
   225  010C                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0185                     	;# 
   231  0187                     	;# 
   232  0188                     	;# 
   233  0189                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  008F                     	;# 
   281  0090                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  0105                     	;# 
   300  0107                     	;# 
   301  0108                     	;# 
   302  0109                     	;# 
   303  010C                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0185                     	;# 
   309  0187                     	;# 
   310  0188                     	;# 
   311  0189                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  008F                     	;# 
   359  0090                     	;# 
   360  0091                     	;# 
   361  0092                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0094                     	;# 
   366  0095                     	;# 
   367  0096                     	;# 
   368  0097                     	;# 
   369  0098                     	;# 
   370  0099                     	;# 
   371  009A                     	;# 
   372  009B                     	;# 
   373  009C                     	;# 
   374  009D                     	;# 
   375  009E                     	;# 
   376  009F                     	;# 
   377  0105                     	;# 
   378  0107                     	;# 
   379  0108                     	;# 
   380  0109                     	;# 
   381  010C                     	;# 
   382  010C                     	;# 
   383  010D                     	;# 
   384  010E                     	;# 
   385  010F                     	;# 
   386  0185                     	;# 
   387  0187                     	;# 
   388  0188                     	;# 
   389  0189                     	;# 
   390  018C                     	;# 
   391  018D                     	;# 
   392  0000                     	;# 
   393  0001                     	;# 
   394  0002                     	;# 
   395  0003                     	;# 
   396  0004                     	;# 
   397  0005                     	;# 
   398  0006                     	;# 
   399  0007                     	;# 
   400  0008                     	;# 
   401  0009                     	;# 
   402  000A                     	;# 
   403  000B                     	;# 
   404  000C                     	;# 
   405  000D                     	;# 
   406  000E                     	;# 
   407  000E                     	;# 
   408  000F                     	;# 
   409  0010                     	;# 
   410  0011                     	;# 
   411  0012                     	;# 
   412  0013                     	;# 
   413  0014                     	;# 
   414  0015                     	;# 
   415  0015                     	;# 
   416  0016                     	;# 
   417  0017                     	;# 
   418  0018                     	;# 
   419  0019                     	;# 
   420  001A                     	;# 
   421  001B                     	;# 
   422  001B                     	;# 
   423  001C                     	;# 
   424  001D                     	;# 
   425  001E                     	;# 
   426  001F                     	;# 
   427  0081                     	;# 
   428  0085                     	;# 
   429  0086                     	;# 
   430  0087                     	;# 
   431  0088                     	;# 
   432  0089                     	;# 
   433  008C                     	;# 
   434  008D                     	;# 
   435  008E                     	;# 
   436  008F                     	;# 
   437  0090                     	;# 
   438  0091                     	;# 
   439  0092                     	;# 
   440  0093                     	;# 
   441  0093                     	;# 
   442  0093                     	;# 
   443  0094                     	;# 
   444  0095                     	;# 
   445  0096                     	;# 
   446  0097                     	;# 
   447  0098                     	;# 
   448  0099                     	;# 
   449  009A                     	;# 
   450  009B                     	;# 
   451  009C                     	;# 
   452  009D                     	;# 
   453  009E                     	;# 
   454  009F                     	;# 
   455  0105                     	;# 
   456  0107                     	;# 
   457  0108                     	;# 
   458  0109                     	;# 
   459  010C                     	;# 
   460  010C                     	;# 
   461  010D                     	;# 
   462  010E                     	;# 
   463  010F                     	;# 
   464  0185                     	;# 
   465  0187                     	;# 
   466  0188                     	;# 
   467  0189                     	;# 
   468  018C                     	;# 
   469  018D                     	;# 
   470                           
   471                           	psect	idataBANK1
   472  0887                     __pidataBANK1:
   473                           
   474                           ;initializer for _pwmFrecuencia
   475  0887  3488               	retlw	136
   476  0888  3413               	retlw	19
   477  0889  3400               	retlw	0
   478  088A  3400               	retlw	0
   479                           
   480                           	psect	strings
   481  0800                     __pstrings:
   482  0800                     stringtab:
   483  0800                     __stringtab:
   484                           
   485                           ;	String table - string pointers are 1 byte each
   486  0800  1BFF               	btfsc	btemp+1,7
   487  0801  280A               	ljmp	stringcode
   488  0802  1383               	bcf	3,7
   489  0803  187F               	btfsc	btemp+1,0
   490  0804  1783               	bsf	3,7
   491  0805  0800               	movf	0,w
   492  0806  0A84               	incf	4,f
   493  0807  1903               	skipnz
   494  0808  0AFF               	incf	btemp+1,f
   495  0809  0008               	return
   496  080A                     stringcode:
   497  080A                     stringdir:
   498  080A  3008               	movlw	high stringdir
   499  080B  008A               	movwf	10
   500  080C  0804               	movf	4,w
   501  080D  0A84               	incf	4,f
   502  080E  0782               	addwf	2,f
   503  080F                     __stringbase:
   504  080F  3400               	retlw	0
   505  0810                     __end_of__stringtab:
   506  0810                     _dpowers:
   507  0810  3401               	retlw	1
   508  0811  3400               	retlw	0
   509  0812  340A               	retlw	10
   510  0813  3400               	retlw	0
   511  0814  3464               	retlw	100
   512  0815  3400               	retlw	0
   513  0816  34E8               	retlw	232
   514  0817  3403               	retlw	3
   515  0818  3410               	retlw	16
   516  0819  3427               	retlw	39
   517  081A                     __end_of_dpowers:
   518  001A                     _RCREG	set	26
   519  0018                     _RCSTAbits	set	24
   520  0019                     _TXREG	set	25
   521  0018                     _RCSTA	set	24
   522  0008                     _PORTDbits	set	8
   523  0008                     _PORTD	set	8
   524  001F                     _ADCON0bits	set	31
   525  001F                     _ADCON0	set	31
   526  001E                     _ADRESH	set	30
   527  001B                     _CCPR2L	set	27
   528  0015                     _CCPR1L	set	21
   529  00C4                     _CREN	set	196
   530  0065                     _RCIF	set	101
   531  0064                     _TXIF	set	100
   532  00F9                     _GO	set	249
   533  00F8                     _ADON	set	248
   534  00EC                     _DC2B0	set	236
   535  00ED                     _DC2B1	set	237
   536  00EA                     _CCP2M2	set	234
   537  00EB                     _CCP2M3	set	235
   538  00BC                     _DC1B0	set	188
   539  00BD                     _DC1B1	set	189
   540  0092                     _TMR2ON	set	146
   541  0091                     _T2CKPS1	set	145
   542  0090                     _T2CKPS0	set	144
   543  00BA                     _CCP1M2	set	186
   544  00BB                     _CCP1M3	set	187
   545  0098                     _TXSTA	set	152
   546  0099                     _SPBRG	set	153
   547  0088                     _TRISD	set	136
   548  009E                     _ADRESL	set	158
   549  009F                     _ADCON1bits	set	159
   550  0086                     _TRISB	set	134
   551  0087                     _TRISC	set	135
   552  0089                     _TRISE	set	137
   553  0092                     _PR2	set	146
   554  008F                     _OSCCON	set	143
   555  043F                     _TRISC7	set	1087
   556  043E                     _TRISC6	set	1086
   557  042A                     _TRISA2	set	1066
   558  0429                     _TRISA1	set	1065
   559  0428                     _TRISA0	set	1064
   560  043A                     _TRISC2	set	1082
   561  0432                     _TRISB2	set	1074
   562  0188                     _ANSEL	set	392
   563  081A                     STR_1:
   564  081A  3453               	retlw	83	;'S'
   565  081B  3469               	retlw	105	;'i'
   566  081C  3473               	retlw	115	;'s'
   567  081D  3474               	retlw	116	;'t'
   568  081E  3465               	retlw	101	;'e'
   569  081F  346D               	retlw	109	;'m'
   570  0820  3461               	retlw	97	;'a'
   571  0821  344C               	retlw	76	;'L'
   572  0822  3475               	retlw	117	;'u'
   573  0823  347A               	retlw	122	;'z'
   574  0824  3420               	retlw	32	;' '
   575  0825  340D               	retlw	13
   576  0826  340A               	retlw	10
   577  0827  3400               	retlw	0
   578  0828                     STR_18:
   579  0828  344C               	retlw	76	;'L'
   580  0829  3432               	retlw	50	;'2'
   581  082A  343A               	retlw	58	;':'
   582  082B  344F               	retlw	79	;'O'
   583  082C  3446               	retlw	70	;'F'
   584  082D  3446               	retlw	70	;'F'
   585  082E  3420               	retlw	32	;' '
   586  082F  3420               	retlw	32	;' '
   587  0830  340D               	retlw	13
   588  0831  340A               	retlw	10
   589  0832  3400               	retlw	0
   590  0833                     STR_16:
   591  0833  344C               	retlw	76	;'L'
   592  0834  3432               	retlw	50	;'2'
   593  0835  343A               	retlw	58	;':'
   594  0836  3420               	retlw	32	;' '
   595  0837  344F               	retlw	79	;'O'
   596  0838  344E               	retlw	78	;'N'
   597  0839  340D               	retlw	13
   598  083A  340A               	retlw	10
   599  083B  3400               	retlw	0
   600  083C                     STR_2:
   601  083C  344C               	retlw	76	;'L'
   602  083D  3445               	retlw	69	;'E'
   603  083E  3444               	retlw	68	;'D'
   604  083F  3453               	retlw	83	;'S'
   605  0840  342E               	retlw	46	;'.'
   606  0841  342E               	retlw	46	;'.'
   607  0842  342E               	retlw	46	;'.'
   608  0843  3400               	retlw	0
   609  0844                     STR_12:
   610  0844  344C               	retlw	76	;'L'
   611  0845  3431               	retlw	49	;'1'
   612  0846  343A               	retlw	58	;':'
   613  0847  3420               	retlw	32	;' '
   614  0848  344F               	retlw	79	;'O'
   615  0849  3446               	retlw	70	;'F'
   616  084A  3446               	retlw	70	;'F'
   617  084B  3400               	retlw	0
   618  084C                     STR_17:
   619  084C  344C               	retlw	76	;'L'
   620  084D  3432               	retlw	50	;'2'
   621  084E  343A               	retlw	58	;':'
   622  084F  3420               	retlw	32	;' '
   623  0850  344F               	retlw	79	;'O'
   624  0851  3446               	retlw	70	;'F'
   625  0852  3446               	retlw	70	;'F'
   626  0853  3400               	retlw	0
   627  0854                     STR_9:
   628  0854  344C               	retlw	76	;'L'
   629  0855  3431               	retlw	49	;'1'
   630  0856  343A               	retlw	58	;':'
   631  0857  3420               	retlw	32	;' '
   632  0858  344F               	retlw	79	;'O'
   633  0859  344E               	retlw	78	;'N'
   634  085A  3400               	retlw	0
   635  085B                     STR_15:
   636  085B  344C               	retlw	76	;'L'
   637  085C  3432               	retlw	50	;'2'
   638  085D  343A               	retlw	58	;':'
   639  085E  3420               	retlw	32	;' '
   640  085F  344F               	retlw	79	;'O'
   641  0860  344E               	retlw	78	;'N'
   642  0861  3400               	retlw	0
   643  0862                     STR_5:
   644  0862  344C               	retlw	76	;'L'
   645  0863  3475               	retlw	117	;'u'
   646  0864  347A               	retlw	122	;'z'
   647  0865  343A               	retlw	58	;':'
   648  0866  3420               	retlw	32	;' '
   649  0867  3400               	retlw	0
   650  0868                     STR_3:
   651  0868  3425               	retlw	37	;'%'
   652  0869  3464               	retlw	100	;'d'
   653  086A  3420               	retlw	32	;' '
   654  086B  3400               	retlw	0
   655  086C                     STR_4:
   656  086C  344C               	retlw	76	;'L'
   657  086D  343A               	retlw	58	;':'
   658  086E  3400               	retlw	0
   659  086F                     STR_7:
   660  086F  3425               	retlw	37	;'%'
   661  0870  3464               	retlw	100	;'d'
   662  0871  3400               	retlw	0
   663  0872                     STR_6:
   664  0872  342C               	retlw	44	;','
   665  0873  3400               	retlw	0
   666  0872                     
   667                           	psect	cinit
   668  07CD                     start_initialization:	
   669                           ; #config settings
   670                           
   671  07CD                     __initialization:
   672                           
   673                           ; Initialize objects allocated to BANK1
   674  07CD  1683               	bsf	3,5	;RP0=1, select bank1
   675  07CE  1303               	bcf	3,6	;RP1=0, select bank1
   676  07CF  120A  158A  2087  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   677  07D4  00DF               	movwf	__pdataBANK1& (0+127)
   678  07D5  120A  158A  2088  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   679  07DA  00E0               	movwf	(__pdataBANK1+1)& (0+127)
   680  07DB  120A  158A  2089  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   681  07E0  00E1               	movwf	(__pdataBANK1+2)& (0+127)
   682  07E1  120A  158A  208A  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   683  07E6  00E2               	movwf	(__pdataBANK1+3)& (0+127)
   684                           
   685                           ; Clear objects allocated to BANK3
   686  07E7  1783               	bsf	3,7	;select IRP bank2
   687  07E8  3090               	movlw	low __pbssBANK3
   688  07E9  0084               	movwf	4
   689  07EA  30C2               	movlw	low (__pbssBANK3+50)
   690  07EB  120A  158A  208B  120A  118A  	fcall	clear_ram0
   691                           
   692                           ; Clear objects allocated to BANK1
   693  07F0  1383               	bcf	3,7	;select IRP bank0
   694  07F1  30A0               	movlw	low __pbssBANK1
   695  07F2  0084               	movwf	4
   696  07F3  30D6               	movlw	low (__pbssBANK1+54)
   697  07F4  120A  158A  208B  120A  118A  	fcall	clear_ram0
   698                           
   699                           ; Clear objects allocated to BANK0
   700  07F9  1283               	bcf	3,5	;RP0=0, select bank0
   701  07FA  1303               	bcf	3,6	;RP1=0, select bank0
   702  07FB  01EF               	clrf	__pbssBANK0& (0+127)
   703  07FC                     end_of_initialization:	
   704                           ;End of C runtime variable initialization code
   705                           
   706  07FC                     __end_of__initialization:
   707  07FC  0183               	clrf	3
   708  07FD  120A  118A  29E0   	ljmp	_main	;jump to C main() function
   709                           
   710                           	psect	bssBANK0
   711  006F                     __pbssBANK0:
   712  006F                     _idx:
   713  006F                     	ds	1
   714                           
   715                           	psect	bssBANK1
   716  00A0                     __pbssBANK1:
   717  00A0                     _Fila2:
   718  00A0                     	ds	16
   719  00B0                     _Fila1:
   720  00B0                     	ds	16
   721  00C0                     _bloque2:
   722  00C0                     	ds	4
   723  00C4                     _bloque1:
   724  00C4                     	ds	4
   725  00C8                     _sensorLuz:
   726  00C8                     	ds	4
   727  00CC                     _luz:
   728  00CC                     	ds	4
   729  00D0                     _sensorSalida2:
   730  00D0                     	ds	3
   731  00D3                     _sensorSalida1:
   732  00D3                     	ds	3
   733                           
   734                           	psect	dataBANK1
   735  00DF                     __pdataBANK1:
   736  00DF                     _pwmFrecuencia:
   737  00DF                     	ds	4
   738                           
   739                           	psect	bssBANK3
   740  0190                     __pbssBANK3:
   741  0190                     _stringBT:
   742  0190                     	ds	50
   743                           
   744                           	psect	clrtext
   745  088B                     clear_ram0:	
   746                           ;	Called with FSR containing the base address, and
   747                           ;	W with the last address+1
   748                           
   749  088B  0064               	clrwdt	;clear the watchdog before getting into this loop
   750  088C                     clrloop0:
   751  088C  0180               	clrf	0	;clear RAM location pointed to by FSR
   752  088D  0A84               	incf	4,f	;increment pointer
   753  088E  0604               	xorwf	4,w	;XOR with final address
   754  088F  1903               	btfsc	3,2	;have we reached the end yet?
   755  0890  3400               	retlw	0	;all done for this memory range, return
   756  0891  0604               	xorwf	4,w	;XOR again to restore value
   757  0892  288C               	goto	clrloop0	;do the next byte
   758                           
   759                           	psect	cstackBANK1
   760  00D6                     __pcstackBANK1:
   761  00D6                     ?_PWM_Duty:
   762  00D6                     ?_PWM_Duty2:	
   763                           ; 2 bytes @ 0x0
   764                           
   765  00D6                     PWM_Duty@duty:	
   766                           ; 2 bytes @ 0x0
   767                           
   768  00D6                     PWM_Duty2@duty:	
   769                           ; 2 bytes @ 0x0
   770                           
   771                           
   772                           ; 2 bytes @ 0x0
   773  00D6                     	ds	2
   774  00D8                     ??_PWM_Duty:
   775  00D8                     ??_PWM_Duty2:	
   776                           ; 1 bytes @ 0x2
   777                           
   778                           
   779                           ; 1 bytes @ 0x2
   780  00D8                     	ds	4
   781  00DC                     ??_main:
   782                           
   783                           ; 1 bytes @ 0x6
   784  00DC                     	ds	3
   785                           
   786                           	psect	cstackCOMMON
   787  0070                     __pcstackCOMMON:
   788  0070                     ?_LCD_Init:
   789  0070                     ?_ADC_Init:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0070                     ??_ADC_Init:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0070                     ?_LCD_Clear:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ?_strcpy:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ?_strcat:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ?_LCD_Command:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     ??_LCD_Command:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     ?_main:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ?_LCD_Char:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ??_LCD_Char:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     ?_USART_TxChar:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ??_USART_TxChar:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_ADC_Read:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?__Umul8_16:	
   829                           ; 2 bytes @ 0x0
   830                           
   831  0070                     ?_PWM_Inicializar:	
   832                           ; 2 bytes @ 0x0
   833                           
   834  0070                     ?_PWM_Inicializar2:	
   835                           ; 2 bytes @ 0x0
   836                           
   837  0070                     ?___lwdiv:	
   838                           ; 2 bytes @ 0x0
   839                           
   840  0070                     ?___aldiv:	
   841                           ; 2 bytes @ 0x0
   842                           
   843  0070                     USART_TxChar@out:	
   844                           ; 4 bytes @ 0x0
   845                           
   846  0070                     __Umul8_16@multiplicand:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     strcat@from:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     strcpy@from:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ADC_Read@channel:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ___lwdiv@divisor:	
   859                           ; 2 bytes @ 0x0
   860                           
   861  0070                     ___aldiv@divisor:	
   862                           ; 2 bytes @ 0x0
   863                           
   864                           
   865                           ; 4 bytes @ 0x0
   866  0070                     	ds	1
   867  0071                     ?_USART_SendString:
   868  0071                     ??_strcpy:	
   869                           ; 1 bytes @ 0x1
   870                           
   871  0071                     ??_strcat:	
   872                           ; 1 bytes @ 0x1
   873                           
   874  0071                     USART_SendString@out:	
   875                           ; 1 bytes @ 0x1
   876                           
   877                           
   878                           ; 2 bytes @ 0x1
   879  0071                     	ds	1
   880  0072                     ??_ADC_Read:
   881  0072                     ??__Umul8_16:	
   882                           ; 1 bytes @ 0x2
   883                           
   884  0072                     LCD_Command@cmd:	
   885                           ; 1 bytes @ 0x2
   886                           
   887  0072                     LCD_Char@dat:	
   888                           ; 1 bytes @ 0x2
   889                           
   890  0072                     strcat@cp:	
   891                           ; 1 bytes @ 0x2
   892                           
   893  0072                     strcpy@to:	
   894                           ; 1 bytes @ 0x2
   895                           
   896  0072                     ___lwdiv@dividend:	
   897                           ; 1 bytes @ 0x2
   898                           
   899                           
   900                           ; 2 bytes @ 0x2
   901  0072                     	ds	1
   902  0073                     ??_USART_SendString:
   903  0073                     ??_LCD_Init:	
   904                           ; 1 bytes @ 0x3
   905                           
   906  0073                     ??_LCD_Clear:	
   907                           ; 1 bytes @ 0x3
   908                           
   909  0073                     ?_LCD_String:	
   910                           ; 1 bytes @ 0x3
   911                           
   912  0073                     strcat@to:	
   913                           ; 1 bytes @ 0x3
   914                           
   915  0073                     strcpy@cp:	
   916                           ; 1 bytes @ 0x3
   917                           
   918  0073                     LCD_String@msg:	
   919                           ; 1 bytes @ 0x3
   920                           
   921                           
   922                           ; 2 bytes @ 0x3
   923  0073                     	ds	1
   924  0074                     ??___lwdiv:
   925  0074                     __Umul8_16@product:	
   926                           ; 1 bytes @ 0x4
   927                           
   928  0074                     ___aldiv@dividend:	
   929                           ; 2 bytes @ 0x4
   930                           
   931                           
   932                           ; 4 bytes @ 0x4
   933  0074                     	ds	1
   934  0075                     ?_LCD_String_xy:
   935  0075                     ??_LCD_String:	
   936                           ; 1 bytes @ 0x5
   937                           
   938  0075                     LCD_String_xy@pos:	
   939                           ; 1 bytes @ 0x5
   940                           
   941  0075                     ADC_Read@digital:	
   942                           ; 1 bytes @ 0x5
   943                           
   944  0075                     ___lwdiv@quotient:	
   945                           ; 2 bytes @ 0x5
   946                           
   947                           
   948                           ; 2 bytes @ 0x5
   949  0075                     	ds	1
   950  0076                     LCD_String_xy@msg:
   951  0076                     __Umul8_16@word_mpld:	
   952                           ; 1 bytes @ 0x6
   953                           
   954                           
   955                           ; 2 bytes @ 0x6
   956  0076                     	ds	1
   957  0077                     ??_LCD_String_xy:
   958  0077                     ___lwdiv@counter:	
   959                           ; 1 bytes @ 0x7
   960                           
   961                           
   962                           ; 1 bytes @ 0x7
   963  0077                     	ds	1
   964  0078                     ??___aldiv:
   965  0078                     ?___lwmod:	
   966                           ; 1 bytes @ 0x8
   967                           
   968  0078                     LCD_String_xy@row:	
   969                           ; 2 bytes @ 0x8
   970                           
   971  0078                     __Umul8_16@multiplier:	
   972                           ; 1 bytes @ 0x8
   973                           
   974  0078                     ___lwmod@divisor:	
   975                           ; 1 bytes @ 0x8
   976                           
   977                           
   978                           ; 2 bytes @ 0x8
   979  0078                     	ds	1
   980  0079                     ??_USART_Init:
   981  0079                     ??_PWM_Inicializar:	
   982                           ; 1 bytes @ 0x9
   983                           
   984  0079                     ??_PWM_Inicializar2:	
   985                           ; 1 bytes @ 0x9
   986                           
   987  0079                     ??___xxtofl:	
   988                           ; 1 bytes @ 0x9
   989                           
   990  0079                     LCD_String_xy@location:	
   991                           ; 1 bytes @ 0x9
   992                           
   993  0079                     _USART_Init$1010:	
   994                           ; 1 bytes @ 0x9
   995                           
   996                           
   997                           ; 4 bytes @ 0x9
   998  0079                     	ds	1
   999  007A                     ___lwmod@dividend:
  1000                           
  1001                           ; 2 bytes @ 0xA
  1002  007A                     	ds	2
  1003  007C                     ??___lwmod:
  1004                           
  1005                           ; 1 bytes @ 0xC
  1006  007C                     	ds	1
  1007  007D                     ___lwmod@counter:
  1008                           
  1009                           ; 1 bytes @ 0xD
  1010  007D                     	ds	1
  1011                           
  1012                           	psect	cstackBANK0
  1013  0020                     __pcstackBANK0:
  1014  0020                     ?_sprintf:
  1015  0020                     sprintf@f:	
  1016                           ; 2 bytes @ 0x0
  1017                           
  1018  0020                     ___aldiv@counter:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021                           
  1022                           ; 1 bytes @ 0x0
  1023  0020                     	ds	1
  1024  0021                     ___aldiv@sign:
  1025                           
  1026                           ; 1 bytes @ 0x1
  1027  0021                     	ds	1
  1028  0022                     ___aldiv@quotient:
  1029                           
  1030                           ; 4 bytes @ 0x2
  1031  0022                     	ds	1
  1032  0023                     ??_sprintf:
  1033                           
  1034                           ; 1 bytes @ 0x3
  1035  0023                     	ds	3
  1036  0026                     ?_USART_Init:
  1037  0026                     ?___xxtofl:	
  1038                           ; 1 bytes @ 0x6
  1039                           
  1040  0026                     sprintf@ap:	
  1041                           ; 4 bytes @ 0x6
  1042                           
  1043  0026                     USART_Init@baud_rate:	
  1044                           ; 1 bytes @ 0x6
  1045                           
  1046  0026                     ___xxtofl@val:	
  1047                           ; 4 bytes @ 0x6
  1048                           
  1049                           
  1050                           ; 4 bytes @ 0x6
  1051  0026                     	ds	1
  1052  0027                     sprintf@flag:
  1053                           
  1054                           ; 1 bytes @ 0x7
  1055  0027                     	ds	1
  1056  0028                     sprintf@prec:
  1057                           
  1058                           ; 1 bytes @ 0x8
  1059  0028                     	ds	1
  1060  0029                     sprintf@val:
  1061                           
  1062                           ; 2 bytes @ 0x9
  1063  0029                     	ds	1
  1064  002A                     ___xxtofl@sign:
  1065                           
  1066                           ; 1 bytes @ 0xA
  1067  002A                     	ds	1
  1068  002B                     sprintf@sp:
  1069  002B                     ___xxtofl@exp:	
  1070                           ; 1 bytes @ 0xB
  1071                           
  1072                           
  1073                           ; 1 bytes @ 0xB
  1074  002B                     	ds	1
  1075  002C                     sprintf@c:
  1076  002C                     ___xxtofl@arg:	
  1077                           ; 1 bytes @ 0xC
  1078                           
  1079                           
  1080                           ; 4 bytes @ 0xC
  1081  002C                     	ds	4
  1082  0030                     ?___fldiv:
  1083  0030                     ___fldiv@a:	
  1084                           ; 4 bytes @ 0x10
  1085                           
  1086                           
  1087                           ; 4 bytes @ 0x10
  1088  0030                     	ds	4
  1089  0034                     ___fldiv@b:
  1090                           
  1091                           ; 4 bytes @ 0x14
  1092  0034                     	ds	4
  1093  0038                     ??___fldiv:
  1094                           
  1095                           ; 1 bytes @ 0x18
  1096  0038                     	ds	5
  1097  003D                     ___fldiv@rem:
  1098                           
  1099                           ; 4 bytes @ 0x1D
  1100  003D                     	ds	4
  1101  0041                     ___fldiv@sign:
  1102                           
  1103                           ; 1 bytes @ 0x21
  1104  0041                     	ds	1
  1105  0042                     ___fldiv@new_exp:
  1106                           
  1107                           ; 2 bytes @ 0x22
  1108  0042                     	ds	2
  1109  0044                     ___fldiv@grs:
  1110                           
  1111                           ; 4 bytes @ 0x24
  1112  0044                     	ds	4
  1113  0048                     ___fldiv@bexp:
  1114                           
  1115                           ; 1 bytes @ 0x28
  1116  0048                     	ds	1
  1117  0049                     ___fldiv@aexp:
  1118                           
  1119                           ; 1 bytes @ 0x29
  1120  0049                     	ds	1
  1121  004A                     ?___flmul:
  1122  004A                     ___flmul@b:	
  1123                           ; 4 bytes @ 0x2A
  1124                           
  1125                           
  1126                           ; 4 bytes @ 0x2A
  1127  004A                     	ds	4
  1128  004E                     ___flmul@a:
  1129                           
  1130                           ; 4 bytes @ 0x2E
  1131  004E                     	ds	4
  1132  0052                     ??___flmul:
  1133                           
  1134                           ; 1 bytes @ 0x32
  1135  0052                     	ds	5
  1136  0057                     ___flmul@sign:
  1137                           
  1138                           ; 1 bytes @ 0x37
  1139  0057                     	ds	1
  1140  0058                     ___flmul@grs:
  1141                           
  1142                           ; 4 bytes @ 0x38
  1143  0058                     	ds	4
  1144  005C                     ___flmul@aexp:
  1145                           
  1146                           ; 1 bytes @ 0x3C
  1147  005C                     	ds	1
  1148  005D                     ___flmul@bexp:
  1149                           
  1150                           ; 1 bytes @ 0x3D
  1151  005D                     	ds	1
  1152  005E                     ___flmul@prod:
  1153                           
  1154                           ; 4 bytes @ 0x3E
  1155  005E                     	ds	4
  1156  0062                     ___flmul@temp:
  1157                           
  1158                           ; 2 bytes @ 0x42
  1159  0062                     	ds	2
  1160  0064                     ?___fltol:
  1161  0064                     ___fltol@f1:	
  1162                           ; 4 bytes @ 0x44
  1163                           
  1164                           
  1165                           ; 4 bytes @ 0x44
  1166  0064                     	ds	4
  1167  0068                     ??___fltol:
  1168                           
  1169                           ; 1 bytes @ 0x48
  1170  0068                     	ds	5
  1171  006D                     ___fltol@sign1:
  1172                           
  1173                           ; 1 bytes @ 0x4D
  1174  006D                     	ds	1
  1175  006E                     ___fltol@exp1:
  1176                           
  1177                           ; 1 bytes @ 0x4E
  1178  006E                     	ds	1
  1179                           
  1180                           	psect	maintext
  1181  01E0                     __pmaintext:	
  1182 ;;
  1183 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1184 ;;
  1185 ;; *************** function _main *****************
  1186 ;; Defined at:
  1187 ;;		line 74 in file "elnewmain.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;		None
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;		None
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : B00/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1201 ;;      Params:         0       0       0       0       0
  1202 ;;      Locals:         0       0       0       0       0
  1203 ;;      Temps:          0       0       3       0       0
  1204 ;;      Totals:         0       0       3       0       0
  1205 ;;Total ram usage:        3 bytes
  1206 ;; Hardware stack levels required when called: 3
  1207 ;; This function calls:
  1208 ;;		_ADC_Init
  1209 ;;		_ADC_Read
  1210 ;;		_LCD_Clear
  1211 ;;		_LCD_Init
  1212 ;;		_LCD_String
  1213 ;;		_LCD_String_xy
  1214 ;;		_PWM_Duty
  1215 ;;		_PWM_Duty2
  1216 ;;		_PWM_Inicializar
  1217 ;;		_PWM_Inicializar2
  1218 ;;		_USART_Init
  1219 ;;		_USART_SendString
  1220 ;;		_sprintf
  1221 ;;		_strcat
  1222 ;;		_strcpy
  1223 ;; This function is called by:
  1224 ;;		Startup code after reset
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228  01E0                     _main:	
  1229                           ;psect for function _main
  1230                           
  1231  01E0                     l2435:	
  1232                           ;incstack = 0
  1233                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1234                           
  1235                           
  1236                           ;elnewmain.c: 76:     OSCCON = 0x71;
  1237  01E0  3071               	movlw	113
  1238  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  1239  01E2  1303               	bcf	3,6	;RP1=0, select bank1
  1240  01E3  008F               	movwf	15	;volatile
  1241  01E4                     l2437:
  1242                           
  1243                           ;elnewmain.c: 77:     TRISE = 0x00;
  1244  01E4  0189               	clrf	9	;volatile
  1245  01E5                     l2439:
  1246                           
  1247                           ;elnewmain.c: 78:     TRISC = 0x00;
  1248  01E5  0187               	clrf	7	;volatile
  1249  01E6                     l2441:
  1250                           
  1251                           ;elnewmain.c: 79:     TRISB = 0x00;
  1252  01E6  0186               	clrf	6	;volatile
  1253  01E7                     l2443:
  1254                           
  1255                           ;elnewmain.c: 80:     ANSEL = 0x07;
  1256  01E7  3007               	movlw	7
  1257  01E8  1683               	bsf	3,5	;RP0=1, select bank3
  1258  01E9  1703               	bsf	3,6	;RP1=1, select bank3
  1259  01EA  0088               	movwf	8	;volatile
  1260  01EB                     l2445:
  1261                           
  1262                           ;elnewmain.c: 82:     USART_Init(9600);
  1263  01EB  3000               	movlw	0
  1264  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1265  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1266  01EE  00A9               	movwf	USART_Init@baud_rate+3
  1267  01EF  3000               	movlw	0
  1268  01F0  00A8               	movwf	USART_Init@baud_rate+2
  1269  01F1  3025               	movlw	37
  1270  01F2  00A7               	movwf	USART_Init@baud_rate+1
  1271  01F3  3080               	movlw	128
  1272  01F4  00A6               	movwf	USART_Init@baud_rate
  1273  01F5  120A  158A  233F  120A  118A  	fcall	_USART_Init
  1274  01FA                     l2447:
  1275                           
  1276                           ;elnewmain.c: 83:     USART_SendString("SistemaLuz \r\n");
  1277  01FA  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1278  01FB  00F1               	movwf	USART_SendString@out
  1279  01FC  3080               	movlw	128
  1280  01FD  00F2               	movwf	USART_SendString@out+1
  1281  01FE  120A  158A  2106  120A  118A  	fcall	_USART_SendString
  1282  0203                     l2449:
  1283                           
  1284                           ;elnewmain.c: 85:     LCD_Init();
  1285  0203  120A  158A  2153  120A  118A  	fcall	_LCD_Init
  1286  0208                     l2451:
  1287                           
  1288                           ;elnewmain.c: 86:     ADC_Init();
  1289  0208  120A  158A  20AD  120A  118A  	fcall	_ADC_Init
  1290  020D                     l2453:
  1291                           
  1292                           ;elnewmain.c: 87:     PWM_Inicializar();
  1293  020D  120A  158A  22B9  120A  118A  	fcall	_PWM_Inicializar
  1294  0212                     l2455:
  1295                           
  1296                           ;elnewmain.c: 88:     PWM_Inicializar2();
  1297  0212  120A  158A  22FC  120A  118A  	fcall	_PWM_Inicializar2
  1298  0217                     l2457:
  1299                           
  1300                           ;elnewmain.c: 89:     PWM_Duty(0);
  1301  0217  3000               	movlw	0
  1302  0218  1683               	bsf	3,5	;RP0=1, select bank1
  1303  0219  1303               	bcf	3,6	;RP1=0, select bank1
  1304  021A  00D6               	movwf	PWM_Duty@duty^(0+128)
  1305  021B  00D7               	movwf	(PWM_Duty@duty+1)^(0+128)
  1306  021C  120A  158A  259C  120A  118A  	fcall	_PWM_Duty
  1307  0221                     l2459:
  1308                           
  1309                           ;elnewmain.c: 90:     PWM_Duty2(0);
  1310  0221  3000               	movlw	0
  1311  0222  1683               	bsf	3,5	;RP0=1, select bank1
  1312  0223  1303               	bcf	3,6	;RP1=0, select bank1
  1313  0224  00D6               	movwf	PWM_Duty2@duty^(0+128)
  1314  0225  00D7               	movwf	(PWM_Duty2@duty+1)^(0+128)
  1315  0226  120A  158A  265A  120A  118A  	fcall	_PWM_Duty2
  1316  022B                     l2461:
  1317                           
  1318                           ;elnewmain.c: 91:     _delay((unsigned long)((5000)*(8000000/4000.0)));
  1319  022B  3033               	movlw	51
  1320  022C  1683               	bsf	3,5	;RP0=1, select bank1
  1321  022D  1303               	bcf	3,6	;RP1=0, select bank1
  1322  022E  00DE               	movwf	(??_main^(0+128)+2)
  1323  022F  30BB               	movlw	187
  1324  0230  00DD               	movwf	(??_main^(0+128)+1)
  1325  0231  30DF               	movlw	223
  1326  0232  00DC               	movwf	??_main^(0+128)
  1327  0233                     u3037:
  1328  0233  0BDC               	decfsz	??_main^(0+128),f
  1329  0234  2A33               	goto	u3037
  1330  0235  0BDD               	decfsz	(??_main^(0+128)+1),f
  1331  0236  2A33               	goto	u3037
  1332  0237  0BDE               	decfsz	(??_main^(0+128)+2),f
  1333  0238  2A33               	goto	u3037
  1334  0239                     l2463:
  1335                           
  1336                           ;elnewmain.c: 92:     LCD_String_xy(1,0,"LEDS...");
  1337  0239  01F5               	clrf	LCD_String_xy@pos
  1338  023A  302D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1339  023B  1683               	bsf	3,5	;RP0=1, select bank1
  1340  023C  1303               	bcf	3,6	;RP1=0, select bank1
  1341  023D  00DC               	movwf	??_main^(0+128)
  1342  023E  085C               	movf	??_main^(0+128),w
  1343  023F  00F6               	movwf	LCD_String_xy@msg
  1344  0240  3001               	movlw	1
  1345  0241  120A  158A  217D  120A  118A  	fcall	_LCD_String_xy
  1346  0246                     l2465:
  1347                           
  1348                           ;elnewmain.c: 93:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1349  0246  3015               	movlw	21
  1350  0247  1683               	bsf	3,5	;RP0=1, select bank1
  1351  0248  1303               	bcf	3,6	;RP1=0, select bank1
  1352  0249  00DE               	movwf	(??_main^(0+128)+2)
  1353  024A  304B               	movlw	75
  1354  024B  00DD               	movwf	(??_main^(0+128)+1)
  1355  024C  30BD               	movlw	189
  1356  024D  00DC               	movwf	??_main^(0+128)
  1357  024E                     u3047:
  1358  024E  0BDC               	decfsz	??_main^(0+128),f
  1359  024F  2A4E               	goto	u3047
  1360  0250  0BDD               	decfsz	(??_main^(0+128)+1),f
  1361  0251  2A4E               	goto	u3047
  1362  0252  0BDE               	decfsz	(??_main^(0+128)+2),f
  1363  0253  2A4E               	goto	u3047
  1364  0254  2A55               	nop2
  1365  0255                     l2467:
  1366                           
  1367                           ;elnewmain.c: 94:     LCD_Clear();
  1368  0255  120A  158A  209D  120A  118A  	fcall	_LCD_Clear
  1369  025A                     l2469:
  1370                           
  1371                           ;elnewmain.c: 98:        sensorLuz = ADC_Read(0);
  1372  025A  3000               	movlw	0
  1373  025B  00F0               	movwf	ADC_Read@channel
  1374  025C  00F1               	movwf	ADC_Read@channel+1
  1375  025D  120A  158A  227C  120A  118A  	fcall	_ADC_Read
  1376  0262  0870               	movf	?_ADC_Read,w
  1377  0263  1683               	bsf	3,5	;RP0=1, select bank1
  1378  0264  1303               	bcf	3,6	;RP1=0, select bank1
  1379  0265  00C8               	movwf	_sensorLuz^(0+128)
  1380  0266  0871               	movf	?_ADC_Read+1,w
  1381  0267  00C9               	movwf	(_sensorLuz+1)^(0+128)
  1382  0268  3000               	movlw	0
  1383  0269  1BC9               	btfsc	(_sensorLuz+1)^(0+128),7
  1384  026A  30FF               	movlw	255
  1385  026B  00CA               	movwf	(_sensorLuz+2)^(0+128)
  1386  026C  00CB               	movwf	(_sensorLuz+3)^(0+128)
  1387  026D                     l2471:
  1388                           
  1389                           ;elnewmain.c: 99:        _delay((unsigned long)((400)*(8000000/4000.0)));
  1390  026D  3005               	movlw	5
  1391  026E  1683               	bsf	3,5	;RP0=1, select bank1
  1392  026F  1303               	bcf	3,6	;RP1=0, select bank1
  1393  0270  00DE               	movwf	(??_main^(0+128)+2)
  1394  0271  300F               	movlw	15
  1395  0272  00DD               	movwf	(??_main^(0+128)+1)
  1396  0273  30F0               	movlw	240
  1397  0274  00DC               	movwf	??_main^(0+128)
  1398  0275                     u3057:
  1399  0275  0BDC               	decfsz	??_main^(0+128),f
  1400  0276  2A75               	goto	u3057
  1401  0277  0BDD               	decfsz	(??_main^(0+128)+1),f
  1402  0278  2A75               	goto	u3057
  1403  0279  0BDE               	decfsz	(??_main^(0+128)+2),f
  1404  027A  2A75               	goto	u3057
  1405  027B  0000               	nop
  1406  027C                     l2473:
  1407                           
  1408                           ;elnewmain.c: 100:        bloque1 = ADC_Read(1);
  1409  027C  3001               	movlw	1
  1410  027D  00F0               	movwf	ADC_Read@channel
  1411  027E  3000               	movlw	0
  1412  027F  00F1               	movwf	ADC_Read@channel+1
  1413  0280  120A  158A  227C  120A  118A  	fcall	_ADC_Read
  1414  0285  0870               	movf	?_ADC_Read,w
  1415  0286  1683               	bsf	3,5	;RP0=1, select bank1
  1416  0287  1303               	bcf	3,6	;RP1=0, select bank1
  1417  0288  00C4               	movwf	_bloque1^(0+128)
  1418  0289  0871               	movf	?_ADC_Read+1,w
  1419  028A  00C5               	movwf	(_bloque1+1)^(0+128)
  1420  028B  3000               	movlw	0
  1421  028C  1BC5               	btfsc	(_bloque1+1)^(0+128),7
  1422  028D  30FF               	movlw	255
  1423  028E  00C6               	movwf	(_bloque1+2)^(0+128)
  1424  028F  00C7               	movwf	(_bloque1+3)^(0+128)
  1425  0290                     l2475:
  1426                           
  1427                           ;elnewmain.c: 101:        _delay((unsigned long)((400)*(8000000/4000.0)));
  1428  0290  3005               	movlw	5
  1429  0291  1683               	bsf	3,5	;RP0=1, select bank1
  1430  0292  1303               	bcf	3,6	;RP1=0, select bank1
  1431  0293  00DE               	movwf	(??_main^(0+128)+2)
  1432  0294  300F               	movlw	15
  1433  0295  00DD               	movwf	(??_main^(0+128)+1)
  1434  0296  30F0               	movlw	240
  1435  0297  00DC               	movwf	??_main^(0+128)
  1436  0298                     u3067:
  1437  0298  0BDC               	decfsz	??_main^(0+128),f
  1438  0299  2A98               	goto	u3067
  1439  029A  0BDD               	decfsz	(??_main^(0+128)+1),f
  1440  029B  2A98               	goto	u3067
  1441  029C  0BDE               	decfsz	(??_main^(0+128)+2),f
  1442  029D  2A98               	goto	u3067
  1443  029E  0000               	nop
  1444  029F                     l2477:
  1445                           
  1446                           ;elnewmain.c: 102:        bloque2 = ADC_Read(2);
  1447  029F  3002               	movlw	2
  1448  02A0  00F0               	movwf	ADC_Read@channel
  1449  02A1  3000               	movlw	0
  1450  02A2  00F1               	movwf	ADC_Read@channel+1
  1451  02A3  120A  158A  227C  120A  118A  	fcall	_ADC_Read
  1452  02A8  0870               	movf	?_ADC_Read,w
  1453  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  1454  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  1455  02AB  00C0               	movwf	_bloque2^(0+128)
  1456  02AC  0871               	movf	?_ADC_Read+1,w
  1457  02AD  00C1               	movwf	(_bloque2+1)^(0+128)
  1458  02AE  3000               	movlw	0
  1459  02AF  1BC1               	btfsc	(_bloque2+1)^(0+128),7
  1460  02B0  30FF               	movlw	255
  1461  02B1  00C2               	movwf	(_bloque2+2)^(0+128)
  1462  02B2  00C3               	movwf	(_bloque2+3)^(0+128)
  1463  02B3                     l2479:
  1464                           
  1465                           ;elnewmain.c: 103:         _delay((unsigned long)((400)*(8000000/4000.0)));
  1466  02B3  3005               	movlw	5
  1467  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  1468  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  1469  02B6  00DE               	movwf	(??_main^(0+128)+2)
  1470  02B7  300F               	movlw	15
  1471  02B8  00DD               	movwf	(??_main^(0+128)+1)
  1472  02B9  30F0               	movlw	240
  1473  02BA  00DC               	movwf	??_main^(0+128)
  1474  02BB                     u3077:
  1475  02BB  0BDC               	decfsz	??_main^(0+128),f
  1476  02BC  2ABB               	goto	u3077
  1477  02BD  0BDD               	decfsz	(??_main^(0+128)+1),f
  1478  02BE  2ABB               	goto	u3077
  1479  02BF  0BDE               	decfsz	(??_main^(0+128)+2),f
  1480  02C0  2ABB               	goto	u3077
  1481  02C1  0000               	nop
  1482  02C2                     l2481:
  1483                           
  1484                           ;elnewmain.c: 106:        sprintf(luz,"%d ", (int)(sensorLuz));
  1485  02C2  3059               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1486  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  1487  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  1488  02C5  00DC               	movwf	??_main^(0+128)
  1489  02C6  085C               	movf	??_main^(0+128),w
  1490  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1491  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1492  02C9  00A0               	movwf	sprintf@f
  1493  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1494  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1495  02CC  0849               	movf	(_sensorLuz+1)^(0+128),w
  1496  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1497  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1498  02CF  00A2               	movwf	?_sprintf+2
  1499  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  1500  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  1501  02D2  0848               	movf	_sensorLuz^(0+128),w
  1502  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  1503  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  1504  02D5  00A1               	movwf	?_sprintf+1
  1505  02D6  30CC               	movlw	(low (_luz| 0))& (0+255)
  1506  02D7  120A  158A  2718  120A  118A  	fcall	_sprintf
  1507  02DC                     l2483:
  1508                           
  1509                           ;elnewmain.c: 107:        LCD_String_xy(1,0,"L:");
  1510  02DC  01F5               	clrf	LCD_String_xy@pos
  1511  02DD  305D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1512  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  1513  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  1514  02E0  00DC               	movwf	??_main^(0+128)
  1515  02E1  085C               	movf	??_main^(0+128),w
  1516  02E2  00F6               	movwf	LCD_String_xy@msg
  1517  02E3  3001               	movlw	1
  1518  02E4  120A  158A  217D  120A  118A  	fcall	_LCD_String_xy
  1519  02E9                     l2485:
  1520                           
  1521                           ;elnewmain.c: 108:        LCD_String(luz);
  1522  02E9  30CC               	movlw	(low (_luz| 0))& (0+255)
  1523  02EA  00F3               	movwf	LCD_String@msg
  1524  02EB  3000               	movlw	0
  1525  02EC  00F4               	movwf	LCD_String@msg+1
  1526  02ED  120A  158A  20E0  120A  118A  	fcall	_LCD_String
  1527  02F2                     l2487:
  1528                           
  1529                           ;elnewmain.c: 109:        _delay((unsigned long)((400)*(8000000/4000.0)));
  1530  02F2  3005               	movlw	5
  1531  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  1532  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  1533  02F5  00DE               	movwf	(??_main^(0+128)+2)
  1534  02F6  300F               	movlw	15
  1535  02F7  00DD               	movwf	(??_main^(0+128)+1)
  1536  02F8  30F0               	movlw	240
  1537  02F9  00DC               	movwf	??_main^(0+128)
  1538  02FA                     u3087:
  1539  02FA  0BDC               	decfsz	??_main^(0+128),f
  1540  02FB  2AFA               	goto	u3087
  1541  02FC  0BDD               	decfsz	(??_main^(0+128)+1),f
  1542  02FD  2AFA               	goto	u3087
  1543  02FE  0BDE               	decfsz	(??_main^(0+128)+2),f
  1544  02FF  2AFA               	goto	u3087
  1545  0300  0000               	nop
  1546  0301                     l2489:
  1547                           
  1548                           ;elnewmain.c: 110:        USART_SendString("Luz: ");
  1549  0301  3053               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1550  0302  00F1               	movwf	USART_SendString@out
  1551  0303  3080               	movlw	128
  1552  0304  00F2               	movwf	USART_SendString@out+1
  1553  0305  120A  158A  2106  120A  118A  	fcall	_USART_SendString
  1554  030A                     l2491:
  1555                           
  1556                           ;elnewmain.c: 111:        strcpy(stringBT, luz);
  1557  030A  30CC               	movlw	(low (_luz| 0))& (0+255)
  1558  030B  1683               	bsf	3,5	;RP0=1, select bank1
  1559  030C  1303               	bcf	3,6	;RP1=0, select bank1
  1560  030D  00DC               	movwf	??_main^(0+128)
  1561  030E  085C               	movf	??_main^(0+128),w
  1562  030F  00F0               	movwf	strcpy@from
  1563  0310  3090               	movlw	(low (_stringBT| (0+256)))& (0+255)
  1564  0311  120A  158A  20C2  120A  118A  	fcall	_strcpy
  1565  0316                     l2493:
  1566                           
  1567                           ;elnewmain.c: 112:        strcat(stringBT, ",");
  1568  0316  3063               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1569  0317  1683               	bsf	3,5	;RP0=1, select bank1
  1570  0318  1303               	bcf	3,6	;RP1=0, select bank1
  1571  0319  00DC               	movwf	??_main^(0+128)
  1572  031A  085C               	movf	??_main^(0+128),w
  1573  031B  00F0               	movwf	strcat@from
  1574  031C  3090               	movlw	(low (_stringBT| (0+256)))& (0+255)
  1575  031D  120A  158A  21A9  120A  118A  	fcall	_strcat
  1576  0322                     l2495:
  1577                           
  1578                           ;elnewmain.c: 115:        sprintf(sensorSalida1, "%d", (int)(bloque1));
  1579  0322  3060               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1580  0323  1683               	bsf	3,5	;RP0=1, select bank1
  1581  0324  1303               	bcf	3,6	;RP1=0, select bank1
  1582  0325  00DC               	movwf	??_main^(0+128)
  1583  0326  085C               	movf	??_main^(0+128),w
  1584  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1586  0329  00A0               	movwf	sprintf@f
  1587  032A  1683               	bsf	3,5	;RP0=1, select bank1
  1588  032B  1303               	bcf	3,6	;RP1=0, select bank1
  1589  032C  0845               	movf	(_bloque1+1)^(0+128),w
  1590  032D  1283               	bcf	3,5	;RP0=0, select bank0
  1591  032E  1303               	bcf	3,6	;RP1=0, select bank0
  1592  032F  00A2               	movwf	?_sprintf+2
  1593  0330  1683               	bsf	3,5	;RP0=1, select bank1
  1594  0331  1303               	bcf	3,6	;RP1=0, select bank1
  1595  0332  0844               	movf	_bloque1^(0+128),w
  1596  0333  1283               	bcf	3,5	;RP0=0, select bank0
  1597  0334  1303               	bcf	3,6	;RP1=0, select bank0
  1598  0335  00A1               	movwf	?_sprintf+1
  1599  0336  30D3               	movlw	(low (_sensorSalida1| 0))& (0+255)
  1600  0337  120A  158A  2718  120A  118A  	fcall	_sprintf
  1601  033C                     l2497:
  1602                           
  1603                           ;elnewmain.c: 116:        sprintf(sensorSalida2, "%d", (int)(bloque2));
  1604  033C  3060               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1605  033D  1683               	bsf	3,5	;RP0=1, select bank1
  1606  033E  1303               	bcf	3,6	;RP1=0, select bank1
  1607  033F  00DC               	movwf	??_main^(0+128)
  1608  0340  085C               	movf	??_main^(0+128),w
  1609  0341  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0342  1303               	bcf	3,6	;RP1=0, select bank0
  1611  0343  00A0               	movwf	sprintf@f
  1612  0344  1683               	bsf	3,5	;RP0=1, select bank1
  1613  0345  1303               	bcf	3,6	;RP1=0, select bank1
  1614  0346  0841               	movf	(_bloque2+1)^(0+128),w
  1615  0347  1283               	bcf	3,5	;RP0=0, select bank0
  1616  0348  1303               	bcf	3,6	;RP1=0, select bank0
  1617  0349  00A2               	movwf	?_sprintf+2
  1618  034A  1683               	bsf	3,5	;RP0=1, select bank1
  1619  034B  1303               	bcf	3,6	;RP1=0, select bank1
  1620  034C  0840               	movf	_bloque2^(0+128),w
  1621  034D  1283               	bcf	3,5	;RP0=0, select bank0
  1622  034E  1303               	bcf	3,6	;RP1=0, select bank0
  1623  034F  00A1               	movwf	?_sprintf+1
  1624  0350  30D0               	movlw	(low (_sensorSalida2| 0))& (0+255)
  1625  0351  120A  158A  2718  120A  118A  	fcall	_sprintf
  1626  0356                     l2499:
  1627                           
  1628                           ;elnewmain.c: 121:         if(bloque1 < 400){
  1629  0356  1683               	bsf	3,5	;RP0=1, select bank1
  1630  0357  1303               	bcf	3,6	;RP1=0, select bank1
  1631  0358  1BC7               	btfsc	(_bloque1+3)^(0+128),7
  1632  0359  2B6C               	goto	u3010
  1633  035A  0847               	movf	(_bloque1+3)^(0+128),w
  1634  035B  1D03               	btfss	3,2
  1635  035C  2B6B               	goto	u3011
  1636  035D  0846               	movf	(_bloque1+2)^(0+128),w
  1637  035E  1D03               	btfss	3,2
  1638  035F  2B6B               	goto	u3011
  1639  0360  3001               	movlw	1
  1640  0361  0245               	subwf	(_bloque1+1)^(0+128),w
  1641  0362  1D03               	skipz
  1642  0363  2B68               	goto	u3013
  1643  0364  3090               	movlw	144
  1644  0365  0244               	subwf	_bloque1^(0+128),w
  1645  0366  1D03               	skipz
  1646  0367  2B68               	goto	u3013
  1647  0368                     u3013:
  1648  0368  1803               	btfsc	3,0
  1649  0369  2B6B               	goto	u3011
  1650  036A  2B6C               	goto	u3010
  1651  036B                     u3011:
  1652  036B  2BAF               	goto	l2511
  1653  036C                     u3010:
  1654  036C                     l2501:
  1655                           
  1656                           ;elnewmain.c: 122:             PWM_Duty(sensorLuz);
  1657  036C  1683               	bsf	3,5	;RP0=1, select bank1
  1658  036D  1303               	bcf	3,6	;RP1=0, select bank1
  1659  036E  0849               	movf	(_sensorLuz+1)^(0+128),w
  1660  036F  00D7               	movwf	(PWM_Duty@duty+1)^(0+128)
  1661  0370  0848               	movf	_sensorLuz^(0+128),w
  1662  0371  00D6               	movwf	PWM_Duty@duty^(0+128)
  1663  0372  120A  158A  259C  120A  118A  	fcall	_PWM_Duty
  1664  0377                     l2503:
  1665                           
  1666                           ;elnewmain.c: 123:             LCD_String_xy(1,9,"L1: ON");
  1667  0377  3009               	movlw	9
  1668  0378  1683               	bsf	3,5	;RP0=1, select bank1
  1669  0379  1303               	bcf	3,6	;RP1=0, select bank1
  1670  037A  00DC               	movwf	??_main^(0+128)
  1671  037B  085C               	movf	??_main^(0+128),w
  1672  037C  00F5               	movwf	LCD_String_xy@pos
  1673  037D  3045               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1674  037E  00DD               	movwf	(??_main+1)^(0+128)
  1675  037F  085D               	movf	(??_main+1)^(0+128),w
  1676  0380  00F6               	movwf	LCD_String_xy@msg
  1677  0381  3001               	movlw	1
  1678  0382  120A  158A  217D  120A  118A  	fcall	_LCD_String_xy
  1679  0387                     l2505:
  1680                           
  1681                           ;elnewmain.c: 124:             strcat(stringBT, "L1: ON");
  1682  0387  3045               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1683  0388  1683               	bsf	3,5	;RP0=1, select bank1
  1684  0389  1303               	bcf	3,6	;RP1=0, select bank1
  1685  038A  00DC               	movwf	??_main^(0+128)
  1686  038B  085C               	movf	??_main^(0+128),w
  1687  038C  00F0               	movwf	strcat@from
  1688  038D  3090               	movlw	(low (_stringBT| (0+256)))& (0+255)
  1689  038E  120A  158A  21A9  120A  118A  	fcall	_strcat
  1690  0393                     l2507:
  1691                           
  1692                           ;elnewmain.c: 125:             strcat(stringBT, ",");
  1693  0393  3063               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1694  0394  1683               	bsf	3,5	;RP0=1, select bank1
  1695  0395  1303               	bcf	3,6	;RP1=0, select bank1
  1696  0396  00DC               	movwf	??_main^(0+128)
  1697  0397  085C               	movf	??_main^(0+128),w
  1698  0398  00F0               	movwf	strcat@from
  1699  0399  3090               	movlw	(low (_stringBT| (0+256)))& (0+255)
  1700  039A  120A  158A  21A9  120A  118A  	fcall	_strcat
  1701  039F                     l2509:
  1702                           
  1703                           ;elnewmain.c: 127:             _delay((unsigned long)((400)*(8000000/4000.0)));
  1704  039F  3005               	movlw	5
  1705  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  1706  03A1  1303               	bcf	3,6	;RP1=0, select bank1
  1707  03A2  00DE               	movwf	(??_main^(0+128)+2)
  1708  03A3  300F               	movlw	15
  1709  03A4  00DD               	movwf	(??_main^(0+128)+1)
  1710  03A5  30F0               	movlw	240
  1711  03A6  00DC               	movwf	??_main^(0+128)
  1712  03A7                     u3097:
  1713  03A7  0BDC               	decfsz	??_main^(0+128),f
  1714  03A8  2BA7               	goto	u3097
  1715  03A9  0BDD               	decfsz	(??_main^(0+128)+1),f
  1716  03AA  2BA7               	goto	u3097
  1717  03AB  0BDE               	decfsz	(??_main^(0+128)+2),f
  1718  03AC  2BA7               	goto	u3097
  1719  03AD  0000               	nop
  1720                           
  1721                           ;elnewmain.c: 128:         } else{
  1722  03AE  2BE2               	goto	l2521
  1723  03AF                     l2511:
  1724                           
  1725                           ;elnewmain.c: 129:             PWM_Duty(0);
  1726  03AF  3000               	movlw	0
  1727  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  1728  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  1729  03B2  00D6               	movwf	PWM_Duty@duty^(0+128)
  1730  03B3  00D7               	movwf	(PWM_Duty@duty+1)^(0+128)
  1731  03B4  120A  158A  259C  120A  118A  	fcall	_PWM_Duty
  1732  03B9                     l2513:
  1733                           
  1734                           ;elnewmain.c: 130:             LCD_String_xy(1,9,"L1: OFF");
  1735  03B9  3009               	movlw	9
  1736  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  1737  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  1738  03BC  00DC               	movwf	??_main^(0+128)
  1739  03BD  085C               	movf	??_main^(0+128),w
  1740  03BE  00F5               	movwf	LCD_String_xy@pos
  1741  03BF  3035               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1742  03C0  00DD               	movwf	(??_main+1)^(0+128)
  1743  03C1  085D               	movf	(??_main+1)^(0+128),w
  1744  03C2  00F6               	movwf	LCD_String_xy@msg
  1745  03C3  3001               	movlw	1
  1746  03C4  120A  158A  217D  120A  118A  	fcall	_LCD_String_xy
  1747  03C9                     l2515:
  1748                           
  1749                           ;elnewmain.c: 131:             strcat(stringBT, "L1: OFF");
  1750  03C9  3035               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1751  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  1752  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  1753  03CC  00DC               	movwf	??_main^(0+128)
  1754  03CD  085C               	movf	??_main^(0+128),w
  1755  03CE  00F0               	movwf	strcat@from
  1756  03CF  3090               	movlw	(low (_stringBT| (0+256)))& (0+255)
  1757  03D0  120A  158A  21A9  120A  118A  	fcall	_strcat
  1758  03D5                     l2517:
  1759                           
  1760                           ;elnewmain.c: 132:             strcat(stringBT, ",");
  1761  03D5  3063               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1762  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  1763  03D7  1303               	bcf	3,6	;RP1=0, select bank1
  1764  03D8  00DC               	movwf	??_main^(0+128)
  1765  03D9  085C               	movf	??_main^(0+128),w
  1766  03DA  00F0               	movwf	strcat@from
  1767  03DB  3090               	movlw	(low (_stringBT| (0+256)))& (0+255)
  1768  03DC  120A  158A  21A9  120A  118A  	fcall	_strcat
  1769  03E1  2B9F               	goto	l2509
  1770  03E2                     l2521:
  1771                           
  1772                           ;elnewmain.c: 135:        if (bloque2 < 400){
  1773  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  1774  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  1775  03E4  1BC3               	btfsc	(_bloque2+3)^(0+128),7
  1776  03E5  2BF8               	goto	u3020
  1777  03E6  0843               	movf	(_bloque2+3)^(0+128),w
  1778  03E7  1D03               	btfss	3,2
  1779  03E8  2BF7               	goto	u3021
  1780  03E9  0842               	movf	(_bloque2+2)^(0+128),w
  1781  03EA  1D03               	btfss	3,2
  1782  03EB  2BF7               	goto	u3021
  1783  03EC  3001               	movlw	1
  1784  03ED  0241               	subwf	(_bloque2+1)^(0+128),w
  1785  03EE  1D03               	skipz
  1786  03EF  2BF4               	goto	u3023
  1787  03F0  3090               	movlw	144
  1788  03F1  0240               	subwf	_bloque2^(0+128),w
  1789  03F2  1D03               	skipz
  1790  03F3  2BF4               	goto	u3023
  1791  03F4                     u3023:
  1792  03F4  1803               	btfsc	3,0
  1793  03F5  2BF7               	goto	u3021
  1794  03F6  2BF8               	goto	u3020
  1795  03F7                     u3021:
  1796  03F7  2C2C               	goto	l2531
  1797  03F8                     u3020:
  1798  03F8                     l2523:
  1799                           
  1800                           ;elnewmain.c: 136:             PWM_Duty2(sensorLuz);
  1801  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  1802  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  1803  03FA  0849               	movf	(_sensorLuz+1)^(0+128),w
  1804  03FB  00D7               	movwf	(PWM_Duty2@duty+1)^(0+128)
  1805  03FC  0848               	movf	_sensorLuz^(0+128),w
  1806  03FD  00D6               	movwf	PWM_Duty2@duty^(0+128)
  1807  03FE  120A  158A  265A  120A  118A  	fcall	_PWM_Duty2
  1808  0403                     l2525:
  1809                           
  1810                           ;elnewmain.c: 137:             LCD_String_xy(2,0,"L2: ON");
  1811  0403  01F5               	clrf	LCD_String_xy@pos
  1812  0404  304C               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1813  0405  1683               	bsf	3,5	;RP0=1, select bank1
  1814  0406  1303               	bcf	3,6	;RP1=0, select bank1
  1815  0407  00DC               	movwf	??_main^(0+128)
  1816  0408  085C               	movf	??_main^(0+128),w
  1817  0409  00F6               	movwf	LCD_String_xy@msg
  1818  040A  3002               	movlw	2
  1819  040B  120A  158A  217D  120A  118A  	fcall	_LCD_String_xy
  1820  0410                     l2527:
  1821                           
  1822                           ;elnewmain.c: 138:             strcat(stringBT, "L2: ON\r\n");
  1823  0410  3024               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1824  0411  1683               	bsf	3,5	;RP0=1, select bank1
  1825  0412  1303               	bcf	3,6	;RP1=0, select bank1
  1826  0413  00DC               	movwf	??_main^(0+128)
  1827  0414  085C               	movf	??_main^(0+128),w
  1828  0415  00F0               	movwf	strcat@from
  1829  0416  3090               	movlw	(low (_stringBT| (0+256)))& (0+255)
  1830  0417  120A  158A  21A9  120A  118A  	fcall	_strcat
  1831  041C                     l2529:
  1832                           
  1833                           ;elnewmain.c: 139:             _delay((unsigned long)((400)*(8000000/4000.0)));
  1834  041C  3005               	movlw	5
  1835  041D  1683               	bsf	3,5	;RP0=1, select bank1
  1836  041E  1303               	bcf	3,6	;RP1=0, select bank1
  1837  041F  00DE               	movwf	(??_main^(0+128)+2)
  1838  0420  300F               	movlw	15
  1839  0421  00DD               	movwf	(??_main^(0+128)+1)
  1840  0422  30F0               	movlw	240
  1841  0423  00DC               	movwf	??_main^(0+128)
  1842  0424                     u3107:
  1843  0424  0BDC               	decfsz	??_main^(0+128),f
  1844  0425  2C24               	goto	u3107
  1845  0426  0BDD               	decfsz	(??_main^(0+128)+1),f
  1846  0427  2C24               	goto	u3107
  1847  0428  0BDE               	decfsz	(??_main^(0+128)+2),f
  1848  0429  2C24               	goto	u3107
  1849  042A  0000               	nop
  1850                           
  1851                           ;elnewmain.c: 140:         }else{
  1852  042B  2C50               	goto	l2539
  1853  042C                     l2531:
  1854                           
  1855                           ;elnewmain.c: 141:             PWM_Duty2(0);
  1856  042C  3000               	movlw	0
  1857  042D  1683               	bsf	3,5	;RP0=1, select bank1
  1858  042E  1303               	bcf	3,6	;RP1=0, select bank1
  1859  042F  00D6               	movwf	PWM_Duty2@duty^(0+128)
  1860  0430  00D7               	movwf	(PWM_Duty2@duty+1)^(0+128)
  1861  0431  120A  158A  265A  120A  118A  	fcall	_PWM_Duty2
  1862  0436                     l2533:
  1863                           
  1864                           ;elnewmain.c: 142:             LCD_String_xy(2,0,"L2: OFF");
  1865  0436  01F5               	clrf	LCD_String_xy@pos
  1866  0437  303D               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  1867  0438  1683               	bsf	3,5	;RP0=1, select bank1
  1868  0439  1303               	bcf	3,6	;RP1=0, select bank1
  1869  043A  00DC               	movwf	??_main^(0+128)
  1870  043B  085C               	movf	??_main^(0+128),w
  1871  043C  00F6               	movwf	LCD_String_xy@msg
  1872  043D  3002               	movlw	2
  1873  043E  120A  158A  217D  120A  118A  	fcall	_LCD_String_xy
  1874  0443                     l2535:
  1875                           
  1876                           ;elnewmain.c: 143:             strcat(stringBT, "L2:OFF  \r\n");
  1877  0443  3019               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  1878  0444  1683               	bsf	3,5	;RP0=1, select bank1
  1879  0445  1303               	bcf	3,6	;RP1=0, select bank1
  1880  0446  00DC               	movwf	??_main^(0+128)
  1881  0447  085C               	movf	??_main^(0+128),w
  1882  0448  00F0               	movwf	strcat@from
  1883  0449  3090               	movlw	(low (_stringBT| (0+256)))& (0+255)
  1884  044A  120A  158A  21A9  120A  118A  	fcall	_strcat
  1885  044F  2C1C               	goto	l2529
  1886  0450                     l2539:
  1887                           
  1888                           ;elnewmain.c: 149:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  1889  0450  3015               	movlw	21
  1890  0451  1683               	bsf	3,5	;RP0=1, select bank1
  1891  0452  1303               	bcf	3,6	;RP1=0, select bank1
  1892  0453  00DE               	movwf	(??_main^(0+128)+2)
  1893  0454  304B               	movlw	75
  1894  0455  00DD               	movwf	(??_main^(0+128)+1)
  1895  0456  30BD               	movlw	189
  1896  0457  00DC               	movwf	??_main^(0+128)
  1897  0458                     u3117:
  1898  0458  0BDC               	decfsz	??_main^(0+128),f
  1899  0459  2C58               	goto	u3117
  1900  045A  0BDD               	decfsz	(??_main^(0+128)+1),f
  1901  045B  2C58               	goto	u3117
  1902  045C  0BDE               	decfsz	(??_main^(0+128)+2),f
  1903  045D  2C58               	goto	u3117
  1904  045E  2C5F               	nop2
  1905  045F                     l2541:
  1906                           
  1907                           ;elnewmain.c: 153:         USART_SendString(stringBT);
  1908  045F  3090               	movlw	(low (_stringBT| (0+256)))& (0+255)
  1909  0460  00F1               	movwf	USART_SendString@out
  1910  0461  3001               	movlw	1
  1911  0462  00F2               	movwf	USART_SendString@out+1
  1912  0463  120A  158A  2106  120A  118A  	fcall	_USART_SendString
  1913  0468  2A55               	goto	l2467
  1914  0469  120A  118A  2800   	ljmp	start
  1915  046C                     __end_of_main:
  1916                           
  1917                           	psect	text1
  1918  08C2                     __ptext1:	
  1919 ;; *************** function _strcpy *****************
  1920 ;; Defined at:
  1921 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strcpy.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  to              1    wreg     PTR unsigned char 
  1924 ;;		 -> stringBT(50), 
  1925 ;;  from            1    0[COMMON] PTR const unsigned char 
  1926 ;;		 -> luz(4), 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  to              1    2[COMMON] PTR unsigned char 
  1929 ;;		 -> stringBT(50), 
  1930 ;;  cp              1    3[COMMON] PTR unsigned char 
  1931 ;;		 -> stringBT(50), 
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      PTR unsigned char 
  1934 ;; Registers used:
  1935 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1941 ;;      Params:         1       0       0       0       0
  1942 ;;      Locals:         2       0       0       0       0
  1943 ;;      Temps:          1       0       0       0       0
  1944 ;;      Totals:         4       0       0       0       0
  1945 ;;Total ram usage:        4 bytes
  1946 ;; Hardware stack levels used: 1
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_main
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954  08C2                     _strcpy:	
  1955                           ;psect for function _strcpy
  1956                           
  1957                           
  1958                           ;incstack = 0
  1959                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0]
  1960                           ;strcpy@to stored from wreg
  1961  08C2  00F2               	movwf	strcpy@to
  1962  08C3                     l2419:
  1963  08C3  0872               	movf	strcpy@to,w
  1964  08C4  00F1               	movwf	??_strcpy
  1965  08C5  0871               	movf	??_strcpy,w
  1966  08C6  00F3               	movwf	strcpy@cp
  1967  08C7  28D0               	goto	l2423
  1968  08C8                     l2421:
  1969  08C8  3001               	movlw	1
  1970  08C9  00F1               	movwf	??_strcpy
  1971  08CA  0871               	movf	??_strcpy,w
  1972  08CB  07F3               	addwf	strcpy@cp,f
  1973  08CC  3001               	movlw	1
  1974  08CD  00F1               	movwf	??_strcpy
  1975  08CE  0871               	movf	??_strcpy,w
  1976  08CF  07F0               	addwf	strcpy@from,f
  1977  08D0                     l2423:
  1978  08D0  0870               	movf	strcpy@from,w
  1979  08D1  0084               	movwf	4
  1980  08D2  1383               	bcf	3,7	;select IRP bank0
  1981  08D3  0800               	movf	0,w
  1982  08D4  00F1               	movwf	??_strcpy
  1983  08D5  0873               	movf	strcpy@cp,w
  1984  08D6  0084               	movwf	4
  1985  08D7  0871               	movf	??_strcpy,w
  1986  08D8  1783               	bsf	3,7	;select IRP bank2
  1987  08D9  0080               	movwf	0
  1988  08DA  0800               	movf	0,w
  1989  08DB  1D03               	btfss	3,2
  1990  08DC  28DE               	goto	u2981
  1991  08DD  28DF               	goto	u2980
  1992  08DE                     u2981:
  1993  08DE  28C8               	goto	l2421
  1994  08DF                     u2980:
  1995  08DF                     l803:
  1996  08DF  0008               	return
  1997  08E0                     __end_of_strcpy:
  1998                           
  1999                           	psect	text2
  2000  09A9                     __ptext2:	
  2001 ;; *************** function _strcat *****************
  2002 ;; Defined at:
  2003 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strcat.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;  to              1    wreg     PTR unsigned char 
  2006 ;;		 -> stringBT(50), 
  2007 ;;  from            1    0[COMMON] PTR const unsigned char 
  2008 ;;		 -> STR_18(11), STR_16(9), STR_14(2), STR_13(8), 
  2009 ;;		 -> STR_11(2), STR_10(7), STR_6(2), 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  to              1    3[COMMON] PTR unsigned char 
  2012 ;;		 -> stringBT(50), 
  2013 ;;  cp              1    2[COMMON] PTR unsigned char 
  2014 ;;		 -> stringBT(50), 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      PTR unsigned char 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2024 ;;      Params:         1       0       0       0       0
  2025 ;;      Locals:         2       0       0       0       0
  2026 ;;      Temps:          1       0       0       0       0
  2027 ;;      Totals:         4       0       0       0       0
  2028 ;;Total ram usage:        4 bytes
  2029 ;; Hardware stack levels used: 2
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		_main
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037  09A9                     _strcat:	
  2038                           ;psect for function _strcat
  2039                           
  2040                           
  2041                           ;incstack = 0
  2042                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+pclath]
  2043                           ;strcat@to stored from wreg
  2044  09A9  00F3               	movwf	strcat@to
  2045  09AA                     l2425:
  2046  09AA  0873               	movf	strcat@to,w
  2047  09AB  00F1               	movwf	??_strcat
  2048  09AC  0871               	movf	??_strcat,w
  2049  09AD  00F2               	movwf	strcat@cp
  2050  09AE  29B3               	goto	l2429
  2051  09AF                     l2427:
  2052  09AF  3001               	movlw	1
  2053  09B0  00F1               	movwf	??_strcat
  2054  09B1  0871               	movf	??_strcat,w
  2055  09B2  07F2               	addwf	strcat@cp,f
  2056  09B3                     l2429:
  2057  09B3  0872               	movf	strcat@cp,w
  2058  09B4  0084               	movwf	4
  2059  09B5  1783               	bsf	3,7	;select IRP bank2
  2060  09B6  0800               	movf	0,w
  2061  09B7  1D03               	btfss	3,2
  2062  09B8  29BA               	goto	u2991
  2063  09B9  29BB               	goto	u2990
  2064  09BA                     u2991:
  2065  09BA  29AF               	goto	l2427
  2066  09BB                     u2990:
  2067  09BB  29C4               	goto	l2433
  2068  09BC                     l2431:
  2069  09BC  3001               	movlw	1
  2070  09BD  00F1               	movwf	??_strcat
  2071  09BE  0871               	movf	??_strcat,w
  2072  09BF  07F2               	addwf	strcat@cp,f
  2073  09C0  3001               	movlw	1
  2074  09C1  00F1               	movwf	??_strcat
  2075  09C2  0871               	movf	??_strcat,w
  2076  09C3  07F0               	addwf	strcat@from,f
  2077  09C4                     l2433:
  2078  09C4  0870               	movf	strcat@from,w
  2079  09C5  0084               	movwf	4
  2080  09C6  120A  158A  200A  120A  158A  	fcall	stringdir
  2081  09CB  00F1               	movwf	??_strcat
  2082  09CC  0872               	movf	strcat@cp,w
  2083  09CD  0084               	movwf	4
  2084  09CE  0871               	movf	??_strcat,w
  2085  09CF  0080               	movwf	0
  2086  09D0  0800               	movf	0,w
  2087  09D1  1D03               	btfss	3,2
  2088  09D2  29D4               	goto	u3001
  2089  09D3  29D5               	goto	u3000
  2090  09D4                     u3001:
  2091  09D4  29BC               	goto	l2431
  2092  09D5                     u3000:
  2093  09D5                     l797:
  2094  09D5  0008               	return
  2095  09D6                     __end_of_strcat:
  2096                           
  2097                           	psect	text3
  2098  0F18                     __ptext3:	
  2099 ;; *************** function _sprintf *****************
  2100 ;; Defined at:
  2101 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  sp              1    wreg     PTR unsigned char 
  2104 ;;		 -> sensorSalida2(3), sensorSalida1(3), luz(4), 
  2105 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2106 ;;		 -> STR_8(3), STR_7(3), STR_3(4), 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2109 ;;		 -> sensorSalida2(3), sensorSalida1(3), luz(4), 
  2110 ;;  tmpval          4    0        struct .
  2111 ;;  val             2    9[BANK0 ] unsigned int 
  2112 ;;  cp              2    0        PTR const unsigned char 
  2113 ;;  len             2    0        unsigned int 
  2114 ;;  c               1   12[BANK0 ] unsigned char 
  2115 ;;  prec            1    8[BANK0 ] char 
  2116 ;;  flag            1    7[BANK0 ] unsigned char 
  2117 ;;  ap              1    6[BANK0 ] PTR void [1]
  2118 ;;		 -> ?_sprintf(2), 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  2    0[BANK0 ] int 
  2121 ;; Registers used:
  2122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2128 ;;      Params:         0       3       0       0       0
  2129 ;;      Locals:         0       7       0       0       0
  2130 ;;      Temps:          0       3       0       0       0
  2131 ;;      Totals:         0      13       0       0       0
  2132 ;;Total ram usage:       13 bytes
  2133 ;; Hardware stack levels used: 1
  2134 ;; Hardware stack levels required when called: 1
  2135 ;; This function calls:
  2136 ;;		___lwdiv
  2137 ;;		___lwmod
  2138 ;; This function is called by:
  2139 ;;		_main
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143  0F18                     _sprintf:	
  2144                           ;psect for function _sprintf
  2145                           
  2146                           
  2147                           ;incstack = 0
  2148                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2149                           ;sprintf@sp stored from wreg
  2150  0F18  1283               	bcf	3,5	;RP0=0, select bank0
  2151  0F19  1303               	bcf	3,6	;RP1=0, select bank0
  2152  0F1A  00AB               	movwf	sprintf@sp
  2153  0F1B                     l2357:
  2154                           
  2155                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2156  0F1B  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2157  0F1C  00A3               	movwf	??_sprintf
  2158  0F1D  0823               	movf	??_sprintf,w
  2159  0F1E  00A6               	movwf	sprintf@ap
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2162  0F1F  2FE9               	goto	l2409
  2163  0F20                     l2359:
  2164                           
  2165                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2166  0F20  3025               	movlw	37
  2167  0F21  062C               	xorwf	sprintf@c,w
  2168  0F22  1903               	btfsc	3,2
  2169  0F23  2F25               	goto	u2911
  2170  0F24  2F26               	goto	u2910
  2171  0F25                     u2911:
  2172  0F25  2F32               	goto	l2365
  2173  0F26                     u2910:
  2174  0F26                     l2361:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2177  0F26  082C               	movf	sprintf@c,w
  2178  0F27  00A3               	movwf	??_sprintf
  2179  0F28  082B               	movf	sprintf@sp,w
  2180  0F29  0084               	movwf	4
  2181  0F2A  0823               	movf	??_sprintf,w
  2182  0F2B  1383               	bcf	3,7	;select IRP bank0
  2183  0F2C  0080               	movwf	0
  2184  0F2D                     l2363:
  2185  0F2D  3001               	movlw	1
  2186  0F2E  00A3               	movwf	??_sprintf
  2187  0F2F  0823               	movf	??_sprintf,w
  2188  0F30  07AB               	addwf	sprintf@sp,f
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 559:    continue;
  2191  0F31  2FE9               	goto	l2409
  2192  0F32                     l2365:
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2195  0F32  01A7               	clrf	sprintf@flag
  2196  0F33                     l2369:	
  2197                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2198                           
  2199  0F33  3001               	movlw	1
  2200  0F34  07A0               	addwf	sprintf@f,f
  2201  0F35  30FF               	movlw	-1
  2202  0F36  0720               	addwf	sprintf@f,w
  2203  0F37  0084               	movwf	4
  2204  0F38  120A  158A  200A  120A  158A  	fcall	stringdir
  2205  0F3D  00AC               	movwf	sprintf@c
  2206  0F3E  00A3               	movwf	??_sprintf
  2207  0F3F  01A4               	clrf	??_sprintf+1
  2208                           
  2209                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2210                           ; Switch size 1, requested type "simple"
  2211                           ; Number of cases is 1, Range of values is 0 to 0
  2212                           ; switch strategies available:
  2213                           ; Name         Instructions Cycles
  2214                           ; simple_byte            4     3 (average)
  2215                           ; direct_byte           11     8 (fixed)
  2216                           ; jumptable            260     6 (fixed)
  2217                           ;	Chosen strategy is simple_byte
  2218  0F40  0824               	movf	??_sprintf+1,w
  2219  0F41  3A00               	xorlw	0	; case 0
  2220  0F42  1903               	skipnz
  2221  0F43  2F45               	goto	l2565
  2222  0F44  2FE9               	goto	l2409
  2223  0F45                     l2565:
  2224                           
  2225                           ; Switch size 1, requested type "simple"
  2226                           ; Number of cases is 3, Range of values is 0 to 105
  2227                           ; switch strategies available:
  2228                           ; Name         Instructions Cycles
  2229                           ; simple_byte           10     6 (average)
  2230                           ; jumptable            260     6 (fixed)
  2231                           ;	Chosen strategy is simple_byte
  2232  0F45  0823               	movf	??_sprintf,w
  2233  0F46  3A00               	xorlw	0	; case 0
  2234  0F47  1903               	skipnz
  2235  0F48  2FFB               	goto	l2411
  2236  0F49  3A64               	xorlw	100	; case 100
  2237  0F4A  1903               	skipnz
  2238  0F4B  2F50               	goto	l2371
  2239  0F4C  3A0D               	xorlw	13	; case 105
  2240  0F4D  1903               	skipnz
  2241  0F4E  2F50               	goto	l2371
  2242  0F4F  2FE9               	goto	l2409
  2243  0F50                     l2371:
  2244                           
  2245                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2246  0F50  0826               	movf	sprintf@ap,w
  2247  0F51  0084               	movwf	4
  2248  0F52  1383               	bcf	3,7	;select IRP bank0
  2249  0F53  0800               	movf	0,w
  2250  0F54  00A9               	movwf	sprintf@val
  2251  0F55  0A84               	incf	4,f
  2252  0F56  0800               	movf	0,w
  2253  0F57  00AA               	movwf	sprintf@val+1
  2254  0F58                     l2373:
  2255  0F58  3002               	movlw	2
  2256  0F59  00A3               	movwf	??_sprintf
  2257  0F5A  0823               	movf	??_sprintf,w
  2258  0F5B  07A6               	addwf	sprintf@ap,f
  2259  0F5C                     l2375:
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2262  0F5C  1FAA               	btfss	sprintf@val+1,7
  2263  0F5D  2F5F               	goto	u2921
  2264  0F5E  2F60               	goto	u2920
  2265  0F5F                     u2921:
  2266  0F5F  2F69               	goto	l2381
  2267  0F60                     u2920:
  2268  0F60                     l2377:
  2269                           
  2270                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2271  0F60  3003               	movlw	3
  2272  0F61  00A3               	movwf	??_sprintf
  2273  0F62  0823               	movf	??_sprintf,w
  2274  0F63  04A7               	iorwf	sprintf@flag,f
  2275  0F64                     l2379:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2278  0F64  09A9               	comf	sprintf@val,f
  2279  0F65  09AA               	comf	sprintf@val+1,f
  2280  0F66  0AA9               	incf	sprintf@val,f
  2281  0F67  1903               	skipnz
  2282  0F68  0AAA               	incf	sprintf@val+1,f
  2283  0F69                     l2381:
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2286  0F69  01AC               	clrf	sprintf@c
  2287  0F6A  0AAC               	incf	sprintf@c,f
  2288  0F6B                     l2387:
  2289                           
  2290                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2291  0F6B  082C               	movf	sprintf@c,w
  2292  0F6C  00A3               	movwf	??_sprintf
  2293  0F6D  0723               	addwf	??_sprintf,w
  2294  0F6E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2295  0F6F  0084               	movwf	4
  2296  0F70  120A  158A  200A  120A  158A  	fcall	stringdir
  2297  0F75  00A4               	movwf	??_sprintf+1
  2298  0F76  120A  158A  200A  120A  158A  	fcall	stringdir
  2299  0F7B  00A5               	movwf	??_sprintf+2
  2300  0F7C  0825               	movf	??_sprintf+2,w
  2301  0F7D  022A               	subwf	sprintf@val+1,w
  2302  0F7E  1D03               	skipz
  2303  0F7F  2F82               	goto	u2935
  2304  0F80  0824               	movf	??_sprintf+1,w
  2305  0F81  0229               	subwf	sprintf@val,w
  2306  0F82                     u2935:
  2307  0F82  1803               	skipnc
  2308  0F83  2F85               	goto	u2931
  2309  0F84  2F86               	goto	u2930
  2310  0F85                     u2931:
  2311  0F85  2F87               	goto	l2391
  2312  0F86                     u2930:
  2313  0F86  2F91               	goto	l2393
  2314  0F87                     l2391:
  2315  0F87  3001               	movlw	1
  2316  0F88  00A3               	movwf	??_sprintf
  2317  0F89  0823               	movf	??_sprintf,w
  2318  0F8A  07AC               	addwf	sprintf@c,f
  2319  0F8B  3005               	movlw	5
  2320  0F8C  062C               	xorwf	sprintf@c,w
  2321  0F8D  1D03               	btfss	3,2
  2322  0F8E  2F90               	goto	u2941
  2323  0F8F  2F91               	goto	u2940
  2324  0F90                     u2941:
  2325  0F90  2F6B               	goto	l2387
  2326  0F91                     u2940:
  2327  0F91                     l2393:
  2328                           
  2329                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2330  0F91  0827               	movf	sprintf@flag,w
  2331  0F92  3903               	andlw	3
  2332  0F93  1903               	btfsc	3,2
  2333  0F94  2F96               	goto	u2951
  2334  0F95  2F97               	goto	u2950
  2335  0F96                     u2951:
  2336  0F96  2FA2               	goto	l2399
  2337  0F97                     u2950:
  2338  0F97                     l2395:
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2341  0F97  302D               	movlw	45
  2342  0F98  00A3               	movwf	??_sprintf
  2343  0F99  082B               	movf	sprintf@sp,w
  2344  0F9A  0084               	movwf	4
  2345  0F9B  0823               	movf	??_sprintf,w
  2346  0F9C  1383               	bcf	3,7	;select IRP bank0
  2347  0F9D  0080               	movwf	0
  2348  0F9E                     l2397:
  2349  0F9E  3001               	movlw	1
  2350  0F9F  00A3               	movwf	??_sprintf
  2351  0FA0  0823               	movf	??_sprintf,w
  2352  0FA1  07AB               	addwf	sprintf@sp,f
  2353  0FA2                     l2399:
  2354                           
  2355                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2356  0FA2  082C               	movf	sprintf@c,w
  2357  0FA3  00A3               	movwf	??_sprintf
  2358  0FA4  0823               	movf	??_sprintf,w
  2359  0FA5  00A8               	movwf	sprintf@prec
  2360                           
  2361                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2362  0FA6  2FE0               	goto	l2407
  2363  0FA7                     l2401:
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2366  0FA7  300A               	movlw	10
  2367  0FA8  00F8               	movwf	___lwmod@divisor
  2368  0FA9  3000               	movlw	0
  2369  0FAA  00F9               	movwf	___lwmod@divisor+1
  2370  0FAB  0828               	movf	sprintf@prec,w
  2371  0FAC  00A3               	movwf	??_sprintf
  2372  0FAD  0723               	addwf	??_sprintf,w
  2373  0FAE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2374  0FAF  0084               	movwf	4
  2375  0FB0  120A  158A  200A  120A  158A  	fcall	stringdir
  2376  0FB5  00F0               	movwf	___lwdiv@divisor
  2377  0FB6  120A  158A  200A  120A  158A  	fcall	stringdir
  2378  0FBB  00F1               	movwf	___lwdiv@divisor+1
  2379  0FBC  082A               	movf	sprintf@val+1,w
  2380  0FBD  00F3               	movwf	___lwdiv@dividend+1
  2381  0FBE  0829               	movf	sprintf@val,w
  2382  0FBF  00F2               	movwf	___lwdiv@dividend
  2383  0FC0  120A  158A  2383  120A  158A  	fcall	___lwdiv
  2384  0FC5  0871               	movf	?___lwdiv+1,w
  2385  0FC6  00FB               	movwf	___lwmod@dividend+1
  2386  0FC7  0870               	movf	?___lwdiv,w
  2387  0FC8  00FA               	movwf	___lwmod@dividend
  2388  0FC9  120A  158A  2242  120A  158A  	fcall	___lwmod
  2389  0FCE  0878               	movf	?___lwmod,w
  2390  0FCF  3E30               	addlw	48
  2391  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  2392  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  2393  0FD2  00A4               	movwf	??_sprintf+1
  2394  0FD3  0824               	movf	??_sprintf+1,w
  2395  0FD4  00AC               	movwf	sprintf@c
  2396  0FD5                     l2403:
  2397                           
  2398                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2399  0FD5  082C               	movf	sprintf@c,w
  2400  0FD6  00A3               	movwf	??_sprintf
  2401  0FD7  082B               	movf	sprintf@sp,w
  2402  0FD8  0084               	movwf	4
  2403  0FD9  0823               	movf	??_sprintf,w
  2404  0FDA  1383               	bcf	3,7	;select IRP bank0
  2405  0FDB  0080               	movwf	0
  2406  0FDC                     l2405:
  2407  0FDC  3001               	movlw	1
  2408  0FDD  00A3               	movwf	??_sprintf
  2409  0FDE  0823               	movf	??_sprintf,w
  2410  0FDF  07AB               	addwf	sprintf@sp,f
  2411  0FE0                     l2407:
  2412                           
  2413                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2414  0FE0  30FF               	movlw	255
  2415  0FE1  00A3               	movwf	??_sprintf
  2416  0FE2  0823               	movf	??_sprintf,w
  2417  0FE3  07A8               	addwf	sprintf@prec,f
  2418  0FE4  0A28               	incf	sprintf@prec,w
  2419  0FE5  1D03               	btfss	3,2
  2420  0FE6  2FE8               	goto	u2961
  2421  0FE7  2FE9               	goto	u2960
  2422  0FE8                     u2961:
  2423  0FE8  2FA7               	goto	l2401
  2424  0FE9                     u2960:
  2425  0FE9                     l2409:
  2426                           
  2427                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2428  0FE9  3001               	movlw	1
  2429  0FEA  07A0               	addwf	sprintf@f,f
  2430  0FEB  30FF               	movlw	-1
  2431  0FEC  0720               	addwf	sprintf@f,w
  2432  0FED  0084               	movwf	4
  2433  0FEE  120A  158A  200A  120A  158A  	fcall	stringdir
  2434  0FF3  00A3               	movwf	??_sprintf
  2435  0FF4  0823               	movf	??_sprintf,w
  2436  0FF5  00AC               	movwf	sprintf@c
  2437  0FF6  082C               	movf	sprintf@c,w
  2438  0FF7  1D03               	btfss	3,2
  2439  0FF8  2FFA               	goto	u2971
  2440  0FF9  2FFB               	goto	u2970
  2441  0FFA                     u2971:
  2442  0FFA  2F20               	goto	l2359
  2443  0FFB                     u2970:
  2444  0FFB                     l2411:
  2445                           
  2446                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2447  0FFB  082B               	movf	sprintf@sp,w
  2448  0FFC  0084               	movwf	4
  2449  0FFD  1383               	bcf	3,7	;select IRP bank0
  2450  0FFE  0180               	clrf	0
  2451  0FFF                     l336:
  2452  0FFF  0008               	return
  2453  1000                     __end_of_sprintf:
  2454                           
  2455                           	psect	text4
  2456  0A42                     __ptext4:	
  2457 ;; *************** function ___lwmod *****************
  2458 ;; Defined at:
  2459 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  divisor         2    8[COMMON] unsigned int 
  2462 ;;  dividend        2   10[COMMON] unsigned int 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  counter         1   13[COMMON] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  2    8[COMMON] unsigned int 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2474 ;;      Params:         4       0       0       0       0
  2475 ;;      Locals:         1       0       0       0       0
  2476 ;;      Temps:          1       0       0       0       0
  2477 ;;      Totals:         6       0       0       0       0
  2478 ;;Total ram usage:        6 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_sprintf
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487  0A42                     ___lwmod:	
  2488                           ;psect for function ___lwmod
  2489                           
  2490  0A42                     l1885:	
  2491                           ;incstack = 0
  2492                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2493                           
  2494  0A42  0878               	movf	___lwmod@divisor,w
  2495  0A43  0479               	iorwf	___lwmod@divisor+1,w
  2496  0A44  1903               	btfsc	3,2
  2497  0A45  2A47               	goto	u1871
  2498  0A46  2A48               	goto	u1870
  2499  0A47                     u1871:
  2500  0A47  2A77               	goto	l1903
  2501  0A48                     u1870:
  2502  0A48                     l1887:
  2503  0A48  01FD               	clrf	___lwmod@counter
  2504  0A49  0AFD               	incf	___lwmod@counter,f
  2505  0A4A  2A56               	goto	l1893
  2506  0A4B                     l1889:
  2507  0A4B  3001               	movlw	1
  2508  0A4C                     u1885:
  2509  0A4C  1003               	clrc
  2510  0A4D  0DF8               	rlf	___lwmod@divisor,f
  2511  0A4E  0DF9               	rlf	___lwmod@divisor+1,f
  2512  0A4F  3EFF               	addlw	-1
  2513  0A50  1D03               	skipz
  2514  0A51  2A4C               	goto	u1885
  2515  0A52                     l1891:
  2516  0A52  3001               	movlw	1
  2517  0A53  00FC               	movwf	??___lwmod
  2518  0A54  087C               	movf	??___lwmod,w
  2519  0A55  07FD               	addwf	___lwmod@counter,f
  2520  0A56                     l1893:
  2521  0A56  1FF9               	btfss	___lwmod@divisor+1,7
  2522  0A57  2A59               	goto	u1891
  2523  0A58  2A5A               	goto	u1890
  2524  0A59                     u1891:
  2525  0A59  2A4B               	goto	l1889
  2526  0A5A                     u1890:
  2527  0A5A                     l1895:
  2528  0A5A  0879               	movf	___lwmod@divisor+1,w
  2529  0A5B  027B               	subwf	___lwmod@dividend+1,w
  2530  0A5C  1D03               	skipz
  2531  0A5D  2A60               	goto	u1905
  2532  0A5E  0878               	movf	___lwmod@divisor,w
  2533  0A5F  027A               	subwf	___lwmod@dividend,w
  2534  0A60                     u1905:
  2535  0A60  1C03               	skipc
  2536  0A61  2A63               	goto	u1901
  2537  0A62  2A64               	goto	u1900
  2538  0A63                     u1901:
  2539  0A63  2A6A               	goto	l1899
  2540  0A64                     u1900:
  2541  0A64                     l1897:
  2542  0A64  0878               	movf	___lwmod@divisor,w
  2543  0A65  02FA               	subwf	___lwmod@dividend,f
  2544  0A66  0879               	movf	___lwmod@divisor+1,w
  2545  0A67  1C03               	skipc
  2546  0A68  03FB               	decf	___lwmod@dividend+1,f
  2547  0A69  02FB               	subwf	___lwmod@dividend+1,f
  2548  0A6A                     l1899:
  2549  0A6A  3001               	movlw	1
  2550  0A6B                     u1915:
  2551  0A6B  1003               	clrc
  2552  0A6C  0CF9               	rrf	___lwmod@divisor+1,f
  2553  0A6D  0CF8               	rrf	___lwmod@divisor,f
  2554  0A6E  3EFF               	addlw	-1
  2555  0A6F  1D03               	skipz
  2556  0A70  2A6B               	goto	u1915
  2557  0A71                     l1901:
  2558  0A71  3001               	movlw	1
  2559  0A72  02FD               	subwf	___lwmod@counter,f
  2560  0A73  1D03               	btfss	3,2
  2561  0A74  2A76               	goto	u1921
  2562  0A75  2A77               	goto	u1920
  2563  0A76                     u1921:
  2564  0A76  2A5A               	goto	l1895
  2565  0A77                     u1920:
  2566  0A77                     l1903:
  2567  0A77  087B               	movf	___lwmod@dividend+1,w
  2568  0A78  00F9               	movwf	?___lwmod+1
  2569  0A79  087A               	movf	___lwmod@dividend,w
  2570  0A7A  00F8               	movwf	?___lwmod
  2571  0A7B                     l622:
  2572  0A7B  0008               	return
  2573  0A7C                     __end_of___lwmod:
  2574                           
  2575                           	psect	text5
  2576  0B83                     __ptext5:	
  2577 ;; *************** function ___lwdiv *****************
  2578 ;; Defined at:
  2579 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  divisor         2    0[COMMON] unsigned int 
  2582 ;;  dividend        2    2[COMMON] unsigned int 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;  quotient        2    5[COMMON] unsigned int 
  2585 ;;  counter         1    7[COMMON] unsigned char 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  2    0[COMMON] unsigned int 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2595 ;;      Params:         4       0       0       0       0
  2596 ;;      Locals:         3       0       0       0       0
  2597 ;;      Temps:          1       0       0       0       0
  2598 ;;      Totals:         8       0       0       0       0
  2599 ;;Total ram usage:        8 bytes
  2600 ;; Hardware stack levels used: 1
  2601 ;; This function calls:
  2602 ;;		Nothing
  2603 ;; This function is called by:
  2604 ;;		_sprintf
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608  0B83                     ___lwdiv:	
  2609                           ;psect for function ___lwdiv
  2610                           
  2611  0B83                     l1859:	
  2612                           ;incstack = 0
  2613                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2614                           
  2615  0B83  01F5               	clrf	___lwdiv@quotient
  2616  0B84  01F6               	clrf	___lwdiv@quotient+1
  2617  0B85                     l1861:
  2618  0B85  0870               	movf	___lwdiv@divisor,w
  2619  0B86  0471               	iorwf	___lwdiv@divisor+1,w
  2620  0B87  1903               	btfsc	3,2
  2621  0B88  2B8A               	goto	u1801
  2622  0B89  2B8B               	goto	u1800
  2623  0B8A                     u1801:
  2624  0B8A  2BC2               	goto	l1881
  2625  0B8B                     u1800:
  2626  0B8B                     l1863:
  2627  0B8B  01F7               	clrf	___lwdiv@counter
  2628  0B8C  0AF7               	incf	___lwdiv@counter,f
  2629  0B8D  2B99               	goto	l1869
  2630  0B8E                     l1865:
  2631  0B8E  3001               	movlw	1
  2632  0B8F                     u1815:
  2633  0B8F  1003               	clrc
  2634  0B90  0DF0               	rlf	___lwdiv@divisor,f
  2635  0B91  0DF1               	rlf	___lwdiv@divisor+1,f
  2636  0B92  3EFF               	addlw	-1
  2637  0B93  1D03               	skipz
  2638  0B94  2B8F               	goto	u1815
  2639  0B95                     l1867:
  2640  0B95  3001               	movlw	1
  2641  0B96  00F4               	movwf	??___lwdiv
  2642  0B97  0874               	movf	??___lwdiv,w
  2643  0B98  07F7               	addwf	___lwdiv@counter,f
  2644  0B99                     l1869:
  2645  0B99  1FF1               	btfss	___lwdiv@divisor+1,7
  2646  0B9A  2B9C               	goto	u1821
  2647  0B9B  2B9D               	goto	u1820
  2648  0B9C                     u1821:
  2649  0B9C  2B8E               	goto	l1865
  2650  0B9D                     u1820:
  2651  0B9D                     l1871:
  2652  0B9D  3001               	movlw	1
  2653  0B9E                     u1835:
  2654  0B9E  1003               	clrc
  2655  0B9F  0DF5               	rlf	___lwdiv@quotient,f
  2656  0BA0  0DF6               	rlf	___lwdiv@quotient+1,f
  2657  0BA1  3EFF               	addlw	-1
  2658  0BA2  1D03               	skipz
  2659  0BA3  2B9E               	goto	u1835
  2660  0BA4  0871               	movf	___lwdiv@divisor+1,w
  2661  0BA5  0273               	subwf	___lwdiv@dividend+1,w
  2662  0BA6  1D03               	skipz
  2663  0BA7  2BAA               	goto	u1845
  2664  0BA8  0870               	movf	___lwdiv@divisor,w
  2665  0BA9  0272               	subwf	___lwdiv@dividend,w
  2666  0BAA                     u1845:
  2667  0BAA  1C03               	skipc
  2668  0BAB  2BAD               	goto	u1841
  2669  0BAC  2BAE               	goto	u1840
  2670  0BAD                     u1841:
  2671  0BAD  2BB5               	goto	l1877
  2672  0BAE                     u1840:
  2673  0BAE                     l1873:
  2674  0BAE  0870               	movf	___lwdiv@divisor,w
  2675  0BAF  02F2               	subwf	___lwdiv@dividend,f
  2676  0BB0  0871               	movf	___lwdiv@divisor+1,w
  2677  0BB1  1C03               	skipc
  2678  0BB2  03F3               	decf	___lwdiv@dividend+1,f
  2679  0BB3  02F3               	subwf	___lwdiv@dividend+1,f
  2680  0BB4                     l1875:
  2681  0BB4  1475               	bsf	___lwdiv@quotient,0
  2682  0BB5                     l1877:
  2683  0BB5  3001               	movlw	1
  2684  0BB6                     u1855:
  2685  0BB6  1003               	clrc
  2686  0BB7  0CF1               	rrf	___lwdiv@divisor+1,f
  2687  0BB8  0CF0               	rrf	___lwdiv@divisor,f
  2688  0BB9  3EFF               	addlw	-1
  2689  0BBA  1D03               	skipz
  2690  0BBB  2BB6               	goto	u1855
  2691  0BBC                     l1879:
  2692  0BBC  3001               	movlw	1
  2693  0BBD  02F7               	subwf	___lwdiv@counter,f
  2694  0BBE  1D03               	btfss	3,2
  2695  0BBF  2BC1               	goto	u1861
  2696  0BC0  2BC2               	goto	u1860
  2697  0BC1                     u1861:
  2698  0BC1  2B9D               	goto	l1871
  2699  0BC2                     u1860:
  2700  0BC2                     l1881:
  2701  0BC2  0876               	movf	___lwdiv@quotient+1,w
  2702  0BC3  00F1               	movwf	?___lwdiv+1
  2703  0BC4  0875               	movf	___lwdiv@quotient,w
  2704  0BC5  00F0               	movwf	?___lwdiv
  2705  0BC6                     l612:
  2706  0BC6  0008               	return
  2707  0BC7                     __end_of___lwdiv:
  2708                           
  2709                           	psect	text6
  2710  0906                     __ptext6:	
  2711 ;; *************** function _USART_SendString *****************
  2712 ;; Defined at:
  2713 ;;		line 37 in file "uart.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  out             2    1[COMMON] PTR const unsigned char 
  2716 ;;		 -> stringBT(50), STR_5(6), STR_1(14), 
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;		None
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  1    wreg      void 
  2721 ;; Registers used:
  2722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2728 ;;      Params:         2       0       0       0       0
  2729 ;;      Locals:         0       0       0       0       0
  2730 ;;      Temps:          0       0       0       0       0
  2731 ;;      Totals:         2       0       0       0       0
  2732 ;;Total ram usage:        2 bytes
  2733 ;; Hardware stack levels used: 1
  2734 ;; Hardware stack levels required when called: 1
  2735 ;; This function calls:
  2736 ;;		_USART_TxChar
  2737 ;; This function is called by:
  2738 ;;		_main
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742  0906                     _USART_SendString:	
  2743                           ;psect for function _USART_SendString
  2744                           
  2745  0906                     l2293:	
  2746                           ;incstack = 0
  2747                           ; Regs used in _USART_SendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2748                           
  2749                           
  2750                           ;uart.c: 37: void USART_SendString(const char *out);uart.c: 38: {;uart.c: 39:    while(*
      +                          out!='\0')
  2751  0906  291B               	goto	l2299
  2752  0907                     l2295:
  2753                           
  2754                           ;uart.c: 40:    {;uart.c: 41:         USART_TxChar(*out);
  2755  0907  0872               	movf	USART_SendString@out+1,w
  2756  0908  00FF               	movwf	btemp+1
  2757  0909  0871               	movf	USART_SendString@out,w
  2758  090A  0084               	movwf	4
  2759  090B  120A  158A  2000  120A  158A  	fcall	stringtab
  2760  0910  120A  158A  2093  120A  158A  	fcall	_USART_TxChar
  2761  0915                     l2297:
  2762                           
  2763                           ;uart.c: 42:         out++;
  2764  0915  3001               	movlw	1
  2765  0916  07F1               	addwf	USART_SendString@out,f
  2766  0917  1803               	skipnc
  2767  0918  0AF2               	incf	USART_SendString@out+1,f
  2768  0919  3000               	movlw	0
  2769  091A  07F2               	addwf	USART_SendString@out+1,f
  2770  091B                     l2299:
  2771                           
  2772                           ;uart.c: 39:    while(*out!='\0')
  2773  091B  0872               	movf	USART_SendString@out+1,w
  2774  091C  1283               	bcf	3,5	;RP0=0, select bank0
  2775  091D  1303               	bcf	3,6	;RP1=0, select bank0
  2776  091E  00FF               	movwf	btemp+1
  2777  091F  0871               	movf	USART_SendString@out,w
  2778  0920  0084               	movwf	4
  2779  0921  120A  158A  2000  120A  158A  	fcall	stringtab
  2780  0926  3A00               	xorlw	0
  2781  0927  1D03               	skipz
  2782  0928  292A               	goto	u2851
  2783  0929  292B               	goto	u2850
  2784  092A                     u2851:
  2785  092A  2907               	goto	l2295
  2786  092B                     u2850:
  2787  092B                     l226:
  2788  092B  0008               	return
  2789  092C                     __end_of_USART_SendString:
  2790                           
  2791                           	psect	text7
  2792  0893                     __ptext7:	
  2793 ;; *************** function _USART_TxChar *****************
  2794 ;; Defined at:
  2795 ;;		line 16 in file "uart.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  out             1    wreg     unsigned char 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  out             1    0[COMMON] unsigned char 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2809 ;;      Params:         0       0       0       0       0
  2810 ;;      Locals:         1       0       0       0       0
  2811 ;;      Temps:          0       0       0       0       0
  2812 ;;      Totals:         1       0       0       0       0
  2813 ;;Total ram usage:        1 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_USART_SendString
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822  0893                     _USART_TxChar:	
  2823                           ;psect for function _USART_TxChar
  2824                           
  2825                           
  2826                           ;incstack = 0
  2827                           ; Regs used in _USART_TxChar: [wreg]
  2828                           ;USART_TxChar@out stored from wreg
  2829  0893  00F0               	movwf	USART_TxChar@out
  2830  0894                     l1779:
  2831  0894                     l210:	
  2832                           ;uart.c: 16: void USART_TxChar(char out);uart.c: 17: {;uart.c: 18:         while(TXIF==0
      +                          );
  2833                           
  2834  0894  1283               	bcf	3,5	;RP0=0, select bank0
  2835  0895  1303               	bcf	3,6	;RP1=0, select bank0
  2836  0896  1E0C               	btfss	12,4	;volatile
  2837  0897  2899               	goto	u1591
  2838  0898  289A               	goto	u1590
  2839  0899                     u1591:
  2840  0899  2894               	goto	l210
  2841  089A                     u1590:
  2842  089A                     l1781:
  2843                           
  2844                           ;uart.c: 19:         TXREG=out;
  2845  089A  0870               	movf	USART_TxChar@out,w
  2846  089B  0099               	movwf	25	;volatile
  2847  089C                     l213:
  2848  089C  0008               	return
  2849  089D                     __end_of_USART_TxChar:
  2850                           
  2851                           	psect	text8
  2852  0B3F                     __ptext8:	
  2853 ;; *************** function _USART_Init *****************
  2854 ;; Defined at:
  2855 ;;		line 5 in file "uart.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  baud_rate       4    6[BANK0 ] long 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  temp            4    0        float 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0, pclath, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2869 ;;      Params:         0       4       0       0       0
  2870 ;;      Locals:         4       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0
  2872 ;;      Totals:         4       4       0       0       0
  2873 ;;Total ram usage:        8 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; Hardware stack levels required when called: 1
  2876 ;; This function calls:
  2877 ;;		___aldiv
  2878 ;; This function is called by:
  2879 ;;		_main
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883  0B3F                     _USART_Init:	
  2884                           ;psect for function _USART_Init
  2885                           
  2886  0B3F                     l2285:	
  2887                           ;incstack = 0
  2888                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  2889                           
  2890                           
  2891                           ;uart.c: 5: void USART_Init(long baud_rate);uart.c: 6: {;uart.c: 7:     float temp;;uart
      +                          .c: 8:     TRISC6=0;
  2892  0B3F  1683               	bsf	3,5	;RP0=1, select bank1
  2893  0B40  1303               	bcf	3,6	;RP1=0, select bank1
  2894  0B41  1307               	bcf	7,6	;volatile
  2895                           
  2896                           ;uart.c: 9:     TRISC7=1;
  2897  0B42  1787               	bsf	7,7	;volatile
  2898  0B43                     l2287:
  2899                           
  2900                           ;uart.c: 10:     SPBRG=(unsigned char) (((8000000 / baud_rate) / 64) - 1);
  2901  0B43  1283               	bcf	3,5	;RP0=0, select bank0
  2902  0B44  1303               	bcf	3,6	;RP1=0, select bank0
  2903  0B45  0829               	movf	USART_Init@baud_rate+3,w
  2904  0B46  00F3               	movwf	___aldiv@divisor+3
  2905  0B47  0828               	movf	USART_Init@baud_rate+2,w
  2906  0B48  00F2               	movwf	___aldiv@divisor+2
  2907  0B49  0827               	movf	USART_Init@baud_rate+1,w
  2908  0B4A  00F1               	movwf	___aldiv@divisor+1
  2909  0B4B  0826               	movf	USART_Init@baud_rate,w
  2910  0B4C  00F0               	movwf	___aldiv@divisor
  2911  0B4D  3000               	movlw	0
  2912  0B4E  00F7               	movwf	___aldiv@dividend+3
  2913  0B4F  307A               	movlw	122
  2914  0B50  00F6               	movwf	___aldiv@dividend+2
  2915  0B51  3012               	movlw	18
  2916  0B52  00F5               	movwf	___aldiv@dividend+1
  2917  0B53  3000               	movlw	0
  2918  0B54  00F4               	movwf	___aldiv@dividend
  2919  0B55  120A  158A  2443  120A  158A  	fcall	___aldiv
  2920  0B5A  0873               	movf	?___aldiv+3,w
  2921  0B5B  00FC               	movwf	_USART_Init$1010+3
  2922  0B5C  0872               	movf	?___aldiv+2,w
  2923  0B5D  00FB               	movwf	_USART_Init$1010+2
  2924  0B5E  0871               	movf	?___aldiv+1,w
  2925  0B5F  00FA               	movwf	_USART_Init$1010+1
  2926  0B60  0870               	movf	?___aldiv,w
  2927  0B61  00F9               	movwf	_USART_Init$1010
  2928                           
  2929                           ;uart.c: 10:     SPBRG=(unsigned char) (((8000000 / baud_rate) / 64) - 1);
  2930  0B62  3000               	movlw	0
  2931  0B63  00F3               	movwf	___aldiv@divisor+3
  2932  0B64  3000               	movlw	0
  2933  0B65  00F2               	movwf	___aldiv@divisor+2
  2934  0B66  3000               	movlw	0
  2935  0B67  00F1               	movwf	___aldiv@divisor+1
  2936  0B68  3040               	movlw	64
  2937  0B69  00F0               	movwf	___aldiv@divisor
  2938  0B6A  087C               	movf	_USART_Init$1010+3,w
  2939  0B6B  00F7               	movwf	___aldiv@dividend+3
  2940  0B6C  087B               	movf	_USART_Init$1010+2,w
  2941  0B6D  00F6               	movwf	___aldiv@dividend+2
  2942  0B6E  087A               	movf	_USART_Init$1010+1,w
  2943  0B6F  00F5               	movwf	___aldiv@dividend+1
  2944  0B70  0879               	movf	_USART_Init$1010,w
  2945  0B71  00F4               	movwf	___aldiv@dividend
  2946  0B72  120A  158A  2443  120A  158A  	fcall	___aldiv
  2947  0B77  0870               	movf	?___aldiv,w
  2948  0B78  3EFF               	addlw	255
  2949  0B79  1683               	bsf	3,5	;RP0=1, select bank1
  2950  0B7A  1303               	bcf	3,6	;RP1=0, select bank1
  2951  0B7B  0099               	movwf	25	;volatile
  2952  0B7C                     l2289:
  2953                           
  2954                           ;uart.c: 11:     TXSTA=0x20;
  2955  0B7C  3020               	movlw	32
  2956  0B7D  0098               	movwf	24	;volatile
  2957  0B7E                     l2291:
  2958                           
  2959                           ;uart.c: 12:     RCSTA=0x90;
  2960  0B7E  3090               	movlw	144
  2961  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  2962  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  2963  0B81  0098               	movwf	24	;volatile
  2964  0B82                     l207:
  2965  0B82  0008               	return
  2966  0B83                     __end_of_USART_Init:
  2967                           
  2968                           	psect	text9
  2969  0AFC                     __ptext9:	
  2970 ;; *************** function _PWM_Inicializar2 *****************
  2971 ;; Defined at:
  2972 ;;		line 54 in file "elnewmain.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;		None
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;		None
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  2   97[None  ] int 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0, pclath, cstack
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2986 ;;      Params:         0       0       0       0       0
  2987 ;;      Locals:         0       0       0       0       0
  2988 ;;      Temps:          4       0       0       0       0
  2989 ;;      Totals:         4       0       0       0       0
  2990 ;;Total ram usage:        4 bytes
  2991 ;; Hardware stack levels used: 1
  2992 ;; Hardware stack levels required when called: 1
  2993 ;; This function calls:
  2994 ;;		___aldiv
  2995 ;; This function is called by:
  2996 ;;		_main
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000  0AFC                     _PWM_Inicializar2:	
  3001                           ;psect for function _PWM_Inicializar2
  3002                           
  3003  0AFC                     l2259:	
  3004                           ;incstack = 0
  3005                           ; Regs used in _PWM_Inicializar2: [wreg+status,2+status,0+pclath+cstack]
  3006                           
  3007                           
  3008                           ;elnewmain.c: 55:     OSCCON = 0x71;
  3009  0AFC  3071               	movlw	113
  3010  0AFD  1683               	bsf	3,5	;RP0=1, select bank1
  3011  0AFE  1303               	bcf	3,6	;RP1=0, select bank1
  3012  0AFF  008F               	movwf	15	;volatile
  3013  0B00                     l2261:
  3014                           
  3015                           ;elnewmain.c: 56:     PR2 = (8000000/(pwmFrecuencia*4*4)) - 1;
  3016  0B00  085F               	movf	_pwmFrecuencia^(0+128),w
  3017  0B01  00F9               	movwf	??_PWM_Inicializar2
  3018  0B02  0860               	movf	(_pwmFrecuencia+1)^(0+128),w
  3019  0B03  00FA               	movwf	??_PWM_Inicializar2+1
  3020  0B04  0861               	movf	(_pwmFrecuencia+2)^(0+128),w
  3021  0B05  00FB               	movwf	??_PWM_Inicializar2+2
  3022  0B06  0862               	movf	(_pwmFrecuencia+3)^(0+128),w
  3023  0B07  00FC               	movwf	??_PWM_Inicializar2+3
  3024  0B08  3002               	movlw	2
  3025  0B09                     u2795:
  3026  0B09  1003               	clrc
  3027  0B0A  0DF9               	rlf	??_PWM_Inicializar2,f
  3028  0B0B  0DFA               	rlf	??_PWM_Inicializar2+1,f
  3029  0B0C  0DFB               	rlf	??_PWM_Inicializar2+2,f
  3030  0B0D  0DFC               	rlf	??_PWM_Inicializar2+3,f
  3031  0B0E                     u2790:
  3032  0B0E  3EFF               	addlw	-1
  3033  0B0F  1D03               	skipz
  3034  0B10  2B09               	goto	u2795
  3035  0B11  3002               	movlw	2
  3036  0B12                     u2805:
  3037  0B12  1003               	clrc
  3038  0B13  0DF9               	rlf	??_PWM_Inicializar2,f
  3039  0B14  0DFA               	rlf	??_PWM_Inicializar2+1,f
  3040  0B15  0DFB               	rlf	??_PWM_Inicializar2+2,f
  3041  0B16  0DFC               	rlf	??_PWM_Inicializar2+3,f
  3042  0B17                     u2800:
  3043  0B17  3EFF               	addlw	-1
  3044  0B18  1D03               	skipz
  3045  0B19  2B12               	goto	u2805
  3046  0B1A  087C               	movf	??_PWM_Inicializar2+3,w
  3047  0B1B  00F3               	movwf	___aldiv@divisor+3
  3048  0B1C  087B               	movf	??_PWM_Inicializar2+2,w
  3049  0B1D  00F2               	movwf	___aldiv@divisor+2
  3050  0B1E  087A               	movf	??_PWM_Inicializar2+1,w
  3051  0B1F  00F1               	movwf	___aldiv@divisor+1
  3052  0B20  0879               	movf	??_PWM_Inicializar2,w
  3053  0B21  00F0               	movwf	___aldiv@divisor
  3054  0B22  3000               	movlw	0
  3055  0B23  00F7               	movwf	___aldiv@dividend+3
  3056  0B24  307A               	movlw	122
  3057  0B25  00F6               	movwf	___aldiv@dividend+2
  3058  0B26  3012               	movlw	18
  3059  0B27  00F5               	movwf	___aldiv@dividend+1
  3060  0B28  3000               	movlw	0
  3061  0B29  00F4               	movwf	___aldiv@dividend
  3062  0B2A  120A  158A  2443  120A  158A  	fcall	___aldiv
  3063  0B2F  0870               	movf	?___aldiv,w
  3064  0B30  3EFF               	addlw	255
  3065  0B31  1683               	bsf	3,5	;RP0=1, select bank1
  3066  0B32  1303               	bcf	3,6	;RP1=0, select bank1
  3067  0B33  0092               	movwf	18	;volatile
  3068  0B34                     l2263:
  3069                           
  3070                           ;elnewmain.c: 57:     CCP2M3 = 1; CCP2M2 = 1;
  3071  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  3072  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  3073  0B36  159D               	bsf	29,3	;volatile
  3074  0B37                     l2265:
  3075  0B37  151D               	bsf	29,2	;volatile
  3076  0B38                     l2267:
  3077                           
  3078                           ;elnewmain.c: 58:     T2CKPS0 = 1;T2CKPS1 = 0; TMR2ON = 1;
  3079  0B38  1412               	bsf	18,0	;volatile
  3080  0B39                     l2269:
  3081  0B39  1092               	bcf	18,1	;volatile
  3082  0B3A                     l2271:
  3083  0B3A  1512               	bsf	18,2	;volatile
  3084  0B3B                     l2273:
  3085                           
  3086                           ;elnewmain.c: 59:     TRISC2 = 0;
  3087  0B3B  1683               	bsf	3,5	;RP0=1, select bank1
  3088  0B3C  1303               	bcf	3,6	;RP1=0, select bank1
  3089  0B3D  1107               	bcf	7,2	;volatile
  3090  0B3E                     l98:
  3091  0B3E  0008               	return
  3092  0B3F                     __end_of_PWM_Inicializar2:
  3093                           
  3094                           	psect	text10
  3095  0AB9                     __ptext10:	
  3096 ;; *************** function _PWM_Inicializar *****************
  3097 ;; Defined at:
  3098 ;;		line 35 in file "elnewmain.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;		None
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;		None
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  2   90[None  ] int 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0, pclath, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3112 ;;      Params:         0       0       0       0       0
  3113 ;;      Locals:         0       0       0       0       0
  3114 ;;      Temps:          4       0       0       0       0
  3115 ;;      Totals:         4       0       0       0       0
  3116 ;;Total ram usage:        4 bytes
  3117 ;; Hardware stack levels used: 1
  3118 ;; Hardware stack levels required when called: 1
  3119 ;; This function calls:
  3120 ;;		___aldiv
  3121 ;; This function is called by:
  3122 ;;		_main
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126  0AB9                     _PWM_Inicializar:	
  3127                           ;psect for function _PWM_Inicializar
  3128                           
  3129  0AB9                     l2233:	
  3130                           ;incstack = 0
  3131                           ; Regs used in _PWM_Inicializar: [wreg+status,2+status,0+pclath+cstack]
  3132                           
  3133                           
  3134                           ;elnewmain.c: 36:     OSCCON = 0x71;
  3135  0AB9  3071               	movlw	113
  3136  0ABA  1683               	bsf	3,5	;RP0=1, select bank1
  3137  0ABB  1303               	bcf	3,6	;RP1=0, select bank1
  3138  0ABC  008F               	movwf	15	;volatile
  3139  0ABD                     l2235:
  3140                           
  3141                           ;elnewmain.c: 37:     PR2 = (8000000/(pwmFrecuencia*4*4)) - 1;
  3142  0ABD  085F               	movf	_pwmFrecuencia^(0+128),w
  3143  0ABE  00F9               	movwf	??_PWM_Inicializar
  3144  0ABF  0860               	movf	(_pwmFrecuencia+1)^(0+128),w
  3145  0AC0  00FA               	movwf	??_PWM_Inicializar+1
  3146  0AC1  0861               	movf	(_pwmFrecuencia+2)^(0+128),w
  3147  0AC2  00FB               	movwf	??_PWM_Inicializar+2
  3148  0AC3  0862               	movf	(_pwmFrecuencia+3)^(0+128),w
  3149  0AC4  00FC               	movwf	??_PWM_Inicializar+3
  3150  0AC5  3002               	movlw	2
  3151  0AC6                     u2735:
  3152  0AC6  1003               	clrc
  3153  0AC7  0DF9               	rlf	??_PWM_Inicializar,f
  3154  0AC8  0DFA               	rlf	??_PWM_Inicializar+1,f
  3155  0AC9  0DFB               	rlf	??_PWM_Inicializar+2,f
  3156  0ACA  0DFC               	rlf	??_PWM_Inicializar+3,f
  3157  0ACB                     u2730:
  3158  0ACB  3EFF               	addlw	-1
  3159  0ACC  1D03               	skipz
  3160  0ACD  2AC6               	goto	u2735
  3161  0ACE  3002               	movlw	2
  3162  0ACF                     u2745:
  3163  0ACF  1003               	clrc
  3164  0AD0  0DF9               	rlf	??_PWM_Inicializar,f
  3165  0AD1  0DFA               	rlf	??_PWM_Inicializar+1,f
  3166  0AD2  0DFB               	rlf	??_PWM_Inicializar+2,f
  3167  0AD3  0DFC               	rlf	??_PWM_Inicializar+3,f
  3168  0AD4                     u2740:
  3169  0AD4  3EFF               	addlw	-1
  3170  0AD5  1D03               	skipz
  3171  0AD6  2ACF               	goto	u2745
  3172  0AD7  087C               	movf	??_PWM_Inicializar+3,w
  3173  0AD8  00F3               	movwf	___aldiv@divisor+3
  3174  0AD9  087B               	movf	??_PWM_Inicializar+2,w
  3175  0ADA  00F2               	movwf	___aldiv@divisor+2
  3176  0ADB  087A               	movf	??_PWM_Inicializar+1,w
  3177  0ADC  00F1               	movwf	___aldiv@divisor+1
  3178  0ADD  0879               	movf	??_PWM_Inicializar,w
  3179  0ADE  00F0               	movwf	___aldiv@divisor
  3180  0ADF  3000               	movlw	0
  3181  0AE0  00F7               	movwf	___aldiv@dividend+3
  3182  0AE1  307A               	movlw	122
  3183  0AE2  00F6               	movwf	___aldiv@dividend+2
  3184  0AE3  3012               	movlw	18
  3185  0AE4  00F5               	movwf	___aldiv@dividend+1
  3186  0AE5  3000               	movlw	0
  3187  0AE6  00F4               	movwf	___aldiv@dividend
  3188  0AE7  120A  158A  2443  120A  158A  	fcall	___aldiv
  3189  0AEC  0870               	movf	?___aldiv,w
  3190  0AED  3EFF               	addlw	255
  3191  0AEE  1683               	bsf	3,5	;RP0=1, select bank1
  3192  0AEF  1303               	bcf	3,6	;RP1=0, select bank1
  3193  0AF0  0092               	movwf	18	;volatile
  3194  0AF1                     l2237:
  3195                           
  3196                           ;elnewmain.c: 38:     CCP1M3 = 1; CCP1M2 = 1;
  3197  0AF1  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0AF2  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0AF3  1597               	bsf	23,3	;volatile
  3200  0AF4                     l2239:
  3201  0AF4  1517               	bsf	23,2	;volatile
  3202  0AF5                     l2241:
  3203                           
  3204                           ;elnewmain.c: 39:     T2CKPS0 = 1;T2CKPS1 = 0; TMR2ON = 1;
  3205  0AF5  1412               	bsf	18,0	;volatile
  3206  0AF6                     l2243:
  3207  0AF6  1092               	bcf	18,1	;volatile
  3208  0AF7                     l2245:
  3209  0AF7  1512               	bsf	18,2	;volatile
  3210  0AF8                     l2247:
  3211                           
  3212                           ;elnewmain.c: 40:     TRISB2 = 0;
  3213  0AF8  1683               	bsf	3,5	;RP0=1, select bank1
  3214  0AF9  1303               	bcf	3,6	;RP1=0, select bank1
  3215  0AFA  1106               	bcf	6,2	;volatile
  3216  0AFB                     l91:
  3217  0AFB  0008               	return
  3218  0AFC                     __end_of_PWM_Inicializar:
  3219                           
  3220                           	psect	text11
  3221  0E5A                     __ptext11:	
  3222 ;; *************** function _PWM_Duty2 *****************
  3223 ;; Defined at:
  3224 ;;		line 61 in file "elnewmain.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  duty            2    0[BANK1 ] unsigned int 
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;		None
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  2    0[BANK1 ] int 
  3231 ;; Registers used:
  3232 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3238 ;;      Params:         0       0       2       0       0
  3239 ;;      Locals:         0       0       0       0       0
  3240 ;;      Temps:          0       0       4       0       0
  3241 ;;      Totals:         0       0       6       0       0
  3242 ;;Total ram usage:        6 bytes
  3243 ;; Hardware stack levels used: 1
  3244 ;; Hardware stack levels required when called: 2
  3245 ;; This function calls:
  3246 ;;		___aldiv
  3247 ;;		___fldiv
  3248 ;;		___flmul
  3249 ;;		___fltol
  3250 ;;		___xxtofl
  3251 ;; This function is called by:
  3252 ;;		_main
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256  0E5A                     _PWM_Duty2:	
  3257                           ;psect for function _PWM_Duty2
  3258                           
  3259  0E5A                     l2275:	
  3260                           ;incstack = 0
  3261                           ; Regs used in _PWM_Duty2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3262                           
  3263                           
  3264                           ;elnewmain.c: 62:     OSCCON = 0x71;
  3265  0E5A  3071               	movlw	113
  3266  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  3267  0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  3268  0E5D  008F               	movwf	15	;volatile
  3269                           
  3270                           ;elnewmain.c: 63:     if(duty<1023){
  3271  0E5E  3003               	movlw	3
  3272  0E5F  0257               	subwf	(PWM_Duty2@duty+1)^(0+128),w
  3273  0E60  30FF               	movlw	255
  3274  0E61  1903               	skipnz
  3275  0E62  0256               	subwf	PWM_Duty2@duty^(0+128),w
  3276  0E63  1803               	skipnc
  3277  0E64  2E66               	goto	u2811
  3278  0E65  2E67               	goto	u2810
  3279  0E66                     u2811:
  3280  0E66  2F17               	goto	l102
  3281  0E67                     u2810:
  3282  0E67                     l2277:
  3283                           
  3284                           ;elnewmain.c: 64:         duty = ((float)duty/1023)*(8000000/(pwmFrecuencia*4));
  3285  0E67  0856               	movf	PWM_Duty2@duty^(0+128),w
  3286  0E68  1283               	bcf	3,5	;RP0=0, select bank0
  3287  0E69  1303               	bcf	3,6	;RP1=0, select bank0
  3288  0E6A  00A6               	movwf	___xxtofl@val
  3289  0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  3290  0E6C  1303               	bcf	3,6	;RP1=0, select bank1
  3291  0E6D  0857               	movf	(PWM_Duty2@duty+1)^(0+128),w
  3292  0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  3293  0E6F  1303               	bcf	3,6	;RP1=0, select bank0
  3294  0E70  00A7               	movwf	___xxtofl@val+1
  3295  0E71  01A8               	clrf	___xxtofl@val+2
  3296  0E72  01A9               	clrf	___xxtofl@val+3
  3297  0E73  3000               	movlw	0
  3298  0E74  120A  158A  24E0  120A  158A  	fcall	___xxtofl
  3299  0E79  1283               	bcf	3,5	;RP0=0, select bank0
  3300  0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  3301  0E7B  0829               	movf	?___xxtofl+3,w
  3302  0E7C  00B7               	movwf	___fldiv@b+3
  3303  0E7D  0828               	movf	?___xxtofl+2,w
  3304  0E7E  00B6               	movwf	___fldiv@b+2
  3305  0E7F  0827               	movf	?___xxtofl+1,w
  3306  0E80  00B5               	movwf	___fldiv@b+1
  3307  0E81  0826               	movf	?___xxtofl,w
  3308  0E82  00B4               	movwf	___fldiv@b
  3309  0E83  3044               	movlw	68
  3310  0E84  00B3               	movwf	___fldiv@a+3
  3311  0E85  307F               	movlw	127
  3312  0E86  00B2               	movwf	___fldiv@a+2
  3313  0E87  30C0               	movlw	192
  3314  0E88  00B1               	movwf	___fldiv@a+1
  3315  0E89  3000               	movlw	0
  3316  0E8A  00B0               	movwf	___fldiv@a
  3317  0E8B  120A  118A  2003  120A  158A  	fcall	___fldiv
  3318  0E90  1283               	bcf	3,5	;RP0=0, select bank0
  3319  0E91  1303               	bcf	3,6	;RP1=0, select bank0
  3320  0E92  0833               	movf	?___fldiv+3,w
  3321  0E93  00D1               	movwf	___flmul@a+3
  3322  0E94  0832               	movf	?___fldiv+2,w
  3323  0E95  00D0               	movwf	___flmul@a+2
  3324  0E96  0831               	movf	?___fldiv+1,w
  3325  0E97  00CF               	movwf	___flmul@a+1
  3326  0E98  0830               	movf	?___fldiv,w
  3327  0E99  00CE               	movwf	___flmul@a
  3328  0E9A  3000               	movlw	0
  3329  0E9B  00F7               	movwf	___aldiv@dividend+3
  3330  0E9C  307A               	movlw	122
  3331  0E9D  00F6               	movwf	___aldiv@dividend+2
  3332  0E9E  3012               	movlw	18
  3333  0E9F  00F5               	movwf	___aldiv@dividend+1
  3334  0EA0  3000               	movlw	0
  3335  0EA1  00F4               	movwf	___aldiv@dividend
  3336  0EA2  1683               	bsf	3,5	;RP0=1, select bank1
  3337  0EA3  1303               	bcf	3,6	;RP1=0, select bank1
  3338  0EA4  085F               	movf	_pwmFrecuencia^(0+128),w
  3339  0EA5  00D8               	movwf	??_PWM_Duty2^(0+128)
  3340  0EA6  0860               	movf	(_pwmFrecuencia+1)^(0+128),w
  3341  0EA7  00D9               	movwf	(??_PWM_Duty2^(0+128)+1)
  3342  0EA8  0861               	movf	(_pwmFrecuencia+2)^(0+128),w
  3343  0EA9  00DA               	movwf	(??_PWM_Duty2^(0+128)+2)
  3344  0EAA  0862               	movf	(_pwmFrecuencia+3)^(0+128),w
  3345  0EAB  00DB               	movwf	(??_PWM_Duty2^(0+128)+3)
  3346  0EAC  3002               	movlw	2
  3347  0EAD                     u2825:
  3348  0EAD  1003               	clrc
  3349  0EAE  0DD8               	rlf	??_PWM_Duty2^(0+128),f
  3350  0EAF  0DD9               	rlf	(??_PWM_Duty2^(0+128)+1),f
  3351  0EB0  0DDA               	rlf	(??_PWM_Duty2^(0+128)+2),f
  3352  0EB1  0DDB               	rlf	(??_PWM_Duty2^(0+128)+3),f
  3353  0EB2                     u2820:
  3354  0EB2  3EFF               	addlw	-1
  3355  0EB3  1D03               	skipz
  3356  0EB4  2EAD               	goto	u2825
  3357  0EB5  085B               	movf	(??_PWM_Duty2+3)^(0+128),w
  3358  0EB6  00F3               	movwf	___aldiv@divisor+3
  3359  0EB7  085A               	movf	(??_PWM_Duty2+2)^(0+128),w
  3360  0EB8  00F2               	movwf	___aldiv@divisor+2
  3361  0EB9  0859               	movf	(??_PWM_Duty2+1)^(0+128),w
  3362  0EBA  00F1               	movwf	___aldiv@divisor+1
  3363  0EBB  0858               	movf	??_PWM_Duty2^(0+128),w
  3364  0EBC  00F0               	movwf	___aldiv@divisor
  3365  0EBD  120A  158A  2443  120A  158A  	fcall	___aldiv
  3366  0EC2  0873               	movf	?___aldiv+3,w
  3367  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  3369  0EC5  00A9               	movwf	___xxtofl@val+3
  3370  0EC6  0872               	movf	?___aldiv+2,w
  3371  0EC7  00A8               	movwf	___xxtofl@val+2
  3372  0EC8  0871               	movf	?___aldiv+1,w
  3373  0EC9  00A7               	movwf	___xxtofl@val+1
  3374  0ECA  0870               	movf	?___aldiv,w
  3375  0ECB  00A6               	movwf	___xxtofl@val
  3376  0ECC  3001               	movlw	1
  3377  0ECD  120A  158A  24E0  120A  158A  	fcall	___xxtofl
  3378  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  3379  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  3380  0ED4  0829               	movf	?___xxtofl+3,w
  3381  0ED5  00CD               	movwf	___flmul@b+3
  3382  0ED6  0828               	movf	?___xxtofl+2,w
  3383  0ED7  00CC               	movwf	___flmul@b+2
  3384  0ED8  0827               	movf	?___xxtofl+1,w
  3385  0ED9  00CB               	movwf	___flmul@b+1
  3386  0EDA  0826               	movf	?___xxtofl,w
  3387  0EDB  00CA               	movwf	___flmul@b
  3388  0EDC  120A  118A  246C  120A  158A  	fcall	___flmul
  3389  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3390  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  3391  0EE3  084D               	movf	?___flmul+3,w
  3392  0EE4  00E7               	movwf	___fltol@f1+3
  3393  0EE5  084C               	movf	?___flmul+2,w
  3394  0EE6  00E6               	movwf	___fltol@f1+2
  3395  0EE7  084B               	movf	?___flmul+1,w
  3396  0EE8  00E5               	movwf	___fltol@f1+1
  3397  0EE9  084A               	movf	?___flmul,w
  3398  0EEA  00E4               	movwf	___fltol@f1
  3399  0EEB  120A  158A  23C7  120A  158A  	fcall	___fltol
  3400  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  3401  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  3402  0EF2  0865               	movf	?___fltol+1,w
  3403  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  3404  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  3405  0EF5  00D7               	movwf	(PWM_Duty2@duty+1)^(0+128)
  3406  0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  3408  0EF8  0864               	movf	?___fltol,w
  3409  0EF9  1683               	bsf	3,5	;RP0=1, select bank1
  3410  0EFA  1303               	bcf	3,6	;RP1=0, select bank1
  3411  0EFB  00D6               	movwf	PWM_Duty2@duty^(0+128)
  3412  0EFC                     l2279:
  3413                           
  3414                           ;elnewmain.c: 65:         DC2B1 = duty & 1;
  3415  0EFC  1856               	btfsc	PWM_Duty2@duty^(0+128),0
  3416  0EFD  2EFF               	goto	u2831
  3417  0EFE  2F03               	goto	u2830
  3418  0EFF                     u2831:
  3419  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3420  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3421  0F01  169D               	bsf	29,5	;volatile
  3422  0F02  2F06               	goto	u2844
  3423  0F03                     u2830:
  3424  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  3425  0F04  1303               	bcf	3,6	;RP1=0, select bank0
  3426  0F05  129D               	bcf	29,5	;volatile
  3427  0F06                     u2844:
  3428  0F06                     l2281:
  3429                           
  3430                           ;elnewmain.c: 66:         DC2B0 = duty & 2;
  3431  0F06  121D               	bcf	29,4	;volatile
  3432  0F07                     l2283:
  3433                           
  3434                           ;elnewmain.c: 67:         CCPR2L = duty>>2;
  3435  0F07  1683               	bsf	3,5	;RP0=1, select bank1
  3436  0F08  1303               	bcf	3,6	;RP1=0, select bank1
  3437  0F09  0857               	movf	(PWM_Duty2@duty+1)^(0+128),w
  3438  0F0A  00D9               	movwf	(??_PWM_Duty2^(0+128)+1)
  3439  0F0B  0856               	movf	PWM_Duty2@duty^(0+128),w
  3440  0F0C  00D8               	movwf	??_PWM_Duty2^(0+128)
  3441  0F0D  1003               	clrc
  3442  0F0E  0CD9               	rrf	(??_PWM_Duty2^(0+128)+1),f
  3443  0F0F  0CD8               	rrf	??_PWM_Duty2^(0+128),f
  3444  0F10  1003               	clrc
  3445  0F11  0CD9               	rrf	(??_PWM_Duty2^(0+128)+1),f
  3446  0F12  0CD8               	rrf	??_PWM_Duty2^(0+128),f
  3447  0F13  0858               	movf	??_PWM_Duty2^(0+128),w
  3448  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  3449  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  3450  0F16  009B               	movwf	27	;volatile
  3451  0F17                     l102:
  3452  0F17  0008               	return
  3453  0F18                     __end_of_PWM_Duty2:
  3454                           
  3455                           	psect	text12
  3456  0D9C                     __ptext12:	
  3457 ;; *************** function _PWM_Duty *****************
  3458 ;; Defined at:
  3459 ;;		line 42 in file "elnewmain.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  duty            2    0[BANK1 ] unsigned int 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;		None
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  2    0[BANK1 ] int 
  3466 ;; Registers used:
  3467 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3473 ;;      Params:         0       0       2       0       0
  3474 ;;      Locals:         0       0       0       0       0
  3475 ;;      Temps:          0       0       4       0       0
  3476 ;;      Totals:         0       0       6       0       0
  3477 ;;Total ram usage:        6 bytes
  3478 ;; Hardware stack levels used: 1
  3479 ;; Hardware stack levels required when called: 2
  3480 ;; This function calls:
  3481 ;;		___aldiv
  3482 ;;		___fldiv
  3483 ;;		___flmul
  3484 ;;		___fltol
  3485 ;;		___xxtofl
  3486 ;; This function is called by:
  3487 ;;		_main
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491  0D9C                     _PWM_Duty:	
  3492                           ;psect for function _PWM_Duty
  3493                           
  3494  0D9C                     l2249:	
  3495                           ;incstack = 0
  3496                           ; Regs used in _PWM_Duty: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3497                           
  3498                           
  3499                           ;elnewmain.c: 43:     OSCCON = 0x71;
  3500  0D9C  3071               	movlw	113
  3501  0D9D  1683               	bsf	3,5	;RP0=1, select bank1
  3502  0D9E  1303               	bcf	3,6	;RP1=0, select bank1
  3503  0D9F  008F               	movwf	15	;volatile
  3504                           
  3505                           ;elnewmain.c: 44:     if(duty<1023){
  3506  0DA0  3003               	movlw	3
  3507  0DA1  0257               	subwf	(PWM_Duty@duty+1)^(0+128),w
  3508  0DA2  30FF               	movlw	255
  3509  0DA3  1903               	skipnz
  3510  0DA4  0256               	subwf	PWM_Duty@duty^(0+128),w
  3511  0DA5  1803               	skipnc
  3512  0DA6  2DA8               	goto	u2751
  3513  0DA7  2DA9               	goto	u2750
  3514  0DA8                     u2751:
  3515  0DA8  2E59               	goto	l95
  3516  0DA9                     u2750:
  3517  0DA9                     l2251:
  3518                           
  3519                           ;elnewmain.c: 45:         duty = ((float)duty/1023)*(8000000/(pwmFrecuencia*4));
  3520  0DA9  0856               	movf	PWM_Duty@duty^(0+128),w
  3521  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  3523  0DAC  00A6               	movwf	___xxtofl@val
  3524  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  3525  0DAE  1303               	bcf	3,6	;RP1=0, select bank1
  3526  0DAF  0857               	movf	(PWM_Duty@duty+1)^(0+128),w
  3527  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  3528  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  3529  0DB2  00A7               	movwf	___xxtofl@val+1
  3530  0DB3  01A8               	clrf	___xxtofl@val+2
  3531  0DB4  01A9               	clrf	___xxtofl@val+3
  3532  0DB5  3000               	movlw	0
  3533  0DB6  120A  158A  24E0  120A  158A  	fcall	___xxtofl
  3534  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  3535  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  3536  0DBD  0829               	movf	?___xxtofl+3,w
  3537  0DBE  00B7               	movwf	___fldiv@b+3
  3538  0DBF  0828               	movf	?___xxtofl+2,w
  3539  0DC0  00B6               	movwf	___fldiv@b+2
  3540  0DC1  0827               	movf	?___xxtofl+1,w
  3541  0DC2  00B5               	movwf	___fldiv@b+1
  3542  0DC3  0826               	movf	?___xxtofl,w
  3543  0DC4  00B4               	movwf	___fldiv@b
  3544  0DC5  3044               	movlw	68
  3545  0DC6  00B3               	movwf	___fldiv@a+3
  3546  0DC7  307F               	movlw	127
  3547  0DC8  00B2               	movwf	___fldiv@a+2
  3548  0DC9  30C0               	movlw	192
  3549  0DCA  00B1               	movwf	___fldiv@a+1
  3550  0DCB  3000               	movlw	0
  3551  0DCC  00B0               	movwf	___fldiv@a
  3552  0DCD  120A  118A  2003  120A  158A  	fcall	___fldiv
  3553  0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  3554  0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  3555  0DD4  0833               	movf	?___fldiv+3,w
  3556  0DD5  00D1               	movwf	___flmul@a+3
  3557  0DD6  0832               	movf	?___fldiv+2,w
  3558  0DD7  00D0               	movwf	___flmul@a+2
  3559  0DD8  0831               	movf	?___fldiv+1,w
  3560  0DD9  00CF               	movwf	___flmul@a+1
  3561  0DDA  0830               	movf	?___fldiv,w
  3562  0DDB  00CE               	movwf	___flmul@a
  3563  0DDC  3000               	movlw	0
  3564  0DDD  00F7               	movwf	___aldiv@dividend+3
  3565  0DDE  307A               	movlw	122
  3566  0DDF  00F6               	movwf	___aldiv@dividend+2
  3567  0DE0  3012               	movlw	18
  3568  0DE1  00F5               	movwf	___aldiv@dividend+1
  3569  0DE2  3000               	movlw	0
  3570  0DE3  00F4               	movwf	___aldiv@dividend
  3571  0DE4  1683               	bsf	3,5	;RP0=1, select bank1
  3572  0DE5  1303               	bcf	3,6	;RP1=0, select bank1
  3573  0DE6  085F               	movf	_pwmFrecuencia^(0+128),w
  3574  0DE7  00D8               	movwf	??_PWM_Duty^(0+128)
  3575  0DE8  0860               	movf	(_pwmFrecuencia+1)^(0+128),w
  3576  0DE9  00D9               	movwf	(??_PWM_Duty^(0+128)+1)
  3577  0DEA  0861               	movf	(_pwmFrecuencia+2)^(0+128),w
  3578  0DEB  00DA               	movwf	(??_PWM_Duty^(0+128)+2)
  3579  0DEC  0862               	movf	(_pwmFrecuencia+3)^(0+128),w
  3580  0DED  00DB               	movwf	(??_PWM_Duty^(0+128)+3)
  3581  0DEE  3002               	movlw	2
  3582  0DEF                     u2765:
  3583  0DEF  1003               	clrc
  3584  0DF0  0DD8               	rlf	??_PWM_Duty^(0+128),f
  3585  0DF1  0DD9               	rlf	(??_PWM_Duty^(0+128)+1),f
  3586  0DF2  0DDA               	rlf	(??_PWM_Duty^(0+128)+2),f
  3587  0DF3  0DDB               	rlf	(??_PWM_Duty^(0+128)+3),f
  3588  0DF4                     u2760:
  3589  0DF4  3EFF               	addlw	-1
  3590  0DF5  1D03               	skipz
  3591  0DF6  2DEF               	goto	u2765
  3592  0DF7  085B               	movf	(??_PWM_Duty+3)^(0+128),w
  3593  0DF8  00F3               	movwf	___aldiv@divisor+3
  3594  0DF9  085A               	movf	(??_PWM_Duty+2)^(0+128),w
  3595  0DFA  00F2               	movwf	___aldiv@divisor+2
  3596  0DFB  0859               	movf	(??_PWM_Duty+1)^(0+128),w
  3597  0DFC  00F1               	movwf	___aldiv@divisor+1
  3598  0DFD  0858               	movf	??_PWM_Duty^(0+128),w
  3599  0DFE  00F0               	movwf	___aldiv@divisor
  3600  0DFF  120A  158A  2443  120A  158A  	fcall	___aldiv
  3601  0E04  0873               	movf	?___aldiv+3,w
  3602  0E05  1283               	bcf	3,5	;RP0=0, select bank0
  3603  0E06  1303               	bcf	3,6	;RP1=0, select bank0
  3604  0E07  00A9               	movwf	___xxtofl@val+3
  3605  0E08  0872               	movf	?___aldiv+2,w
  3606  0E09  00A8               	movwf	___xxtofl@val+2
  3607  0E0A  0871               	movf	?___aldiv+1,w
  3608  0E0B  00A7               	movwf	___xxtofl@val+1
  3609  0E0C  0870               	movf	?___aldiv,w
  3610  0E0D  00A6               	movwf	___xxtofl@val
  3611  0E0E  3001               	movlw	1
  3612  0E0F  120A  158A  24E0  120A  158A  	fcall	___xxtofl
  3613  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  3614  0E15  1303               	bcf	3,6	;RP1=0, select bank0
  3615  0E16  0829               	movf	?___xxtofl+3,w
  3616  0E17  00CD               	movwf	___flmul@b+3
  3617  0E18  0828               	movf	?___xxtofl+2,w
  3618  0E19  00CC               	movwf	___flmul@b+2
  3619  0E1A  0827               	movf	?___xxtofl+1,w
  3620  0E1B  00CB               	movwf	___flmul@b+1
  3621  0E1C  0826               	movf	?___xxtofl,w
  3622  0E1D  00CA               	movwf	___flmul@b
  3623  0E1E  120A  118A  246C  120A  158A  	fcall	___flmul
  3624  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  3625  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  3626  0E25  084D               	movf	?___flmul+3,w
  3627  0E26  00E7               	movwf	___fltol@f1+3
  3628  0E27  084C               	movf	?___flmul+2,w
  3629  0E28  00E6               	movwf	___fltol@f1+2
  3630  0E29  084B               	movf	?___flmul+1,w
  3631  0E2A  00E5               	movwf	___fltol@f1+1
  3632  0E2B  084A               	movf	?___flmul,w
  3633  0E2C  00E4               	movwf	___fltol@f1
  3634  0E2D  120A  158A  23C7  120A  158A  	fcall	___fltol
  3635  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  3636  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  3637  0E34  0865               	movf	?___fltol+1,w
  3638  0E35  1683               	bsf	3,5	;RP0=1, select bank1
  3639  0E36  1303               	bcf	3,6	;RP1=0, select bank1
  3640  0E37  00D7               	movwf	(PWM_Duty@duty+1)^(0+128)
  3641  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  3642  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  3643  0E3A  0864               	movf	?___fltol,w
  3644  0E3B  1683               	bsf	3,5	;RP0=1, select bank1
  3645  0E3C  1303               	bcf	3,6	;RP1=0, select bank1
  3646  0E3D  00D6               	movwf	PWM_Duty@duty^(0+128)
  3647  0E3E                     l2253:
  3648                           
  3649                           ;elnewmain.c: 46:         DC1B1 = duty & 1;
  3650  0E3E  1856               	btfsc	PWM_Duty@duty^(0+128),0
  3651  0E3F  2E41               	goto	u2771
  3652  0E40  2E45               	goto	u2770
  3653  0E41                     u2771:
  3654  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  3655  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  3656  0E43  1697               	bsf	23,5	;volatile
  3657  0E44  2E48               	goto	u2784
  3658  0E45                     u2770:
  3659  0E45  1283               	bcf	3,5	;RP0=0, select bank0
  3660  0E46  1303               	bcf	3,6	;RP1=0, select bank0
  3661  0E47  1297               	bcf	23,5	;volatile
  3662  0E48                     u2784:
  3663  0E48                     l2255:
  3664                           
  3665                           ;elnewmain.c: 47:         DC1B0 = duty & 2;
  3666  0E48  1217               	bcf	23,4	;volatile
  3667  0E49                     l2257:
  3668                           
  3669                           ;elnewmain.c: 48:         CCPR1L = duty>>2;
  3670  0E49  1683               	bsf	3,5	;RP0=1, select bank1
  3671  0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  3672  0E4B  0857               	movf	(PWM_Duty@duty+1)^(0+128),w
  3673  0E4C  00D9               	movwf	(??_PWM_Duty^(0+128)+1)
  3674  0E4D  0856               	movf	PWM_Duty@duty^(0+128),w
  3675  0E4E  00D8               	movwf	??_PWM_Duty^(0+128)
  3676  0E4F  1003               	clrc
  3677  0E50  0CD9               	rrf	(??_PWM_Duty^(0+128)+1),f
  3678  0E51  0CD8               	rrf	??_PWM_Duty^(0+128),f
  3679  0E52  1003               	clrc
  3680  0E53  0CD9               	rrf	(??_PWM_Duty^(0+128)+1),f
  3681  0E54  0CD8               	rrf	??_PWM_Duty^(0+128),f
  3682  0E55  0858               	movf	??_PWM_Duty^(0+128),w
  3683  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  3684  0E57  1303               	bcf	3,6	;RP1=0, select bank0
  3685  0E58  0095               	movwf	21	;volatile
  3686  0E59                     l95:
  3687  0E59  0008               	return
  3688  0E5A                     __end_of_PWM_Duty:
  3689                           
  3690                           	psect	text13
  3691  0CE0                     __ptext13:	
  3692 ;; *************** function ___xxtofl *****************
  3693 ;; Defined at:
  3694 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  sign            1    wreg     unsigned char 
  3697 ;;  val             4    6[BANK0 ] long 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  sign            1   10[BANK0 ] unsigned char 
  3700 ;;  arg             4   12[BANK0 ] unsigned long 
  3701 ;;  exp             1   11[BANK0 ] unsigned char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  4    6[BANK0 ] unsigned char 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3711 ;;      Params:         0       4       0       0       0
  3712 ;;      Locals:         0       6       0       0       0
  3713 ;;      Temps:          4       0       0       0       0
  3714 ;;      Totals:         4      10       0       0       0
  3715 ;;Total ram usage:       14 bytes
  3716 ;; Hardware stack levels used: 1
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_PWM_Duty
  3721 ;;		_PWM_Duty2
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725  0CE0                     ___xxtofl:	
  3726                           ;psect for function ___xxtofl
  3727                           
  3728                           
  3729                           ;incstack = 0
  3730                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3731                           ;___xxtofl@sign stored from wreg
  3732  0CE0  1283               	bcf	3,5	;RP0=0, select bank0
  3733  0CE1  1303               	bcf	3,6	;RP1=0, select bank0
  3734  0CE2  00AA               	movwf	___xxtofl@sign
  3735  0CE3                     l2189:
  3736  0CE3  082A               	movf	___xxtofl@sign,w
  3737  0CE4  1903               	btfsc	3,2
  3738  0CE5  2CE7               	goto	u2591
  3739  0CE6  2CE8               	goto	u2590
  3740  0CE7                     u2591:
  3741  0CE7  2CFC               	goto	l2195
  3742  0CE8                     u2590:
  3743  0CE8                     l2191:
  3744  0CE8  1FA9               	btfss	___xxtofl@val+3,7
  3745  0CE9  2CEB               	goto	u2601
  3746  0CEA  2CEC               	goto	u2600
  3747  0CEB                     u2601:
  3748  0CEB  2CFC               	goto	l2195
  3749  0CEC                     u2600:
  3750  0CEC                     l2193:
  3751  0CEC  0926               	comf	___xxtofl@val,w
  3752  0CED  00AC               	movwf	___xxtofl@arg
  3753  0CEE  0927               	comf	___xxtofl@val+1,w
  3754  0CEF  00AD               	movwf	___xxtofl@arg+1
  3755  0CF0  0928               	comf	___xxtofl@val+2,w
  3756  0CF1  00AE               	movwf	___xxtofl@arg+2
  3757  0CF2  0929               	comf	___xxtofl@val+3,w
  3758  0CF3  00AF               	movwf	___xxtofl@arg+3
  3759  0CF4  0AAC               	incf	___xxtofl@arg,f
  3760  0CF5  1903               	skipnz
  3761  0CF6  0AAD               	incf	___xxtofl@arg+1,f
  3762  0CF7  1903               	skipnz
  3763  0CF8  0AAE               	incf	___xxtofl@arg+2,f
  3764  0CF9  1903               	skipnz
  3765  0CFA  0AAF               	incf	___xxtofl@arg+3,f
  3766  0CFB  2D04               	goto	l773
  3767  0CFC                     l2195:
  3768  0CFC  0829               	movf	___xxtofl@val+3,w
  3769  0CFD  00AF               	movwf	___xxtofl@arg+3
  3770  0CFE  0828               	movf	___xxtofl@val+2,w
  3771  0CFF  00AE               	movwf	___xxtofl@arg+2
  3772  0D00  0827               	movf	___xxtofl@val+1,w
  3773  0D01  00AD               	movwf	___xxtofl@arg+1
  3774  0D02  0826               	movf	___xxtofl@val,w
  3775  0D03  00AC               	movwf	___xxtofl@arg
  3776  0D04                     l773:
  3777  0D04  0829               	movf	___xxtofl@val+3,w
  3778  0D05  0428               	iorwf	___xxtofl@val+2,w
  3779  0D06  0427               	iorwf	___xxtofl@val+1,w
  3780  0D07  0426               	iorwf	___xxtofl@val,w
  3781  0D08  1D03               	skipz
  3782  0D09  2D0B               	goto	u2611
  3783  0D0A  2D0C               	goto	u2610
  3784  0D0B                     u2611:
  3785  0D0B  2D15               	goto	l2201
  3786  0D0C                     u2610:
  3787  0D0C                     l2197:
  3788  0D0C  3000               	movlw	0
  3789  0D0D  00A9               	movwf	?___xxtofl+3
  3790  0D0E  3000               	movlw	0
  3791  0D0F  00A8               	movwf	?___xxtofl+2
  3792  0D10  3000               	movlw	0
  3793  0D11  00A7               	movwf	?___xxtofl+1
  3794  0D12  3000               	movlw	0
  3795  0D13  00A6               	movwf	?___xxtofl
  3796  0D14  2D9B               	goto	l775
  3797  0D15                     l2201:
  3798  0D15  3096               	movlw	150
  3799  0D16  00F9               	movwf	??___xxtofl
  3800  0D17  0879               	movf	??___xxtofl,w
  3801  0D18  00AB               	movwf	___xxtofl@exp
  3802  0D19  2D27               	goto	l2205
  3803  0D1A                     l2203:
  3804  0D1A  3001               	movlw	1
  3805  0D1B  00F9               	movwf	??___xxtofl
  3806  0D1C  0879               	movf	??___xxtofl,w
  3807  0D1D  07AB               	addwf	___xxtofl@exp,f
  3808  0D1E  3001               	movlw	1
  3809  0D1F                     u2625:
  3810  0D1F  1003               	clrc
  3811  0D20  0CAF               	rrf	___xxtofl@arg+3,f
  3812  0D21  0CAE               	rrf	___xxtofl@arg+2,f
  3813  0D22  0CAD               	rrf	___xxtofl@arg+1,f
  3814  0D23  0CAC               	rrf	___xxtofl@arg,f
  3815  0D24  3EFF               	addlw	-1
  3816  0D25  1D03               	skipz
  3817  0D26  2D1F               	goto	u2625
  3818  0D27                     l2205:
  3819  0D27  30FE               	movlw	254
  3820  0D28  052F               	andwf	___xxtofl@arg+3,w
  3821  0D29  1D03               	btfss	3,2
  3822  0D2A  2D2C               	goto	u2631
  3823  0D2B  2D2D               	goto	u2630
  3824  0D2C                     u2631:
  3825  0D2C  2D1A               	goto	l2203
  3826  0D2D                     u2630:
  3827  0D2D  2D49               	goto	l779
  3828  0D2E                     l2207:
  3829  0D2E  3001               	movlw	1
  3830  0D2F  00F9               	movwf	??___xxtofl
  3831  0D30  0879               	movf	??___xxtofl,w
  3832  0D31  07AB               	addwf	___xxtofl@exp,f
  3833  0D32                     l2209:
  3834  0D32  3001               	movlw	1
  3835  0D33  07AC               	addwf	___xxtofl@arg,f
  3836  0D34  3000               	movlw	0
  3837  0D35  1803               	skipnc
  3838  0D36  3001               	movlw	1
  3839  0D37  07AD               	addwf	___xxtofl@arg+1,f
  3840  0D38  3000               	movlw	0
  3841  0D39  1803               	skipnc
  3842  0D3A  3001               	movlw	1
  3843  0D3B  07AE               	addwf	___xxtofl@arg+2,f
  3844  0D3C  3000               	movlw	0
  3845  0D3D  1803               	skipnc
  3846  0D3E  3001               	movlw	1
  3847  0D3F  07AF               	addwf	___xxtofl@arg+3,f
  3848  0D40                     l2211:
  3849  0D40  3001               	movlw	1
  3850  0D41                     u2645:
  3851  0D41  1003               	clrc
  3852  0D42  0CAF               	rrf	___xxtofl@arg+3,f
  3853  0D43  0CAE               	rrf	___xxtofl@arg+2,f
  3854  0D44  0CAD               	rrf	___xxtofl@arg+1,f
  3855  0D45  0CAC               	rrf	___xxtofl@arg,f
  3856  0D46  3EFF               	addlw	-1
  3857  0D47  1D03               	skipz
  3858  0D48  2D41               	goto	u2645
  3859  0D49                     l779:
  3860  0D49  30FF               	movlw	255
  3861  0D4A  052F               	andwf	___xxtofl@arg+3,w
  3862  0D4B  1D03               	btfss	3,2
  3863  0D4C  2D4E               	goto	u2651
  3864  0D4D  2D4F               	goto	u2650
  3865  0D4E                     u2651:
  3866  0D4E  2D2E               	goto	l2207
  3867  0D4F                     u2650:
  3868  0D4F  2D5B               	goto	l2215
  3869  0D50                     l2213:
  3870  0D50  3001               	movlw	1
  3871  0D51  02AB               	subwf	___xxtofl@exp,f
  3872  0D52  3001               	movlw	1
  3873  0D53  00F9               	movwf	??___xxtofl
  3874  0D54                     u2665:
  3875  0D54  1003               	clrc
  3876  0D55  0DAC               	rlf	___xxtofl@arg,f
  3877  0D56  0DAD               	rlf	___xxtofl@arg+1,f
  3878  0D57  0DAE               	rlf	___xxtofl@arg+2,f
  3879  0D58  0DAF               	rlf	___xxtofl@arg+3,f
  3880  0D59  0BF9               	decfsz	??___xxtofl,f
  3881  0D5A  2D54               	goto	u2665
  3882  0D5B                     l2215:
  3883  0D5B  1BAE               	btfsc	___xxtofl@arg+2,7
  3884  0D5C  2D5E               	goto	u2671
  3885  0D5D  2D5F               	goto	u2670
  3886  0D5E                     u2671:
  3887  0D5E  2D65               	goto	l786
  3888  0D5F                     u2670:
  3889  0D5F                     l2217:
  3890  0D5F  3002               	movlw	2
  3891  0D60  022B               	subwf	___xxtofl@exp,w
  3892  0D61  1803               	skipnc
  3893  0D62  2D64               	goto	u2681
  3894  0D63  2D65               	goto	u2680
  3895  0D64                     u2681:
  3896  0D64  2D50               	goto	l2213
  3897  0D65                     u2680:
  3898  0D65                     l786:
  3899  0D65  182B               	btfsc	___xxtofl@exp,0
  3900  0D66  2D68               	goto	u2691
  3901  0D67  2D69               	goto	u2690
  3902  0D68                     u2691:
  3903  0D68  2D71               	goto	l787
  3904  0D69                     u2690:
  3905  0D69                     l2219:
  3906  0D69  30FF               	movlw	255
  3907  0D6A  05AC               	andwf	___xxtofl@arg,f
  3908  0D6B  30FF               	movlw	255
  3909  0D6C  05AD               	andwf	___xxtofl@arg+1,f
  3910  0D6D  307F               	movlw	127
  3911  0D6E  05AE               	andwf	___xxtofl@arg+2,f
  3912  0D6F  30FF               	movlw	255
  3913  0D70  05AF               	andwf	___xxtofl@arg+3,f
  3914  0D71                     l787:
  3915  0D71  1003               	clrc
  3916  0D72  0CAB               	rrf	___xxtofl@exp,f
  3917  0D73                     l2221:
  3918  0D73  082B               	movf	___xxtofl@exp,w
  3919  0D74  00F9               	movwf	??___xxtofl
  3920  0D75  01FA               	clrf	??___xxtofl+1
  3921  0D76  01FB               	clrf	??___xxtofl+2
  3922  0D77  01FC               	clrf	??___xxtofl+3
  3923  0D78  3018               	movlw	24
  3924  0D79                     u2705:
  3925  0D79  1003               	clrc
  3926  0D7A  0DF9               	rlf	??___xxtofl,f
  3927  0D7B  0DFA               	rlf	??___xxtofl+1,f
  3928  0D7C  0DFB               	rlf	??___xxtofl+2,f
  3929  0D7D  0DFC               	rlf	??___xxtofl+3,f
  3930  0D7E                     u2700:
  3931  0D7E  3EFF               	addlw	-1
  3932  0D7F  1D03               	skipz
  3933  0D80  2D79               	goto	u2705
  3934  0D81  0879               	movf	??___xxtofl,w
  3935  0D82  04AC               	iorwf	___xxtofl@arg,f
  3936  0D83  087A               	movf	??___xxtofl+1,w
  3937  0D84  04AD               	iorwf	___xxtofl@arg+1,f
  3938  0D85  087B               	movf	??___xxtofl+2,w
  3939  0D86  04AE               	iorwf	___xxtofl@arg+2,f
  3940  0D87  087C               	movf	??___xxtofl+3,w
  3941  0D88  04AF               	iorwf	___xxtofl@arg+3,f
  3942  0D89                     l2223:
  3943  0D89  082A               	movf	___xxtofl@sign,w
  3944  0D8A  1903               	btfsc	3,2
  3945  0D8B  2D8D               	goto	u2711
  3946  0D8C  2D8E               	goto	u2710
  3947  0D8D                     u2711:
  3948  0D8D  2D93               	goto	l2229
  3949  0D8E                     u2710:
  3950  0D8E                     l2225:
  3951  0D8E  1FA9               	btfss	___xxtofl@val+3,7
  3952  0D8F  2D91               	goto	u2721
  3953  0D90  2D92               	goto	u2720
  3954  0D91                     u2721:
  3955  0D91  2D93               	goto	l2229
  3956  0D92                     u2720:
  3957  0D92                     l2227:
  3958  0D92  17AF               	bsf	___xxtofl@arg+3,7
  3959  0D93                     l2229:
  3960  0D93  082F               	movf	___xxtofl@arg+3,w
  3961  0D94  00A9               	movwf	?___xxtofl+3
  3962  0D95  082E               	movf	___xxtofl@arg+2,w
  3963  0D96  00A8               	movwf	?___xxtofl+2
  3964  0D97  082D               	movf	___xxtofl@arg+1,w
  3965  0D98  00A7               	movwf	?___xxtofl+1
  3966  0D99  082C               	movf	___xxtofl@arg,w
  3967  0D9A  00A6               	movwf	?___xxtofl
  3968  0D9B                     l775:
  3969  0D9B  0008               	return
  3970  0D9C                     __end_of___xxtofl:
  3971                           
  3972                           	psect	text14
  3973  0BC7                     __ptext14:	
  3974 ;; *************** function ___fltol *****************
  3975 ;; Defined at:
  3976 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fltol.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  f1              4   68[BANK0 ] unsigned char 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;  exp1            1   78[BANK0 ] unsigned char 
  3981 ;;  sign1           1   77[BANK0 ] unsigned char 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  4   68[BANK0 ] long 
  3984 ;; Registers used:
  3985 ;;		wreg, status,2, status,0
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3991 ;;      Params:         0       4       0       0       0
  3992 ;;      Locals:         0       2       0       0       0
  3993 ;;      Temps:          0       5       0       0       0
  3994 ;;      Totals:         0      11       0       0       0
  3995 ;;Total ram usage:       11 bytes
  3996 ;; Hardware stack levels used: 1
  3997 ;; This function calls:
  3998 ;;		Nothing
  3999 ;; This function is called by:
  4000 ;;		_PWM_Duty
  4001 ;;		_PWM_Duty2
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005  0BC7                     ___fltol:	
  4006                           ;psect for function ___fltol
  4007                           
  4008  0BC7                     l1823:	
  4009                           ;incstack = 0
  4010                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4011                           
  4012  0BC7  1003               	clrc
  4013  0BC8  1283               	bcf	3,5	;RP0=0, select bank0
  4014  0BC9  1303               	bcf	3,6	;RP1=0, select bank0
  4015  0BCA  0D66               	rlf	___fltol@f1+2,w
  4016  0BCB  0D67               	rlf	___fltol@f1+3,w
  4017  0BCC  00E8               	movwf	??___fltol
  4018  0BCD  0868               	movf	??___fltol,w
  4019  0BCE  00EE               	movwf	___fltol@exp1
  4020  0BCF  086E               	movf	___fltol@exp1,w
  4021  0BD0  1D03               	btfss	3,2
  4022  0BD1  2BD3               	goto	u1701
  4023  0BD2  2BD4               	goto	u1700
  4024  0BD3                     u1701:
  4025  0BD3  2BDD               	goto	l1829
  4026  0BD4                     u1700:
  4027  0BD4                     l1825:
  4028  0BD4  3000               	movlw	0
  4029  0BD5  00E7               	movwf	?___fltol+3
  4030  0BD6  3000               	movlw	0
  4031  0BD7  00E6               	movwf	?___fltol+2
  4032  0BD8  3000               	movlw	0
  4033  0BD9  00E5               	movwf	?___fltol+1
  4034  0BDA  3000               	movlw	0
  4035  0BDB  00E4               	movwf	?___fltol
  4036  0BDC  2C42               	goto	l526
  4037  0BDD                     l1829:
  4038  0BDD  0864               	movf	___fltol@f1,w
  4039  0BDE  00E8               	movwf	??___fltol
  4040  0BDF  0865               	movf	___fltol@f1+1,w
  4041  0BE0  00E9               	movwf	??___fltol+1
  4042  0BE1  0866               	movf	___fltol@f1+2,w
  4043  0BE2  00EA               	movwf	??___fltol+2
  4044  0BE3  0867               	movf	___fltol@f1+3,w
  4045  0BE4  00EB               	movwf	??___fltol+3
  4046  0BE5  301F               	movlw	31
  4047  0BE6                     u1715:
  4048  0BE6  1003               	clrc
  4049  0BE7  0CEB               	rrf	??___fltol+3,f
  4050  0BE8  0CEA               	rrf	??___fltol+2,f
  4051  0BE9  0CE9               	rrf	??___fltol+1,f
  4052  0BEA  0CE8               	rrf	??___fltol,f
  4053  0BEB                     u1710:
  4054  0BEB  3EFF               	addlw	-1
  4055  0BEC  1D03               	skipz
  4056  0BED  2BE6               	goto	u1715
  4057  0BEE  0868               	movf	??___fltol,w
  4058  0BEF  00EC               	movwf	??___fltol+4
  4059  0BF0  086C               	movf	??___fltol+4,w
  4060  0BF1  00ED               	movwf	___fltol@sign1
  4061  0BF2                     l1831:
  4062  0BF2  17E6               	bsf	___fltol@f1+2,7
  4063  0BF3                     l1833:
  4064  0BF3  30FF               	movlw	255
  4065  0BF4  05E4               	andwf	___fltol@f1,f
  4066  0BF5  30FF               	movlw	255
  4067  0BF6  05E5               	andwf	___fltol@f1+1,f
  4068  0BF7  30FF               	movlw	255
  4069  0BF8  05E6               	andwf	___fltol@f1+2,f
  4070  0BF9  3000               	movlw	0
  4071  0BFA  05E7               	andwf	___fltol@f1+3,f
  4072  0BFB                     l1835:
  4073  0BFB  3096               	movlw	150
  4074  0BFC  02EE               	subwf	___fltol@exp1,f
  4075  0BFD                     l1837:
  4076  0BFD  1FEE               	btfss	___fltol@exp1,7
  4077  0BFE  2C00               	goto	u1721
  4078  0BFF  2C01               	goto	u1720
  4079  0C00                     u1721:
  4080  0C00  2C1B               	goto	l1847
  4081  0C01                     u1720:
  4082  0C01                     l1839:
  4083  0C01  086E               	movf	___fltol@exp1,w
  4084  0C02  3A80               	xorlw	128
  4085  0C03  3E97               	addlw	151
  4086  0C04  1803               	skipnc
  4087  0C05  2C07               	goto	u1731
  4088  0C06  2C08               	goto	u1730
  4089  0C07                     u1731:
  4090  0C07  2C09               	goto	l1845
  4091  0C08                     u1730:
  4092  0C08  2BD4               	goto	l1825
  4093  0C09                     l1845:
  4094  0C09  3001               	movlw	1
  4095  0C0A                     u1745:
  4096  0C0A  1003               	clrc
  4097  0C0B  0CE7               	rrf	___fltol@f1+3,f
  4098  0C0C  0CE6               	rrf	___fltol@f1+2,f
  4099  0C0D  0CE5               	rrf	___fltol@f1+1,f
  4100  0C0E  0CE4               	rrf	___fltol@f1,f
  4101  0C0F  3EFF               	addlw	-1
  4102  0C10  1D03               	skipz
  4103  0C11  2C0A               	goto	u1745
  4104  0C12  3001               	movlw	1
  4105  0C13  00E8               	movwf	??___fltol
  4106  0C14  0868               	movf	??___fltol,w
  4107  0C15  07EE               	addwf	___fltol@exp1,f
  4108  0C16  1D03               	btfss	3,2
  4109  0C17  2C19               	goto	u1751
  4110  0C18  2C1A               	goto	u1750
  4111  0C19                     u1751:
  4112  0C19  2C09               	goto	l1845
  4113  0C1A                     u1750:
  4114  0C1A  2C32               	goto	l1855
  4115  0C1B                     l1847:
  4116  0C1B  3020               	movlw	32
  4117  0C1C  026E               	subwf	___fltol@exp1,w
  4118  0C1D  1C03               	skipc
  4119  0C1E  2C20               	goto	u1761
  4120  0C1F  2C21               	goto	u1760
  4121  0C20                     u1761:
  4122  0C20  2C2D               	goto	l533
  4123  0C21                     u1760:
  4124  0C21  2BD4               	goto	l1825
  4125  0C22                     l1853:
  4126  0C22  3001               	movlw	1
  4127  0C23  00E8               	movwf	??___fltol
  4128  0C24                     u1775:
  4129  0C24  1003               	clrc
  4130  0C25  0DE4               	rlf	___fltol@f1,f
  4131  0C26  0DE5               	rlf	___fltol@f1+1,f
  4132  0C27  0DE6               	rlf	___fltol@f1+2,f
  4133  0C28  0DE7               	rlf	___fltol@f1+3,f
  4134  0C29  0BE8               	decfsz	??___fltol,f
  4135  0C2A  2C24               	goto	u1775
  4136  0C2B  3001               	movlw	1
  4137  0C2C  02EE               	subwf	___fltol@exp1,f
  4138  0C2D                     l533:
  4139  0C2D  086E               	movf	___fltol@exp1,w
  4140  0C2E  1D03               	btfss	3,2
  4141  0C2F  2C31               	goto	u1781
  4142  0C30  2C32               	goto	u1780
  4143  0C31                     u1781:
  4144  0C31  2C22               	goto	l1853
  4145  0C32                     u1780:
  4146  0C32                     l1855:
  4147  0C32  086D               	movf	___fltol@sign1,w
  4148  0C33  1903               	btfsc	3,2
  4149  0C34  2C36               	goto	u1791
  4150  0C35  2C37               	goto	u1790
  4151  0C36                     u1791:
  4152  0C36  2C42               	goto	l536
  4153  0C37                     u1790:
  4154  0C37                     l1857:
  4155  0C37  09E4               	comf	___fltol@f1,f
  4156  0C38  09E5               	comf	___fltol@f1+1,f
  4157  0C39  09E6               	comf	___fltol@f1+2,f
  4158  0C3A  09E7               	comf	___fltol@f1+3,f
  4159  0C3B  0AE4               	incf	___fltol@f1,f
  4160  0C3C  1903               	skipnz
  4161  0C3D  0AE5               	incf	___fltol@f1+1,f
  4162  0C3E  1903               	skipnz
  4163  0C3F  0AE6               	incf	___fltol@f1+2,f
  4164  0C40  1903               	skipnz
  4165  0C41  0AE7               	incf	___fltol@f1+3,f
  4166  0C42                     l536:
  4167  0C42                     l526:
  4168  0C42  0008               	return
  4169  0C43                     __end_of___fltol:
  4170                           
  4171                           	psect	text15
  4172  046C                     __ptext15:	
  4173 ;; *************** function ___flmul *****************
  4174 ;; Defined at:
  4175 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  b               4   42[BANK0 ] long 
  4178 ;;  a               4   46[BANK0 ] long 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  prod            4   62[BANK0 ] struct .
  4181 ;;  grs             4   56[BANK0 ] unsigned long 
  4182 ;;  temp            2   66[BANK0 ] struct .
  4183 ;;  bexp            1   61[BANK0 ] unsigned char 
  4184 ;;  aexp            1   60[BANK0 ] unsigned char 
  4185 ;;  sign            1   55[BANK0 ] unsigned char 
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  4   42[BANK0 ] unsigned char 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4195 ;;      Params:         0       8       0       0       0
  4196 ;;      Locals:         0      13       0       0       0
  4197 ;;      Temps:          0       5       0       0       0
  4198 ;;      Totals:         0      26       0       0       0
  4199 ;;Total ram usage:       26 bytes
  4200 ;; Hardware stack levels used: 1
  4201 ;; Hardware stack levels required when called: 1
  4202 ;; This function calls:
  4203 ;;		__Umul8_16
  4204 ;; This function is called by:
  4205 ;;		_PWM_Duty
  4206 ;;		_PWM_Duty2
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210  046C                     ___flmul:	
  4211                           ;psect for function ___flmul
  4212                           
  4213  046C                     l2049:	
  4214                           ;incstack = 0
  4215                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4216                           
  4217  046C  1283               	bcf	3,5	;RP0=0, select bank0
  4218  046D  1303               	bcf	3,6	;RP1=0, select bank0
  4219  046E  084D               	movf	___flmul@b+3,w
  4220  046F  3980               	andlw	128
  4221  0470  00D2               	movwf	??___flmul
  4222  0471  0852               	movf	??___flmul,w
  4223  0472  00D7               	movwf	___flmul@sign
  4224  0473                     l2051:
  4225  0473  084D               	movf	___flmul@b+3,w
  4226  0474  00D2               	movwf	??___flmul
  4227  0475  0752               	addwf	??___flmul,w
  4228  0476  00D3               	movwf	??___flmul+1
  4229  0477  0853               	movf	??___flmul+1,w
  4230  0478  00DD               	movwf	___flmul@bexp
  4231  0479                     l2053:
  4232  0479  1FCC               	btfss	___flmul@b+2,7
  4233  047A  2C7C               	goto	u2221
  4234  047B  2C7D               	goto	u2220
  4235  047C                     u2221:
  4236  047C  2C7E               	goto	l2057
  4237  047D                     u2220:
  4238  047D                     l2055:
  4239  047D  145D               	bsf	___flmul@bexp,0
  4240  047E                     l2057:
  4241  047E  085D               	movf	___flmul@bexp,w
  4242  047F  1903               	btfsc	3,2
  4243  0480  2C82               	goto	u2231
  4244  0481  2C83               	goto	u2230
  4245  0482                     u2231:
  4246  0482  2C92               	goto	l2065
  4247  0483                     u2230:
  4248  0483                     l2059:
  4249  0483  0A5D               	incf	___flmul@bexp,w
  4250  0484  1D03               	btfss	3,2
  4251  0485  2C87               	goto	u2241
  4252  0486  2C88               	goto	u2240
  4253  0487                     u2241:
  4254  0487  2C90               	goto	l2063
  4255  0488                     u2240:
  4256  0488                     l2061:
  4257  0488  3000               	movlw	0
  4258  0489  00CD               	movwf	___flmul@b+3
  4259  048A  3000               	movlw	0
  4260  048B  00CC               	movwf	___flmul@b+2
  4261  048C  3000               	movlw	0
  4262  048D  00CB               	movwf	___flmul@b+1
  4263  048E  3000               	movlw	0
  4264  048F  00CA               	movwf	___flmul@b
  4265  0490                     l2063:
  4266  0490  17CC               	bsf	___flmul@b+2,7
  4267  0491  2C9A               	goto	l2067
  4268  0492                     l2065:
  4269  0492  3000               	movlw	0
  4270  0493  00CD               	movwf	___flmul@b+3
  4271  0494  3000               	movlw	0
  4272  0495  00CC               	movwf	___flmul@b+2
  4273  0496  3000               	movlw	0
  4274  0497  00CB               	movwf	___flmul@b+1
  4275  0498  3000               	movlw	0
  4276  0499  00CA               	movwf	___flmul@b
  4277  049A                     l2067:
  4278  049A  0851               	movf	___flmul@a+3,w
  4279  049B  3980               	andlw	128
  4280  049C  00D2               	movwf	??___flmul
  4281  049D  0852               	movf	??___flmul,w
  4282  049E  06D7               	xorwf	___flmul@sign,f
  4283  049F                     l2069:
  4284  049F  0851               	movf	___flmul@a+3,w
  4285  04A0  00D2               	movwf	??___flmul
  4286  04A1  0752               	addwf	??___flmul,w
  4287  04A2  00D3               	movwf	??___flmul+1
  4288  04A3  0853               	movf	??___flmul+1,w
  4289  04A4  00DC               	movwf	___flmul@aexp
  4290  04A5                     l2071:
  4291  04A5  1FD0               	btfss	___flmul@a+2,7
  4292  04A6  2CA8               	goto	u2251
  4293  04A7  2CA9               	goto	u2250
  4294  04A8                     u2251:
  4295  04A8  2CAA               	goto	l2075
  4296  04A9                     u2250:
  4297  04A9                     l2073:
  4298  04A9  145C               	bsf	___flmul@aexp,0
  4299  04AA                     l2075:
  4300  04AA  085C               	movf	___flmul@aexp,w
  4301  04AB  1903               	btfsc	3,2
  4302  04AC  2CAE               	goto	u2261
  4303  04AD  2CAF               	goto	u2260
  4304  04AE                     u2261:
  4305  04AE  2CBE               	goto	l2083
  4306  04AF                     u2260:
  4307  04AF                     l2077:
  4308  04AF  0A5C               	incf	___flmul@aexp,w
  4309  04B0  1D03               	btfss	3,2
  4310  04B1  2CB3               	goto	u2271
  4311  04B2  2CB4               	goto	u2270
  4312  04B3                     u2271:
  4313  04B3  2CBC               	goto	l2081
  4314  04B4                     u2270:
  4315  04B4                     l2079:
  4316  04B4  3000               	movlw	0
  4317  04B5  00D1               	movwf	___flmul@a+3
  4318  04B6  3000               	movlw	0
  4319  04B7  00D0               	movwf	___flmul@a+2
  4320  04B8  3000               	movlw	0
  4321  04B9  00CF               	movwf	___flmul@a+1
  4322  04BA  3000               	movlw	0
  4323  04BB  00CE               	movwf	___flmul@a
  4324  04BC                     l2081:
  4325  04BC  17D0               	bsf	___flmul@a+2,7
  4326  04BD  2CC6               	goto	l2085
  4327  04BE                     l2083:
  4328  04BE  3000               	movlw	0
  4329  04BF  00D1               	movwf	___flmul@a+3
  4330  04C0  3000               	movlw	0
  4331  04C1  00D0               	movwf	___flmul@a+2
  4332  04C2  3000               	movlw	0
  4333  04C3  00CF               	movwf	___flmul@a+1
  4334  04C4  3000               	movlw	0
  4335  04C5  00CE               	movwf	___flmul@a
  4336  04C6                     l2085:
  4337  04C6  085C               	movf	___flmul@aexp,w
  4338  04C7  1903               	btfsc	3,2
  4339  04C8  2CCA               	goto	u2281
  4340  04C9  2CCB               	goto	u2280
  4341  04CA                     u2281:
  4342  04CA  2CD0               	goto	l2089
  4343  04CB                     u2280:
  4344  04CB                     l2087:
  4345  04CB  085D               	movf	___flmul@bexp,w
  4346  04CC  1D03               	btfss	3,2
  4347  04CD  2CCF               	goto	u2291
  4348  04CE  2CD0               	goto	u2290
  4349  04CF                     u2291:
  4350  04CF  2CD9               	goto	l2093
  4351  04D0                     u2290:
  4352  04D0                     l2089:
  4353  04D0  3000               	movlw	0
  4354  04D1  00CD               	movwf	?___flmul+3
  4355  04D2  3000               	movlw	0
  4356  04D3  00CC               	movwf	?___flmul+2
  4357  04D4  3000               	movlw	0
  4358  04D5  00CB               	movwf	?___flmul+1
  4359  04D6  3000               	movlw	0
  4360  04D7  00CA               	movwf	?___flmul
  4361  04D8  2FCC               	goto	l729
  4362  04D9                     l2093:
  4363  04D9  084A               	movf	___flmul@b,w
  4364  04DA  00D2               	movwf	??___flmul
  4365  04DB  0852               	movf	??___flmul,w
  4366  04DC  00F0               	movwf	__Umul8_16@multiplicand
  4367  04DD  0850               	movf	___flmul@a+2,w
  4368  04DE  120A  158A  212C  120A  118A  	fcall	__Umul8_16
  4369  04E3  0871               	movf	?__Umul8_16+1,w
  4370  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  4371  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  4372  04E6  00E3               	movwf	___flmul@temp+1
  4373  04E7  0870               	movf	?__Umul8_16,w
  4374  04E8  00E2               	movwf	___flmul@temp
  4375  04E9                     l2095:
  4376  04E9  0862               	movf	___flmul@temp,w
  4377  04EA  00D2               	movwf	??___flmul
  4378  04EB  01D3               	clrf	??___flmul+1
  4379  04EC  01D4               	clrf	??___flmul+2
  4380  04ED  01D5               	clrf	??___flmul+3
  4381  04EE  0855               	movf	??___flmul+3,w
  4382  04EF  00DB               	movwf	___flmul@grs+3
  4383  04F0  0854               	movf	??___flmul+2,w
  4384  04F1  00DA               	movwf	___flmul@grs+2
  4385  04F2  0853               	movf	??___flmul+1,w
  4386  04F3  00D9               	movwf	___flmul@grs+1
  4387  04F4  0852               	movf	??___flmul,w
  4388  04F5  00D8               	movwf	___flmul@grs
  4389  04F6                     l2097:
  4390  04F6  0863               	movf	___flmul@temp+1,w
  4391  04F7  00D2               	movwf	??___flmul
  4392  04F8  01D3               	clrf	??___flmul+1
  4393  04F9  01D4               	clrf	??___flmul+2
  4394  04FA  01D5               	clrf	??___flmul+3
  4395  04FB  0855               	movf	??___flmul+3,w
  4396  04FC  00E1               	movwf	___flmul@prod+3
  4397  04FD  0854               	movf	??___flmul+2,w
  4398  04FE  00E0               	movwf	___flmul@prod+2
  4399  04FF  0853               	movf	??___flmul+1,w
  4400  0500  00DF               	movwf	___flmul@prod+1
  4401  0501  0852               	movf	??___flmul,w
  4402  0502  00DE               	movwf	___flmul@prod
  4403  0503  084B               	movf	___flmul@b+1,w
  4404  0504  00D2               	movwf	??___flmul
  4405  0505  0852               	movf	??___flmul,w
  4406  0506  00F0               	movwf	__Umul8_16@multiplicand
  4407  0507  084F               	movf	___flmul@a+1,w
  4408  0508  120A  158A  212C  120A  118A  	fcall	__Umul8_16
  4409  050D  0871               	movf	?__Umul8_16+1,w
  4410  050E  1283               	bcf	3,5	;RP0=0, select bank0
  4411  050F  1303               	bcf	3,6	;RP1=0, select bank0
  4412  0510  00E3               	movwf	___flmul@temp+1
  4413  0511  0870               	movf	?__Umul8_16,w
  4414  0512  00E2               	movwf	___flmul@temp
  4415  0513                     l2099:
  4416  0513  0862               	movf	___flmul@temp,w
  4417  0514  00D2               	movwf	??___flmul
  4418  0515  01D3               	clrf	??___flmul+1
  4419  0516  01D4               	clrf	??___flmul+2
  4420  0517  01D5               	clrf	??___flmul+3
  4421  0518  0852               	movf	??___flmul,w
  4422  0519  07D8               	addwf	___flmul@grs,f
  4423  051A  0853               	movf	??___flmul+1,w
  4424  051B  1103               	clrz
  4425  051C  1803               	skipnc
  4426  051D  3E01               	addlw	1
  4427  051E  1903               	skipnz
  4428  051F  2D21               	goto	u2301
  4429  0520  07D9               	addwf	___flmul@grs+1,f
  4430  0521                     u2301:
  4431  0521  0854               	movf	??___flmul+2,w
  4432  0522  1103               	clrz
  4433  0523  1803               	skipnc
  4434  0524  3E01               	addlw	1
  4435  0525  1903               	skipnz
  4436  0526  2D28               	goto	u2302
  4437  0527  07DA               	addwf	___flmul@grs+2,f
  4438  0528                     u2302:
  4439  0528  0855               	movf	??___flmul+3,w
  4440  0529  1103               	clrz
  4441  052A  1803               	skipnc
  4442  052B  3E01               	addlw	1
  4443  052C  1903               	skipnz
  4444  052D  2D2F               	goto	u2303
  4445  052E  07DB               	addwf	___flmul@grs+3,f
  4446  052F                     u2303:
  4447  052F                     l2101:
  4448  052F  0863               	movf	___flmul@temp+1,w
  4449  0530  00D2               	movwf	??___flmul
  4450  0531  01D3               	clrf	??___flmul+1
  4451  0532  01D4               	clrf	??___flmul+2
  4452  0533  01D5               	clrf	??___flmul+3
  4453  0534  0852               	movf	??___flmul,w
  4454  0535  07DE               	addwf	___flmul@prod,f
  4455  0536  0853               	movf	??___flmul+1,w
  4456  0537  1103               	clrz
  4457  0538  1803               	skipnc
  4458  0539  3E01               	addlw	1
  4459  053A  1903               	skipnz
  4460  053B  2D3D               	goto	u2311
  4461  053C  07DF               	addwf	___flmul@prod+1,f
  4462  053D                     u2311:
  4463  053D  0854               	movf	??___flmul+2,w
  4464  053E  1103               	clrz
  4465  053F  1803               	skipnc
  4466  0540  3E01               	addlw	1
  4467  0541  1903               	skipnz
  4468  0542  2D44               	goto	u2312
  4469  0543  07E0               	addwf	___flmul@prod+2,f
  4470  0544                     u2312:
  4471  0544  0855               	movf	??___flmul+3,w
  4472  0545  1103               	clrz
  4473  0546  1803               	skipnc
  4474  0547  3E01               	addlw	1
  4475  0548  1903               	skipnz
  4476  0549  2D4B               	goto	u2313
  4477  054A  07E1               	addwf	___flmul@prod+3,f
  4478  054B                     u2313:
  4479  054B  084C               	movf	___flmul@b+2,w
  4480  054C  00D2               	movwf	??___flmul
  4481  054D  0852               	movf	??___flmul,w
  4482  054E  00F0               	movwf	__Umul8_16@multiplicand
  4483  054F  084E               	movf	___flmul@a,w
  4484  0550  120A  158A  212C  120A  118A  	fcall	__Umul8_16
  4485  0555  0871               	movf	?__Umul8_16+1,w
  4486  0556  1283               	bcf	3,5	;RP0=0, select bank0
  4487  0557  1303               	bcf	3,6	;RP1=0, select bank0
  4488  0558  00E3               	movwf	___flmul@temp+1
  4489  0559  0870               	movf	?__Umul8_16,w
  4490  055A  00E2               	movwf	___flmul@temp
  4491  055B                     l2103:
  4492  055B  0862               	movf	___flmul@temp,w
  4493  055C  00D2               	movwf	??___flmul
  4494  055D  01D3               	clrf	??___flmul+1
  4495  055E  01D4               	clrf	??___flmul+2
  4496  055F  01D5               	clrf	??___flmul+3
  4497  0560  0852               	movf	??___flmul,w
  4498  0561  07D8               	addwf	___flmul@grs,f
  4499  0562  0853               	movf	??___flmul+1,w
  4500  0563  1103               	clrz
  4501  0564  1803               	skipnc
  4502  0565  3E01               	addlw	1
  4503  0566  1903               	skipnz
  4504  0567  2D69               	goto	u2321
  4505  0568  07D9               	addwf	___flmul@grs+1,f
  4506  0569                     u2321:
  4507  0569  0854               	movf	??___flmul+2,w
  4508  056A  1103               	clrz
  4509  056B  1803               	skipnc
  4510  056C  3E01               	addlw	1
  4511  056D  1903               	skipnz
  4512  056E  2D70               	goto	u2322
  4513  056F  07DA               	addwf	___flmul@grs+2,f
  4514  0570                     u2322:
  4515  0570  0855               	movf	??___flmul+3,w
  4516  0571  1103               	clrz
  4517  0572  1803               	skipnc
  4518  0573  3E01               	addlw	1
  4519  0574  1903               	skipnz
  4520  0575  2D77               	goto	u2323
  4521  0576  07DB               	addwf	___flmul@grs+3,f
  4522  0577                     u2323:
  4523  0577                     l2105:
  4524  0577  0863               	movf	___flmul@temp+1,w
  4525  0578  00D2               	movwf	??___flmul
  4526  0579  01D3               	clrf	??___flmul+1
  4527  057A  01D4               	clrf	??___flmul+2
  4528  057B  01D5               	clrf	??___flmul+3
  4529  057C  0852               	movf	??___flmul,w
  4530  057D  07DE               	addwf	___flmul@prod,f
  4531  057E  0853               	movf	??___flmul+1,w
  4532  057F  1103               	clrz
  4533  0580  1803               	skipnc
  4534  0581  3E01               	addlw	1
  4535  0582  1903               	skipnz
  4536  0583  2D85               	goto	u2331
  4537  0584  07DF               	addwf	___flmul@prod+1,f
  4538  0585                     u2331:
  4539  0585  0854               	movf	??___flmul+2,w
  4540  0586  1103               	clrz
  4541  0587  1803               	skipnc
  4542  0588  3E01               	addlw	1
  4543  0589  1903               	skipnz
  4544  058A  2D8C               	goto	u2332
  4545  058B  07E0               	addwf	___flmul@prod+2,f
  4546  058C                     u2332:
  4547  058C  0855               	movf	??___flmul+3,w
  4548  058D  1103               	clrz
  4549  058E  1803               	skipnc
  4550  058F  3E01               	addlw	1
  4551  0590  1903               	skipnz
  4552  0591  2D93               	goto	u2333
  4553  0592  07E1               	addwf	___flmul@prod+3,f
  4554  0593                     u2333:
  4555  0593                     l2107:
  4556  0593  3008               	movlw	8
  4557  0594  00D2               	movwf	??___flmul
  4558  0595                     u2345:
  4559  0595  1003               	clrc
  4560  0596  0DD8               	rlf	___flmul@grs,f
  4561  0597  0DD9               	rlf	___flmul@grs+1,f
  4562  0598  0DDA               	rlf	___flmul@grs+2,f
  4563  0599  0DDB               	rlf	___flmul@grs+3,f
  4564  059A  0BD2               	decfsz	??___flmul,f
  4565  059B  2D95               	goto	u2345
  4566  059C                     l2109:
  4567  059C  084B               	movf	___flmul@b+1,w
  4568  059D  00D2               	movwf	??___flmul
  4569  059E  0852               	movf	??___flmul,w
  4570  059F  00F0               	movwf	__Umul8_16@multiplicand
  4571  05A0  084E               	movf	___flmul@a,w
  4572  05A1  120A  158A  212C  120A  118A  	fcall	__Umul8_16
  4573  05A6  0871               	movf	?__Umul8_16+1,w
  4574  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  4575  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  4576  05A9  00E3               	movwf	___flmul@temp+1
  4577  05AA  0870               	movf	?__Umul8_16,w
  4578  05AB  00E2               	movwf	___flmul@temp
  4579  05AC                     l2111:
  4580  05AC  0862               	movf	___flmul@temp,w
  4581  05AD  00D2               	movwf	??___flmul
  4582  05AE  0863               	movf	___flmul@temp+1,w
  4583  05AF  00D3               	movwf	??___flmul+1
  4584  05B0  01D4               	clrf	??___flmul+2
  4585  05B1  01D5               	clrf	??___flmul+3
  4586  05B2  0852               	movf	??___flmul,w
  4587  05B3  07D8               	addwf	___flmul@grs,f
  4588  05B4  0853               	movf	??___flmul+1,w
  4589  05B5  1103               	clrz
  4590  05B6  1803               	skipnc
  4591  05B7  3E01               	addlw	1
  4592  05B8  1903               	skipnz
  4593  05B9  2DBB               	goto	u2351
  4594  05BA  07D9               	addwf	___flmul@grs+1,f
  4595  05BB                     u2351:
  4596  05BB  0854               	movf	??___flmul+2,w
  4597  05BC  1103               	clrz
  4598  05BD  1803               	skipnc
  4599  05BE  3E01               	addlw	1
  4600  05BF  1903               	skipnz
  4601  05C0  2DC2               	goto	u2352
  4602  05C1  07DA               	addwf	___flmul@grs+2,f
  4603  05C2                     u2352:
  4604  05C2  0855               	movf	??___flmul+3,w
  4605  05C3  1103               	clrz
  4606  05C4  1803               	skipnc
  4607  05C5  3E01               	addlw	1
  4608  05C6  1903               	skipnz
  4609  05C7  2DC9               	goto	u2353
  4610  05C8  07DB               	addwf	___flmul@grs+3,f
  4611  05C9                     u2353:
  4612  05C9                     l2113:
  4613  05C9  084A               	movf	___flmul@b,w
  4614  05CA  00D2               	movwf	??___flmul
  4615  05CB  0852               	movf	??___flmul,w
  4616  05CC  00F0               	movwf	__Umul8_16@multiplicand
  4617  05CD  084F               	movf	___flmul@a+1,w
  4618  05CE  120A  158A  212C  120A  118A  	fcall	__Umul8_16
  4619  05D3  0871               	movf	?__Umul8_16+1,w
  4620  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  4621  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  4622  05D6  00E3               	movwf	___flmul@temp+1
  4623  05D7  0870               	movf	?__Umul8_16,w
  4624  05D8  00E2               	movwf	___flmul@temp
  4625  05D9                     l2115:
  4626  05D9  0862               	movf	___flmul@temp,w
  4627  05DA  00D2               	movwf	??___flmul
  4628  05DB  0863               	movf	___flmul@temp+1,w
  4629  05DC  00D3               	movwf	??___flmul+1
  4630  05DD  01D4               	clrf	??___flmul+2
  4631  05DE  01D5               	clrf	??___flmul+3
  4632  05DF  0852               	movf	??___flmul,w
  4633  05E0  07D8               	addwf	___flmul@grs,f
  4634  05E1  0853               	movf	??___flmul+1,w
  4635  05E2  1103               	clrz
  4636  05E3  1803               	skipnc
  4637  05E4  3E01               	addlw	1
  4638  05E5  1903               	skipnz
  4639  05E6  2DE8               	goto	u2361
  4640  05E7  07D9               	addwf	___flmul@grs+1,f
  4641  05E8                     u2361:
  4642  05E8  0854               	movf	??___flmul+2,w
  4643  05E9  1103               	clrz
  4644  05EA  1803               	skipnc
  4645  05EB  3E01               	addlw	1
  4646  05EC  1903               	skipnz
  4647  05ED  2DEF               	goto	u2362
  4648  05EE  07DA               	addwf	___flmul@grs+2,f
  4649  05EF                     u2362:
  4650  05EF  0855               	movf	??___flmul+3,w
  4651  05F0  1103               	clrz
  4652  05F1  1803               	skipnc
  4653  05F2  3E01               	addlw	1
  4654  05F3  1903               	skipnz
  4655  05F4  2DF6               	goto	u2363
  4656  05F5  07DB               	addwf	___flmul@grs+3,f
  4657  05F6                     u2363:
  4658  05F6                     l2117:
  4659  05F6  3008               	movlw	8
  4660  05F7  00D2               	movwf	??___flmul
  4661  05F8                     u2375:
  4662  05F8  1003               	clrc
  4663  05F9  0DD8               	rlf	___flmul@grs,f
  4664  05FA  0DD9               	rlf	___flmul@grs+1,f
  4665  05FB  0DDA               	rlf	___flmul@grs+2,f
  4666  05FC  0DDB               	rlf	___flmul@grs+3,f
  4667  05FD  0BD2               	decfsz	??___flmul,f
  4668  05FE  2DF8               	goto	u2375
  4669  05FF  084A               	movf	___flmul@b,w
  4670  0600  00D2               	movwf	??___flmul
  4671  0601  0852               	movf	??___flmul,w
  4672  0602  00F0               	movwf	__Umul8_16@multiplicand
  4673  0603  084E               	movf	___flmul@a,w
  4674  0604  120A  158A  212C  120A  118A  	fcall	__Umul8_16
  4675  0609  0871               	movf	?__Umul8_16+1,w
  4676  060A  1283               	bcf	3,5	;RP0=0, select bank0
  4677  060B  1303               	bcf	3,6	;RP1=0, select bank0
  4678  060C  00E3               	movwf	___flmul@temp+1
  4679  060D  0870               	movf	?__Umul8_16,w
  4680  060E  00E2               	movwf	___flmul@temp
  4681  060F                     l2119:
  4682  060F  0862               	movf	___flmul@temp,w
  4683  0610  00D2               	movwf	??___flmul
  4684  0611  0863               	movf	___flmul@temp+1,w
  4685  0612  00D3               	movwf	??___flmul+1
  4686  0613  01D4               	clrf	??___flmul+2
  4687  0614  01D5               	clrf	??___flmul+3
  4688  0615  0852               	movf	??___flmul,w
  4689  0616  07D8               	addwf	___flmul@grs,f
  4690  0617  0853               	movf	??___flmul+1,w
  4691  0618  1103               	clrz
  4692  0619  1803               	skipnc
  4693  061A  3E01               	addlw	1
  4694  061B  1903               	skipnz
  4695  061C  2E1E               	goto	u2381
  4696  061D  07D9               	addwf	___flmul@grs+1,f
  4697  061E                     u2381:
  4698  061E  0854               	movf	??___flmul+2,w
  4699  061F  1103               	clrz
  4700  0620  1803               	skipnc
  4701  0621  3E01               	addlw	1
  4702  0622  1903               	skipnz
  4703  0623  2E25               	goto	u2382
  4704  0624  07DA               	addwf	___flmul@grs+2,f
  4705  0625                     u2382:
  4706  0625  0855               	movf	??___flmul+3,w
  4707  0626  1103               	clrz
  4708  0627  1803               	skipnc
  4709  0628  3E01               	addlw	1
  4710  0629  1903               	skipnz
  4711  062A  2E2C               	goto	u2383
  4712  062B  07DB               	addwf	___flmul@grs+3,f
  4713  062C                     u2383:
  4714  062C                     l2121:
  4715  062C  084B               	movf	___flmul@b+1,w
  4716  062D  00D2               	movwf	??___flmul
  4717  062E  0852               	movf	??___flmul,w
  4718  062F  00F0               	movwf	__Umul8_16@multiplicand
  4719  0630  0850               	movf	___flmul@a+2,w
  4720  0631  120A  158A  212C  120A  118A  	fcall	__Umul8_16
  4721  0636  0871               	movf	?__Umul8_16+1,w
  4722  0637  1283               	bcf	3,5	;RP0=0, select bank0
  4723  0638  1303               	bcf	3,6	;RP1=0, select bank0
  4724  0639  00E3               	movwf	___flmul@temp+1
  4725  063A  0870               	movf	?__Umul8_16,w
  4726  063B  00E2               	movwf	___flmul@temp
  4727  063C  0862               	movf	___flmul@temp,w
  4728  063D  00D2               	movwf	??___flmul
  4729  063E  0863               	movf	___flmul@temp+1,w
  4730  063F  00D3               	movwf	??___flmul+1
  4731  0640  01D4               	clrf	??___flmul+2
  4732  0641  01D5               	clrf	??___flmul+3
  4733  0642  0852               	movf	??___flmul,w
  4734  0643  07DE               	addwf	___flmul@prod,f
  4735  0644  0853               	movf	??___flmul+1,w
  4736  0645  1103               	clrz
  4737  0646  1803               	skipnc
  4738  0647  3E01               	addlw	1
  4739  0648  1903               	skipnz
  4740  0649  2E4B               	goto	u2391
  4741  064A  07DF               	addwf	___flmul@prod+1,f
  4742  064B                     u2391:
  4743  064B  0854               	movf	??___flmul+2,w
  4744  064C  1103               	clrz
  4745  064D  1803               	skipnc
  4746  064E  3E01               	addlw	1
  4747  064F  1903               	skipnz
  4748  0650  2E52               	goto	u2392
  4749  0651  07E0               	addwf	___flmul@prod+2,f
  4750  0652                     u2392:
  4751  0652  0855               	movf	??___flmul+3,w
  4752  0653  1103               	clrz
  4753  0654  1803               	skipnc
  4754  0655  3E01               	addlw	1
  4755  0656  1903               	skipnz
  4756  0657  2E59               	goto	u2393
  4757  0658  07E1               	addwf	___flmul@prod+3,f
  4758  0659                     u2393:
  4759  0659                     l2123:
  4760  0659  084C               	movf	___flmul@b+2,w
  4761  065A  00D2               	movwf	??___flmul
  4762  065B  0852               	movf	??___flmul,w
  4763  065C  00F0               	movwf	__Umul8_16@multiplicand
  4764  065D  084F               	movf	___flmul@a+1,w
  4765  065E  120A  158A  212C  120A  118A  	fcall	__Umul8_16
  4766  0663  0871               	movf	?__Umul8_16+1,w
  4767  0664  1283               	bcf	3,5	;RP0=0, select bank0
  4768  0665  1303               	bcf	3,6	;RP1=0, select bank0
  4769  0666  00E3               	movwf	___flmul@temp+1
  4770  0667  0870               	movf	?__Umul8_16,w
  4771  0668  00E2               	movwf	___flmul@temp
  4772  0669                     l2125:
  4773  0669  0862               	movf	___flmul@temp,w
  4774  066A  00D2               	movwf	??___flmul
  4775  066B  0863               	movf	___flmul@temp+1,w
  4776  066C  00D3               	movwf	??___flmul+1
  4777  066D  01D4               	clrf	??___flmul+2
  4778  066E  01D5               	clrf	??___flmul+3
  4779  066F  0852               	movf	??___flmul,w
  4780  0670  07DE               	addwf	___flmul@prod,f
  4781  0671  0853               	movf	??___flmul+1,w
  4782  0672  1103               	clrz
  4783  0673  1803               	skipnc
  4784  0674  3E01               	addlw	1
  4785  0675  1903               	skipnz
  4786  0676  2E78               	goto	u2401
  4787  0677  07DF               	addwf	___flmul@prod+1,f
  4788  0678                     u2401:
  4789  0678  0854               	movf	??___flmul+2,w
  4790  0679  1103               	clrz
  4791  067A  1803               	skipnc
  4792  067B  3E01               	addlw	1
  4793  067C  1903               	skipnz
  4794  067D  2E7F               	goto	u2402
  4795  067E  07E0               	addwf	___flmul@prod+2,f
  4796  067F                     u2402:
  4797  067F  0855               	movf	??___flmul+3,w
  4798  0680  1103               	clrz
  4799  0681  1803               	skipnc
  4800  0682  3E01               	addlw	1
  4801  0683  1903               	skipnz
  4802  0684  2E86               	goto	u2403
  4803  0685  07E1               	addwf	___flmul@prod+3,f
  4804  0686                     u2403:
  4805  0686  084C               	movf	___flmul@b+2,w
  4806  0687  00D2               	movwf	??___flmul
  4807  0688  0852               	movf	??___flmul,w
  4808  0689  00F0               	movwf	__Umul8_16@multiplicand
  4809  068A  0850               	movf	___flmul@a+2,w
  4810  068B  120A  158A  212C  120A  118A  	fcall	__Umul8_16
  4811  0690  0871               	movf	?__Umul8_16+1,w
  4812  0691  1283               	bcf	3,5	;RP0=0, select bank0
  4813  0692  1303               	bcf	3,6	;RP1=0, select bank0
  4814  0693  00E3               	movwf	___flmul@temp+1
  4815  0694  0870               	movf	?__Umul8_16,w
  4816  0695  00E2               	movwf	___flmul@temp
  4817  0696                     l2127:
  4818  0696  0862               	movf	___flmul@temp,w
  4819  0697  00D2               	movwf	??___flmul
  4820  0698  0863               	movf	___flmul@temp+1,w
  4821  0699  00D3               	movwf	??___flmul+1
  4822  069A  01D4               	clrf	??___flmul+2
  4823  069B  01D5               	clrf	??___flmul+3
  4824  069C  3008               	movlw	8
  4825  069D                     u2415:
  4826  069D  1003               	clrc
  4827  069E  0DD2               	rlf	??___flmul,f
  4828  069F  0DD3               	rlf	??___flmul+1,f
  4829  06A0  0DD4               	rlf	??___flmul+2,f
  4830  06A1  0DD5               	rlf	??___flmul+3,f
  4831  06A2                     u2410:
  4832  06A2  3EFF               	addlw	-1
  4833  06A3  1D03               	skipz
  4834  06A4  2E9D               	goto	u2415
  4835  06A5  0852               	movf	??___flmul,w
  4836  06A6  07DE               	addwf	___flmul@prod,f
  4837  06A7  0853               	movf	??___flmul+1,w
  4838  06A8  1103               	clrz
  4839  06A9  1803               	skipnc
  4840  06AA  3E01               	addlw	1
  4841  06AB  1903               	skipnz
  4842  06AC  2EAE               	goto	u2421
  4843  06AD  07DF               	addwf	___flmul@prod+1,f
  4844  06AE                     u2421:
  4845  06AE  0854               	movf	??___flmul+2,w
  4846  06AF  1103               	clrz
  4847  06B0  1803               	skipnc
  4848  06B1  3E01               	addlw	1
  4849  06B2  1903               	skipnz
  4850  06B3  2EB5               	goto	u2422
  4851  06B4  07E0               	addwf	___flmul@prod+2,f
  4852  06B5                     u2422:
  4853  06B5  0855               	movf	??___flmul+3,w
  4854  06B6  1103               	clrz
  4855  06B7  1803               	skipnc
  4856  06B8  3E01               	addlw	1
  4857  06B9  1903               	skipnz
  4858  06BA  2EBC               	goto	u2423
  4859  06BB  07E1               	addwf	___flmul@prod+3,f
  4860  06BC                     u2423:
  4861  06BC                     l2129:
  4862  06BC  0858               	movf	___flmul@grs,w
  4863  06BD  00D2               	movwf	??___flmul
  4864  06BE  0859               	movf	___flmul@grs+1,w
  4865  06BF  00D3               	movwf	??___flmul+1
  4866  06C0  085A               	movf	___flmul@grs+2,w
  4867  06C1  00D4               	movwf	??___flmul+2
  4868  06C2  085B               	movf	___flmul@grs+3,w
  4869  06C3  00D5               	movwf	??___flmul+3
  4870  06C4  3018               	movlw	24
  4871  06C5                     u2435:
  4872  06C5  1003               	clrc
  4873  06C6  0CD5               	rrf	??___flmul+3,f
  4874  06C7  0CD4               	rrf	??___flmul+2,f
  4875  06C8  0CD3               	rrf	??___flmul+1,f
  4876  06C9  0CD2               	rrf	??___flmul,f
  4877  06CA                     u2430:
  4878  06CA  3EFF               	addlw	-1
  4879  06CB  1D03               	skipz
  4880  06CC  2EC5               	goto	u2435
  4881  06CD  0852               	movf	??___flmul,w
  4882  06CE  07DE               	addwf	___flmul@prod,f
  4883  06CF  0853               	movf	??___flmul+1,w
  4884  06D0  1103               	clrz
  4885  06D1  1803               	skipnc
  4886  06D2  3E01               	addlw	1
  4887  06D3  1903               	skipnz
  4888  06D4  2ED6               	goto	u2441
  4889  06D5  07DF               	addwf	___flmul@prod+1,f
  4890  06D6                     u2441:
  4891  06D6  0854               	movf	??___flmul+2,w
  4892  06D7  1103               	clrz
  4893  06D8  1803               	skipnc
  4894  06D9  3E01               	addlw	1
  4895  06DA  1903               	skipnz
  4896  06DB  2EDD               	goto	u2442
  4897  06DC  07E0               	addwf	___flmul@prod+2,f
  4898  06DD                     u2442:
  4899  06DD  0855               	movf	??___flmul+3,w
  4900  06DE  1103               	clrz
  4901  06DF  1803               	skipnc
  4902  06E0  3E01               	addlw	1
  4903  06E1  1903               	skipnz
  4904  06E2  2EE4               	goto	u2443
  4905  06E3  07E1               	addwf	___flmul@prod+3,f
  4906  06E4                     u2443:
  4907  06E4                     l2131:
  4908  06E4  3008               	movlw	8
  4909  06E5  00D2               	movwf	??___flmul
  4910  06E6                     u2455:
  4911  06E6  1003               	clrc
  4912  06E7  0DD8               	rlf	___flmul@grs,f
  4913  06E8  0DD9               	rlf	___flmul@grs+1,f
  4914  06E9  0DDA               	rlf	___flmul@grs+2,f
  4915  06EA  0DDB               	rlf	___flmul@grs+3,f
  4916  06EB  0BD2               	decfsz	??___flmul,f
  4917  06EC  2EE6               	goto	u2455
  4918  06ED                     l2133:
  4919  06ED  085D               	movf	___flmul@bexp,w
  4920  06EE  075C               	addwf	___flmul@aexp,w
  4921  06EF  00D2               	movwf	??___flmul
  4922  06F0  01D3               	clrf	??___flmul+1
  4923  06F1  0DD3               	rlf	??___flmul+1,f
  4924  06F2  0852               	movf	??___flmul,w
  4925  06F3  3E82               	addlw	130
  4926  06F4  00E2               	movwf	___flmul@temp
  4927  06F5  0853               	movf	??___flmul+1,w
  4928  06F6  1803               	skipnc
  4929  06F7  3E01               	addlw	1
  4930  06F8  3EFF               	addlw	255
  4931  06F9  00E3               	movwf	___flmul@temp+1
  4932  06FA  2F18               	goto	l2145
  4933  06FB                     l2135:
  4934  06FB  3001               	movlw	1
  4935  06FC  00D2               	movwf	??___flmul
  4936  06FD                     u2465:
  4937  06FD  1003               	clrc
  4938  06FE  0DDE               	rlf	___flmul@prod,f
  4939  06FF  0DDF               	rlf	___flmul@prod+1,f
  4940  0700  0DE0               	rlf	___flmul@prod+2,f
  4941  0701  0DE1               	rlf	___flmul@prod+3,f
  4942  0702  0BD2               	decfsz	??___flmul,f
  4943  0703  2EFD               	goto	u2465
  4944  0704                     l2137:
  4945  0704  1FDB               	btfss	___flmul@grs+3,7
  4946  0705  2F07               	goto	u2471
  4947  0706  2F08               	goto	u2470
  4948  0707                     u2471:
  4949  0707  2F09               	goto	l2141
  4950  0708                     u2470:
  4951  0708                     l2139:
  4952  0708  145E               	bsf	___flmul@prod,0
  4953  0709                     l2141:
  4954  0709  3001               	movlw	1
  4955  070A  00D2               	movwf	??___flmul
  4956  070B                     u2485:
  4957  070B  1003               	clrc
  4958  070C  0DD8               	rlf	___flmul@grs,f
  4959  070D  0DD9               	rlf	___flmul@grs+1,f
  4960  070E  0DDA               	rlf	___flmul@grs+2,f
  4961  070F  0DDB               	rlf	___flmul@grs+3,f
  4962  0710  0BD2               	decfsz	??___flmul,f
  4963  0711  2F0B               	goto	u2485
  4964  0712                     l2143:
  4965  0712  30FF               	movlw	255
  4966  0713  07E2               	addwf	___flmul@temp,f
  4967  0714  1803               	skipnc
  4968  0715  0AE3               	incf	___flmul@temp+1,f
  4969  0716  30FF               	movlw	255
  4970  0717  07E3               	addwf	___flmul@temp+1,f
  4971  0718                     l2145:
  4972  0718  1FE0               	btfss	___flmul@prod+2,7
  4973  0719  2F1B               	goto	u2491
  4974  071A  2F1C               	goto	u2490
  4975  071B                     u2491:
  4976  071B  2EFB               	goto	l2135
  4977  071C                     u2490:
  4978  071C                     l2147:
  4979  071C  01DC               	clrf	___flmul@aexp
  4980  071D                     l2149:
  4981  071D  1FDB               	btfss	___flmul@grs+3,7
  4982  071E  2F20               	goto	u2501
  4983  071F  2F21               	goto	u2500
  4984  0720                     u2501:
  4985  0720  2F3D               	goto	l2157
  4986  0721                     u2500:
  4987  0721                     l2151:
  4988  0721  30FF               	movlw	255
  4989  0722  0558               	andwf	___flmul@grs,w
  4990  0723  00D2               	movwf	??___flmul
  4991  0724  30FF               	movlw	255
  4992  0725  0559               	andwf	___flmul@grs+1,w
  4993  0726  00D3               	movwf	??___flmul+1
  4994  0727  30FF               	movlw	255
  4995  0728  055A               	andwf	___flmul@grs+2,w
  4996  0729  00D4               	movwf	??___flmul+2
  4997  072A  307F               	movlw	127
  4998  072B  055B               	andwf	___flmul@grs+3,w
  4999  072C  00D5               	movwf	??___flmul+3
  5000  072D  0855               	movf	??___flmul+3,w
  5001  072E  0454               	iorwf	??___flmul+2,w
  5002  072F  0453               	iorwf	??___flmul+1,w
  5003  0730  0452               	iorwf	??___flmul,w
  5004  0731  1903               	skipnz
  5005  0732  2F34               	goto	u2511
  5006  0733  2F35               	goto	u2510
  5007  0734                     u2511:
  5008  0734  2F38               	goto	l735
  5009  0735                     u2510:
  5010  0735                     l2153:
  5011  0735  01DC               	clrf	___flmul@aexp
  5012  0736  0ADC               	incf	___flmul@aexp,f
  5013  0737  2F3D               	goto	l2157
  5014  0738                     l735:
  5015  0738  1C5E               	btfss	___flmul@prod,0
  5016  0739  2F3B               	goto	u2521
  5017  073A  2F3C               	goto	u2520
  5018  073B                     u2521:
  5019  073B  2F3D               	goto	l2157
  5020  073C                     u2520:
  5021  073C  2F35               	goto	l2153
  5022  073D                     l2157:
  5023  073D  085C               	movf	___flmul@aexp,w
  5024  073E  1903               	btfsc	3,2
  5025  073F  2F41               	goto	u2531
  5026  0740  2F42               	goto	u2530
  5027  0741                     u2531:
  5028  0741  2F73               	goto	l2167
  5029  0742                     u2530:
  5030  0742                     l2159:
  5031  0742  3001               	movlw	1
  5032  0743  07DE               	addwf	___flmul@prod,f
  5033  0744  3000               	movlw	0
  5034  0745  1803               	skipnc
  5035  0746  3001               	movlw	1
  5036  0747  07DF               	addwf	___flmul@prod+1,f
  5037  0748  3000               	movlw	0
  5038  0749  1803               	skipnc
  5039  074A  3001               	movlw	1
  5040  074B  07E0               	addwf	___flmul@prod+2,f
  5041  074C  3000               	movlw	0
  5042  074D  1803               	skipnc
  5043  074E  3001               	movlw	1
  5044  074F  07E1               	addwf	___flmul@prod+3,f
  5045  0750                     l2161:
  5046  0750  1C61               	btfss	___flmul@prod+3,0
  5047  0751  2F53               	goto	u2541
  5048  0752  2F54               	goto	u2540
  5049  0753                     u2541:
  5050  0753  2F73               	goto	l2167
  5051  0754                     u2540:
  5052  0754                     l2163:
  5053  0754  085E               	movf	___flmul@prod,w
  5054  0755  00D2               	movwf	??___flmul
  5055  0756  085F               	movf	___flmul@prod+1,w
  5056  0757  00D3               	movwf	??___flmul+1
  5057  0758  0860               	movf	___flmul@prod+2,w
  5058  0759  00D4               	movwf	??___flmul+2
  5059  075A  0861               	movf	___flmul@prod+3,w
  5060  075B  00D5               	movwf	??___flmul+3
  5061  075C  3001               	movlw	1
  5062  075D  00D6               	movwf	??___flmul+4
  5063  075E                     u2555:
  5064  075E  0D55               	rlf	??___flmul+3,w
  5065  075F  0CD5               	rrf	??___flmul+3,f
  5066  0760  0CD4               	rrf	??___flmul+2,f
  5067  0761  0CD3               	rrf	??___flmul+1,f
  5068  0762  0CD2               	rrf	??___flmul,f
  5069  0763                     u2550:
  5070  0763  0BD6               	decfsz	??___flmul+4,f
  5071  0764  2F5E               	goto	u2555
  5072  0765  0855               	movf	??___flmul+3,w
  5073  0766  00E1               	movwf	___flmul@prod+3
  5074  0767  0854               	movf	??___flmul+2,w
  5075  0768  00E0               	movwf	___flmul@prod+2
  5076  0769  0853               	movf	??___flmul+1,w
  5077  076A  00DF               	movwf	___flmul@prod+1
  5078  076B  0852               	movf	??___flmul,w
  5079  076C  00DE               	movwf	___flmul@prod
  5080  076D                     l2165:
  5081  076D  3001               	movlw	1
  5082  076E  07E2               	addwf	___flmul@temp,f
  5083  076F  1803               	skipnc
  5084  0770  0AE3               	incf	___flmul@temp+1,f
  5085  0771  3000               	movlw	0
  5086  0772  07E3               	addwf	___flmul@temp+1,f
  5087  0773                     l2167:
  5088  0773  0863               	movf	___flmul@temp+1,w
  5089  0774  3A80               	xorlw	128
  5090  0775  00FF               	movwf	btemp+1
  5091  0776  3080               	movlw	128
  5092  0777  027F               	subwf	btemp+1,w
  5093  0778  1D03               	skipz
  5094  0779  2F7C               	goto	u2565
  5095  077A  30FF               	movlw	255
  5096  077B  0262               	subwf	___flmul@temp,w
  5097  077C                     u2565:
  5098  077C  1C03               	skipc
  5099  077D  2F7F               	goto	u2561
  5100  077E  2F80               	goto	u2560
  5101  077F                     u2561:
  5102  077F  2F8B               	goto	l2171
  5103  0780                     u2560:
  5104  0780                     l2169:
  5105  0780  307F               	movlw	127
  5106  0781  1283               	bcf	3,5	;RP0=0, select bank0
  5107  0782  1303               	bcf	3,6	;RP1=0, select bank0
  5108  0783  00E1               	movwf	___flmul@prod+3
  5109  0784  3080               	movlw	128
  5110  0785  00E0               	movwf	___flmul@prod+2
  5111  0786  3000               	movlw	0
  5112  0787  00DF               	movwf	___flmul@prod+1
  5113  0788  3000               	movlw	0
  5114  0789  00DE               	movwf	___flmul@prod
  5115  078A  2FC0               	goto	l741
  5116  078B                     l2171:
  5117  078B  1283               	bcf	3,5	;RP0=0, select bank0
  5118  078C  1303               	bcf	3,6	;RP1=0, select bank0
  5119  078D  0863               	movf	___flmul@temp+1,w
  5120  078E  3A80               	xorlw	128
  5121  078F  00FF               	movwf	btemp+1
  5122  0790  3080               	movlw	128
  5123  0791  027F               	subwf	btemp+1,w
  5124  0792  1D03               	skipz
  5125  0793  2F96               	goto	u2575
  5126  0794  3001               	movlw	1
  5127  0795  0262               	subwf	___flmul@temp,w
  5128  0796                     u2575:
  5129  0796  1803               	skipnc
  5130  0797  2F99               	goto	u2571
  5131  0798  2F9A               	goto	u2570
  5132  0799                     u2571:
  5133  0799  2FA6               	goto	l2177
  5134  079A                     u2570:
  5135  079A                     l2173:
  5136  079A  3000               	movlw	0
  5137  079B  1283               	bcf	3,5	;RP0=0, select bank0
  5138  079C  1303               	bcf	3,6	;RP1=0, select bank0
  5139  079D  00E1               	movwf	___flmul@prod+3
  5140  079E  3000               	movlw	0
  5141  079F  00E0               	movwf	___flmul@prod+2
  5142  07A0  3000               	movlw	0
  5143  07A1  00DF               	movwf	___flmul@prod+1
  5144  07A2  3000               	movlw	0
  5145  07A3  00DE               	movwf	___flmul@prod
  5146  07A4                     l2175:
  5147  07A4  01D7               	clrf	___flmul@sign
  5148  07A5  2FC0               	goto	l741
  5149  07A6                     l2177:
  5150  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  5151  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  5152  07A8  0862               	movf	___flmul@temp,w
  5153  07A9  00D2               	movwf	??___flmul
  5154  07AA  0852               	movf	??___flmul,w
  5155  07AB  00DD               	movwf	___flmul@bexp
  5156  07AC  30FF               	movlw	255
  5157  07AD  05DE               	andwf	___flmul@prod,f
  5158  07AE  30FF               	movlw	255
  5159  07AF  05DF               	andwf	___flmul@prod+1,f
  5160  07B0  307F               	movlw	127
  5161  07B1  05E0               	andwf	___flmul@prod+2,f
  5162  07B2  3000               	movlw	0
  5163  07B3  05E1               	andwf	___flmul@prod+3,f
  5164  07B4                     l2179:
  5165  07B4  1C5D               	btfss	___flmul@bexp,0
  5166  07B5  2FB7               	goto	u2581
  5167  07B6  2FB8               	goto	u2580
  5168  07B7                     u2581:
  5169  07B7  2FB9               	goto	l2183
  5170  07B8                     u2580:
  5171  07B8                     l2181:
  5172  07B8  17E0               	bsf	___flmul@prod+2,7
  5173  07B9                     l2183:
  5174  07B9  085D               	movf	___flmul@bexp,w
  5175  07BA  00D2               	movwf	??___flmul
  5176  07BB  1003               	clrc
  5177  07BC  0C52               	rrf	??___flmul,w
  5178  07BD  00D3               	movwf	??___flmul+1
  5179  07BE  0853               	movf	??___flmul+1,w
  5180  07BF  00E1               	movwf	___flmul@prod+3
  5181  07C0                     l741:
  5182  07C0  0857               	movf	___flmul@sign,w
  5183  07C1  00D2               	movwf	??___flmul
  5184  07C2  0852               	movf	??___flmul,w
  5185  07C3  04E1               	iorwf	___flmul@prod+3,f
  5186  07C4                     l2185:
  5187  07C4  0861               	movf	___flmul@prod+3,w
  5188  07C5  00CD               	movwf	?___flmul+3
  5189  07C6  0860               	movf	___flmul@prod+2,w
  5190  07C7  00CC               	movwf	?___flmul+2
  5191  07C8  085F               	movf	___flmul@prod+1,w
  5192  07C9  00CB               	movwf	?___flmul+1
  5193  07CA  085E               	movf	___flmul@prod,w
  5194  07CB  00CA               	movwf	?___flmul
  5195  07CC                     l729:
  5196  07CC  0008               	return
  5197  07CD                     __end_of___flmul:
  5198                           
  5199                           	psect	text16
  5200  092C                     __ptext16:	
  5201 ;; *************** function __Umul8_16 *****************
  5202 ;; Defined at:
  5203 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul8_16.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  multiplier      1    wreg     unsigned char 
  5206 ;;  multiplicand    1    0[COMMON] unsigned char 
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  multiplier      1    8[COMMON] unsigned char 
  5209 ;;  word_mpld       2    6[COMMON] unsigned int 
  5210 ;;  product         2    4[COMMON] unsigned int 
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  2    0[COMMON] unsigned int 
  5213 ;; Registers used:
  5214 ;;		wreg, status,2, status,0
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5220 ;;      Params:         2       0       0       0       0
  5221 ;;      Locals:         5       0       0       0       0
  5222 ;;      Temps:          2       0       0       0       0
  5223 ;;      Totals:         9       0       0       0       0
  5224 ;;Total ram usage:        9 bytes
  5225 ;; Hardware stack levels used: 1
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		___flmul
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233  092C                     __Umul8_16:	
  5234                           ;psect for function __Umul8_16
  5235                           
  5236                           
  5237                           ;incstack = 0
  5238                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5239                           ;__Umul8_16@multiplier stored from wreg
  5240  092C  00F8               	movwf	__Umul8_16@multiplier
  5241  092D                     l1737:
  5242  092D  01F4               	clrf	__Umul8_16@product
  5243  092E  01F5               	clrf	__Umul8_16@product+1
  5244  092F                     l1739:
  5245  092F  0870               	movf	__Umul8_16@multiplicand,w
  5246  0930  00F2               	movwf	??__Umul8_16
  5247  0931  01F3               	clrf	??__Umul8_16+1
  5248  0932  0872               	movf	??__Umul8_16,w
  5249  0933  00F6               	movwf	__Umul8_16@word_mpld
  5250  0934  0873               	movf	??__Umul8_16+1,w
  5251  0935  00F7               	movwf	__Umul8_16@word_mpld+1
  5252  0936                     l1741:
  5253  0936  1C78               	btfss	__Umul8_16@multiplier,0
  5254  0937  2939               	goto	u1541
  5255  0938  293A               	goto	u1540
  5256  0939                     u1541:
  5257  0939  2940               	goto	l748
  5258  093A                     u1540:
  5259  093A                     l1743:
  5260  093A  0876               	movf	__Umul8_16@word_mpld,w
  5261  093B  07F4               	addwf	__Umul8_16@product,f
  5262  093C  1803               	skipnc
  5263  093D  0AF5               	incf	__Umul8_16@product+1,f
  5264  093E  0877               	movf	__Umul8_16@word_mpld+1,w
  5265  093F  07F5               	addwf	__Umul8_16@product+1,f
  5266  0940                     l748:
  5267  0940  3001               	movlw	1
  5268  0941                     u1555:
  5269  0941  1003               	clrc
  5270  0942  0DF6               	rlf	__Umul8_16@word_mpld,f
  5271  0943  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5272  0944  3EFF               	addlw	-1
  5273  0945  1D03               	skipz
  5274  0946  2941               	goto	u1555
  5275  0947  1003               	clrc
  5276  0948  0CF8               	rrf	__Umul8_16@multiplier,f
  5277  0949                     l1745:
  5278  0949  0878               	movf	__Umul8_16@multiplier,w
  5279  094A  1D03               	btfss	3,2
  5280  094B  294D               	goto	u1561
  5281  094C  294E               	goto	u1560
  5282  094D                     u1561:
  5283  094D  2936               	goto	l1741
  5284  094E                     u1560:
  5285  094E                     l1747:
  5286  094E  0875               	movf	__Umul8_16@product+1,w
  5287  094F  00F1               	movwf	?__Umul8_16+1
  5288  0950  0874               	movf	__Umul8_16@product,w
  5289  0951  00F0               	movwf	?__Umul8_16
  5290  0952                     l750:
  5291  0952  0008               	return
  5292  0953                     __end_of__Umul8_16:
  5293                           
  5294                           	psect	text17
  5295  0003                     __ptext17:	
  5296 ;; *************** function ___fldiv *****************
  5297 ;; Defined at:
  5298 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcdiv.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;  a               4   16[BANK0 ] unsigned int 
  5301 ;;  b               4   20[BANK0 ] unsigned int 
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;  grs             4   36[BANK0 ] unsigned long 
  5304 ;;  rem             4   29[BANK0 ] unsigned long 
  5305 ;;  new_exp         2   34[BANK0 ] int 
  5306 ;;  aexp            1   41[BANK0 ] unsigned char 
  5307 ;;  bexp            1   40[BANK0 ] unsigned char 
  5308 ;;  sign            1   33[BANK0 ] unsigned char 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  4   16[BANK0 ] unsigned char 
  5311 ;; Registers used:
  5312 ;;		wreg, status,2, status,0, btemp+1
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5318 ;;      Params:         0       8       0       0       0
  5319 ;;      Locals:         0      13       0       0       0
  5320 ;;      Temps:          0       5       0       0       0
  5321 ;;      Totals:         0      26       0       0       0
  5322 ;;Total ram usage:       26 bytes
  5323 ;; Hardware stack levels used: 1
  5324 ;; This function calls:
  5325 ;;		Nothing
  5326 ;; This function is called by:
  5327 ;;		_PWM_Duty
  5328 ;;		_PWM_Duty2
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332  0003                     ___fldiv:	
  5333                           ;psect for function ___fldiv
  5334                           
  5335  0003                     l1907:	
  5336                           ;incstack = 0
  5337                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5338                           
  5339  0003  1283               	bcf	3,5	;RP0=0, select bank0
  5340  0004  1303               	bcf	3,6	;RP1=0, select bank0
  5341  0005  0837               	movf	___fldiv@b+3,w
  5342  0006  3980               	andlw	128
  5343  0007  00B8               	movwf	??___fldiv
  5344  0008  0838               	movf	??___fldiv,w
  5345  0009  00C1               	movwf	___fldiv@sign
  5346  000A                     l1909:
  5347  000A  0837               	movf	___fldiv@b+3,w
  5348  000B  00B8               	movwf	??___fldiv
  5349  000C  0738               	addwf	??___fldiv,w
  5350  000D  00B9               	movwf	??___fldiv+1
  5351  000E  0839               	movf	??___fldiv+1,w
  5352  000F  00C8               	movwf	___fldiv@bexp
  5353  0010                     l1911:
  5354  0010  1FB6               	btfss	___fldiv@b+2,7
  5355  0011  2813               	goto	u1931
  5356  0012  2814               	goto	u1930
  5357  0013                     u1931:
  5358  0013  2815               	goto	l1915
  5359  0014                     u1930:
  5360  0014                     l1913:
  5361  0014  1448               	bsf	___fldiv@bexp,0
  5362  0015                     l1915:
  5363  0015  0848               	movf	___fldiv@bexp,w
  5364  0016  1903               	btfsc	3,2
  5365  0017  2819               	goto	u1941
  5366  0018  281A               	goto	u1940
  5367  0019                     u1941:
  5368  0019  282A               	goto	l1925
  5369  001A                     u1940:
  5370  001A                     l1917:
  5371  001A  0A48               	incf	___fldiv@bexp,w
  5372  001B  1D03               	btfss	3,2
  5373  001C  281E               	goto	u1951
  5374  001D  281F               	goto	u1950
  5375  001E                     u1951:
  5376  001E  2827               	goto	l1921
  5377  001F                     u1950:
  5378  001F                     l1919:
  5379  001F  3000               	movlw	0
  5380  0020  00B7               	movwf	___fldiv@b+3
  5381  0021  3000               	movlw	0
  5382  0022  00B6               	movwf	___fldiv@b+2
  5383  0023  3000               	movlw	0
  5384  0024  00B5               	movwf	___fldiv@b+1
  5385  0025  3000               	movlw	0
  5386  0026  00B4               	movwf	___fldiv@b
  5387  0027                     l1921:
  5388  0027  17B6               	bsf	___fldiv@b+2,7
  5389  0028                     l1923:
  5390  0028  01B7               	clrf	___fldiv@b+3
  5391  0029  2832               	goto	l1927
  5392  002A                     l1925:
  5393  002A  3000               	movlw	0
  5394  002B  00B7               	movwf	___fldiv@b+3
  5395  002C  3000               	movlw	0
  5396  002D  00B6               	movwf	___fldiv@b+2
  5397  002E  3000               	movlw	0
  5398  002F  00B5               	movwf	___fldiv@b+1
  5399  0030  3000               	movlw	0
  5400  0031  00B4               	movwf	___fldiv@b
  5401  0032                     l1927:
  5402  0032  0833               	movf	___fldiv@a+3,w
  5403  0033  3980               	andlw	128
  5404  0034  00B8               	movwf	??___fldiv
  5405  0035  0838               	movf	??___fldiv,w
  5406  0036  06C1               	xorwf	___fldiv@sign,f
  5407  0037                     l1929:
  5408  0037  0833               	movf	___fldiv@a+3,w
  5409  0038  00B8               	movwf	??___fldiv
  5410  0039  0738               	addwf	??___fldiv,w
  5411  003A  00B9               	movwf	??___fldiv+1
  5412  003B  0839               	movf	??___fldiv+1,w
  5413  003C  00C9               	movwf	___fldiv@aexp
  5414  003D                     l1931:
  5415  003D  1FB2               	btfss	___fldiv@a+2,7
  5416  003E  2840               	goto	u1961
  5417  003F  2841               	goto	u1960
  5418  0040                     u1961:
  5419  0040  2842               	goto	l1935
  5420  0041                     u1960:
  5421  0041                     l1933:
  5422  0041  1449               	bsf	___fldiv@aexp,0
  5423  0042                     l1935:
  5424  0042  0849               	movf	___fldiv@aexp,w
  5425  0043  1903               	btfsc	3,2
  5426  0044  2846               	goto	u1971
  5427  0045  2847               	goto	u1970
  5428  0046                     u1971:
  5429  0046  2857               	goto	l1945
  5430  0047                     u1970:
  5431  0047                     l1937:
  5432  0047  0A49               	incf	___fldiv@aexp,w
  5433  0048  1D03               	btfss	3,2
  5434  0049  284B               	goto	u1981
  5435  004A  284C               	goto	u1980
  5436  004B                     u1981:
  5437  004B  2854               	goto	l1941
  5438  004C                     u1980:
  5439  004C                     l1939:
  5440  004C  3000               	movlw	0
  5441  004D  00B3               	movwf	___fldiv@a+3
  5442  004E  3000               	movlw	0
  5443  004F  00B2               	movwf	___fldiv@a+2
  5444  0050  3000               	movlw	0
  5445  0051  00B1               	movwf	___fldiv@a+1
  5446  0052  3000               	movlw	0
  5447  0053  00B0               	movwf	___fldiv@a
  5448  0054                     l1941:
  5449  0054  17B2               	bsf	___fldiv@a+2,7
  5450  0055                     l1943:
  5451  0055  01B3               	clrf	___fldiv@a+3
  5452  0056  285F               	goto	l689
  5453  0057                     l1945:
  5454  0057  3000               	movlw	0
  5455  0058  00B3               	movwf	___fldiv@a+3
  5456  0059  3000               	movlw	0
  5457  005A  00B2               	movwf	___fldiv@a+2
  5458  005B  3000               	movlw	0
  5459  005C  00B1               	movwf	___fldiv@a+1
  5460  005D  3000               	movlw	0
  5461  005E  00B0               	movwf	___fldiv@a
  5462  005F                     l689:
  5463  005F  0833               	movf	___fldiv@a+3,w
  5464  0060  0432               	iorwf	___fldiv@a+2,w
  5465  0061  0431               	iorwf	___fldiv@a+1,w
  5466  0062  0430               	iorwf	___fldiv@a,w
  5467  0063  1D03               	skipz
  5468  0064  2866               	goto	u1991
  5469  0065  2867               	goto	u1990
  5470  0066                     u1991:
  5471  0066  2880               	goto	l1955
  5472  0067                     u1990:
  5473  0067                     l1947:
  5474  0067  3000               	movlw	0
  5475  0068  00B7               	movwf	___fldiv@b+3
  5476  0069  3000               	movlw	0
  5477  006A  00B6               	movwf	___fldiv@b+2
  5478  006B  3000               	movlw	0
  5479  006C  00B5               	movwf	___fldiv@b+1
  5480  006D  3000               	movlw	0
  5481  006E  00B4               	movwf	___fldiv@b
  5482  006F  3080               	movlw	128
  5483  0070  04B6               	iorwf	___fldiv@b+2,f
  5484  0071  307F               	movlw	127
  5485  0072  04B7               	iorwf	___fldiv@b+3,f
  5486  0073                     l1949:
  5487  0073  0841               	movf	___fldiv@sign,w
  5488  0074  00B8               	movwf	??___fldiv
  5489  0075  0838               	movf	??___fldiv,w
  5490  0076  04B7               	iorwf	___fldiv@b+3,f
  5491  0077                     l1951:
  5492  0077  0837               	movf	___fldiv@b+3,w
  5493  0078  00B3               	movwf	?___fldiv+3
  5494  0079  0836               	movf	___fldiv@b+2,w
  5495  007A  00B2               	movwf	?___fldiv+2
  5496  007B  0835               	movf	___fldiv@b+1,w
  5497  007C  00B1               	movwf	?___fldiv+1
  5498  007D  0834               	movf	___fldiv@b,w
  5499  007E  00B0               	movwf	?___fldiv
  5500  007F  29DF               	goto	l691
  5501  0080                     l1955:
  5502  0080  0848               	movf	___fldiv@bexp,w
  5503  0081  1D03               	btfss	3,2
  5504  0082  2884               	goto	u2001
  5505  0083  2885               	goto	u2000
  5506  0084                     u2001:
  5507  0084  288E               	goto	l1961
  5508  0085                     u2000:
  5509  0085                     l1957:
  5510  0085  3000               	movlw	0
  5511  0086  00B3               	movwf	?___fldiv+3
  5512  0087  3000               	movlw	0
  5513  0088  00B2               	movwf	?___fldiv+2
  5514  0089  3000               	movlw	0
  5515  008A  00B1               	movwf	?___fldiv+1
  5516  008B  3000               	movlw	0
  5517  008C  00B0               	movwf	?___fldiv
  5518  008D  29DF               	goto	l691
  5519  008E                     l1961:
  5520  008E  0848               	movf	___fldiv@bexp,w
  5521  008F  00B8               	movwf	??___fldiv
  5522  0090  01B9               	clrf	??___fldiv+1
  5523  0091  0839               	movf	??___fldiv+1,w
  5524  0092  00BB               	movwf	??___fldiv+3
  5525  0093  0849               	movf	___fldiv@aexp,w
  5526  0094  0238               	subwf	??___fldiv,w
  5527  0095  00BA               	movwf	??___fldiv+2
  5528  0096  1C03               	skipc
  5529  0097  03BB               	decf	??___fldiv+3,f
  5530  0098  083A               	movf	??___fldiv+2,w
  5531  0099  3E7F               	addlw	127
  5532  009A  00C2               	movwf	___fldiv@new_exp
  5533  009B  083B               	movf	??___fldiv+3,w
  5534  009C  1803               	skipnc
  5535  009D  3E01               	addlw	1
  5536  009E  3E00               	addlw	0
  5537  009F  00C3               	movwf	___fldiv@new_exp+1
  5538  00A0                     l1963:
  5539  00A0  0837               	movf	___fldiv@b+3,w
  5540  00A1  00C0               	movwf	___fldiv@rem+3
  5541  00A2  0836               	movf	___fldiv@b+2,w
  5542  00A3  00BF               	movwf	___fldiv@rem+2
  5543  00A4  0835               	movf	___fldiv@b+1,w
  5544  00A5  00BE               	movwf	___fldiv@rem+1
  5545  00A6  0834               	movf	___fldiv@b,w
  5546  00A7  00BD               	movwf	___fldiv@rem
  5547  00A8                     l1965:
  5548  00A8  3000               	movlw	0
  5549  00A9  00B7               	movwf	___fldiv@b+3
  5550  00AA  3000               	movlw	0
  5551  00AB  00B6               	movwf	___fldiv@b+2
  5552  00AC  3000               	movlw	0
  5553  00AD  00B5               	movwf	___fldiv@b+1
  5554  00AE  3000               	movlw	0
  5555  00AF  00B4               	movwf	___fldiv@b
  5556  00B0                     l1967:
  5557  00B0  3000               	movlw	0
  5558  00B1  00C7               	movwf	___fldiv@grs+3
  5559  00B2  3000               	movlw	0
  5560  00B3  00C6               	movwf	___fldiv@grs+2
  5561  00B4  3000               	movlw	0
  5562  00B5  00C5               	movwf	___fldiv@grs+1
  5563  00B6  3000               	movlw	0
  5564  00B7  00C4               	movwf	___fldiv@grs
  5565  00B8                     l1969:
  5566  00B8  01C9               	clrf	___fldiv@aexp
  5567  00B9  2904               	goto	l1989
  5568  00BA                     l1971:
  5569  00BA  0849               	movf	___fldiv@aexp,w
  5570  00BB  1903               	btfsc	3,2
  5571  00BC  28BE               	goto	u2011
  5572  00BD  28BF               	goto	u2010
  5573  00BE                     u2011:
  5574  00BE  28DF               	goto	l1981
  5575  00BF                     u2010:
  5576  00BF                     l1973:
  5577  00BF  3001               	movlw	1
  5578  00C0  00B8               	movwf	??___fldiv
  5579  00C1                     u2025:
  5580  00C1  1003               	clrc
  5581  00C2  0DBD               	rlf	___fldiv@rem,f
  5582  00C3  0DBE               	rlf	___fldiv@rem+1,f
  5583  00C4  0DBF               	rlf	___fldiv@rem+2,f
  5584  00C5  0DC0               	rlf	___fldiv@rem+3,f
  5585  00C6  0BB8               	decfsz	??___fldiv,f
  5586  00C7  28C1               	goto	u2025
  5587  00C8  3001               	movlw	1
  5588  00C9  00B8               	movwf	??___fldiv
  5589  00CA                     u2035:
  5590  00CA  1003               	clrc
  5591  00CB  0DB4               	rlf	___fldiv@b,f
  5592  00CC  0DB5               	rlf	___fldiv@b+1,f
  5593  00CD  0DB6               	rlf	___fldiv@b+2,f
  5594  00CE  0DB7               	rlf	___fldiv@b+3,f
  5595  00CF  0BB8               	decfsz	??___fldiv,f
  5596  00D0  28CA               	goto	u2035
  5597  00D1                     l1975:
  5598  00D1  1FC7               	btfss	___fldiv@grs+3,7
  5599  00D2  28D4               	goto	u2041
  5600  00D3  28D5               	goto	u2040
  5601  00D4                     u2041:
  5602  00D4  28D6               	goto	l1979
  5603  00D5                     u2040:
  5604  00D5                     l1977:
  5605  00D5  1434               	bsf	___fldiv@b,0
  5606  00D6                     l1979:
  5607  00D6  3001               	movlw	1
  5608  00D7  00B8               	movwf	??___fldiv
  5609  00D8                     u2055:
  5610  00D8  1003               	clrc
  5611  00D9  0DC4               	rlf	___fldiv@grs,f
  5612  00DA  0DC5               	rlf	___fldiv@grs+1,f
  5613  00DB  0DC6               	rlf	___fldiv@grs+2,f
  5614  00DC  0DC7               	rlf	___fldiv@grs+3,f
  5615  00DD  0BB8               	decfsz	??___fldiv,f
  5616  00DE  28D8               	goto	u2055
  5617  00DF                     l1981:
  5618  00DF  0833               	movf	___fldiv@a+3,w
  5619  00E0  0240               	subwf	___fldiv@rem+3,w
  5620  00E1  1D03               	skipz
  5621  00E2  28ED               	goto	u2065
  5622  00E3  0832               	movf	___fldiv@a+2,w
  5623  00E4  023F               	subwf	___fldiv@rem+2,w
  5624  00E5  1D03               	skipz
  5625  00E6  28ED               	goto	u2065
  5626  00E7  0831               	movf	___fldiv@a+1,w
  5627  00E8  023E               	subwf	___fldiv@rem+1,w
  5628  00E9  1D03               	skipz
  5629  00EA  28ED               	goto	u2065
  5630  00EB  0830               	movf	___fldiv@a,w
  5631  00EC  023D               	subwf	___fldiv@rem,w
  5632  00ED                     u2065:
  5633  00ED  1C03               	skipc
  5634  00EE  28F0               	goto	u2061
  5635  00EF  28F1               	goto	u2060
  5636  00F0                     u2061:
  5637  00F0  2900               	goto	l1987
  5638  00F1                     u2060:
  5639  00F1                     l1983:
  5640  00F1  1747               	bsf	___fldiv@grs+3,6
  5641  00F2                     l1985:
  5642  00F2  0830               	movf	___fldiv@a,w
  5643  00F3  02BD               	subwf	___fldiv@rem,f
  5644  00F4  0831               	movf	___fldiv@a+1,w
  5645  00F5  1C03               	skipc
  5646  00F6  0F31               	incfsz	___fldiv@a+1,w
  5647  00F7  02BE               	subwf	___fldiv@rem+1,f
  5648  00F8  0832               	movf	___fldiv@a+2,w
  5649  00F9  1C03               	skipc
  5650  00FA  0F32               	incfsz	___fldiv@a+2,w
  5651  00FB  02BF               	subwf	___fldiv@rem+2,f
  5652  00FC  0833               	movf	___fldiv@a+3,w
  5653  00FD  1C03               	skipc
  5654  00FE  0F33               	incfsz	___fldiv@a+3,w
  5655  00FF  02C0               	subwf	___fldiv@rem+3,f
  5656  0100                     l1987:
  5657  0100  3001               	movlw	1
  5658  0101  00B8               	movwf	??___fldiv
  5659  0102  0838               	movf	??___fldiv,w
  5660  0103  07C9               	addwf	___fldiv@aexp,f
  5661  0104                     l1989:
  5662  0104  301A               	movlw	26
  5663  0105  0249               	subwf	___fldiv@aexp,w
  5664  0106  1C03               	skipc
  5665  0107  2909               	goto	u2071
  5666  0108  290A               	goto	u2070
  5667  0109                     u2071:
  5668  0109  28BA               	goto	l1971
  5669  010A                     u2070:
  5670  010A                     l1991:
  5671  010A  0840               	movf	___fldiv@rem+3,w
  5672  010B  043F               	iorwf	___fldiv@rem+2,w
  5673  010C  043E               	iorwf	___fldiv@rem+1,w
  5674  010D  043D               	iorwf	___fldiv@rem,w
  5675  010E  1903               	skipnz
  5676  010F  2911               	goto	u2081
  5677  0110  2912               	goto	u2080
  5678  0111                     u2081:
  5679  0111  2931               	goto	l2005
  5680  0112                     u2080:
  5681  0112                     l1993:
  5682  0112  1444               	bsf	___fldiv@grs,0
  5683  0113  2931               	goto	l2005
  5684  0114                     l1995:
  5685  0114  3001               	movlw	1
  5686  0115  00B8               	movwf	??___fldiv
  5687  0116                     u2095:
  5688  0116  1003               	clrc
  5689  0117  0DB4               	rlf	___fldiv@b,f
  5690  0118  0DB5               	rlf	___fldiv@b+1,f
  5691  0119  0DB6               	rlf	___fldiv@b+2,f
  5692  011A  0DB7               	rlf	___fldiv@b+3,f
  5693  011B  0BB8               	decfsz	??___fldiv,f
  5694  011C  2916               	goto	u2095
  5695  011D                     l1997:
  5696  011D  1FC7               	btfss	___fldiv@grs+3,7
  5697  011E  2920               	goto	u2101
  5698  011F  2921               	goto	u2100
  5699  0120                     u2101:
  5700  0120  2922               	goto	l2001
  5701  0121                     u2100:
  5702  0121                     l1999:
  5703  0121  1434               	bsf	___fldiv@b,0
  5704  0122                     l2001:
  5705  0122  3001               	movlw	1
  5706  0123  00B8               	movwf	??___fldiv
  5707  0124                     u2115:
  5708  0124  1003               	clrc
  5709  0125  0DC4               	rlf	___fldiv@grs,f
  5710  0126  0DC5               	rlf	___fldiv@grs+1,f
  5711  0127  0DC6               	rlf	___fldiv@grs+2,f
  5712  0128  0DC7               	rlf	___fldiv@grs+3,f
  5713  0129  0BB8               	decfsz	??___fldiv,f
  5714  012A  2924               	goto	u2115
  5715  012B                     l2003:
  5716  012B  30FF               	movlw	255
  5717  012C  07C2               	addwf	___fldiv@new_exp,f
  5718  012D  1803               	skipnc
  5719  012E  0AC3               	incf	___fldiv@new_exp+1,f
  5720  012F  30FF               	movlw	255
  5721  0130  07C3               	addwf	___fldiv@new_exp+1,f
  5722  0131                     l2005:
  5723  0131  1FB6               	btfss	___fldiv@b+2,7
  5724  0132  2934               	goto	u2121
  5725  0133  2935               	goto	u2120
  5726  0134                     u2121:
  5727  0134  2914               	goto	l1995
  5728  0135                     u2120:
  5729  0135                     l2007:
  5730  0135  01C9               	clrf	___fldiv@aexp
  5731  0136                     l2009:
  5732  0136  1FC7               	btfss	___fldiv@grs+3,7
  5733  0137  2939               	goto	u2131
  5734  0138  293A               	goto	u2130
  5735  0139                     u2131:
  5736  0139  2956               	goto	l2017
  5737  013A                     u2130:
  5738  013A                     l2011:
  5739  013A  30FF               	movlw	255
  5740  013B  0544               	andwf	___fldiv@grs,w
  5741  013C  00B8               	movwf	??___fldiv
  5742  013D  30FF               	movlw	255
  5743  013E  0545               	andwf	___fldiv@grs+1,w
  5744  013F  00B9               	movwf	??___fldiv+1
  5745  0140  30FF               	movlw	255
  5746  0141  0546               	andwf	___fldiv@grs+2,w
  5747  0142  00BA               	movwf	??___fldiv+2
  5748  0143  307F               	movlw	127
  5749  0144  0547               	andwf	___fldiv@grs+3,w
  5750  0145  00BB               	movwf	??___fldiv+3
  5751  0146  083B               	movf	??___fldiv+3,w
  5752  0147  043A               	iorwf	??___fldiv+2,w
  5753  0148  0439               	iorwf	??___fldiv+1,w
  5754  0149  0438               	iorwf	??___fldiv,w
  5755  014A  1903               	skipnz
  5756  014B  294D               	goto	u2141
  5757  014C  294E               	goto	u2140
  5758  014D                     u2141:
  5759  014D  2951               	goto	l705
  5760  014E                     u2140:
  5761  014E                     l2013:
  5762  014E  01C9               	clrf	___fldiv@aexp
  5763  014F  0AC9               	incf	___fldiv@aexp,f
  5764  0150  2956               	goto	l2017
  5765  0151                     l705:
  5766  0151  1C34               	btfss	___fldiv@b,0
  5767  0152  2954               	goto	u2151
  5768  0153  2955               	goto	u2150
  5769  0154                     u2151:
  5770  0154  2956               	goto	l2017
  5771  0155                     u2150:
  5772  0155  294E               	goto	l2013
  5773  0156                     l2017:
  5774  0156  0849               	movf	___fldiv@aexp,w
  5775  0157  1903               	btfsc	3,2
  5776  0158  295A               	goto	u2161
  5777  0159  295B               	goto	u2160
  5778  015A                     u2161:
  5779  015A  298C               	goto	l2027
  5780  015B                     u2160:
  5781  015B                     l2019:
  5782  015B  3001               	movlw	1
  5783  015C  07B4               	addwf	___fldiv@b,f
  5784  015D  3000               	movlw	0
  5785  015E  1803               	skipnc
  5786  015F  3001               	movlw	1
  5787  0160  07B5               	addwf	___fldiv@b+1,f
  5788  0161  3000               	movlw	0
  5789  0162  1803               	skipnc
  5790  0163  3001               	movlw	1
  5791  0164  07B6               	addwf	___fldiv@b+2,f
  5792  0165  3000               	movlw	0
  5793  0166  1803               	skipnc
  5794  0167  3001               	movlw	1
  5795  0168  07B7               	addwf	___fldiv@b+3,f
  5796  0169                     l2021:
  5797  0169  1C37               	btfss	___fldiv@b+3,0
  5798  016A  296C               	goto	u2171
  5799  016B  296D               	goto	u2170
  5800  016C                     u2171:
  5801  016C  298C               	goto	l2027
  5802  016D                     u2170:
  5803  016D                     l2023:
  5804  016D  0834               	movf	___fldiv@b,w
  5805  016E  00B8               	movwf	??___fldiv
  5806  016F  0835               	movf	___fldiv@b+1,w
  5807  0170  00B9               	movwf	??___fldiv+1
  5808  0171  0836               	movf	___fldiv@b+2,w
  5809  0172  00BA               	movwf	??___fldiv+2
  5810  0173  0837               	movf	___fldiv@b+3,w
  5811  0174  00BB               	movwf	??___fldiv+3
  5812  0175  3001               	movlw	1
  5813  0176  00BC               	movwf	??___fldiv+4
  5814  0177                     u2185:
  5815  0177  0D3B               	rlf	??___fldiv+3,w
  5816  0178  0CBB               	rrf	??___fldiv+3,f
  5817  0179  0CBA               	rrf	??___fldiv+2,f
  5818  017A  0CB9               	rrf	??___fldiv+1,f
  5819  017B  0CB8               	rrf	??___fldiv,f
  5820  017C                     u2180:
  5821  017C  0BBC               	decfsz	??___fldiv+4,f
  5822  017D  2977               	goto	u2185
  5823  017E  083B               	movf	??___fldiv+3,w
  5824  017F  00B7               	movwf	___fldiv@b+3
  5825  0180  083A               	movf	??___fldiv+2,w
  5826  0181  00B6               	movwf	___fldiv@b+2
  5827  0182  0839               	movf	??___fldiv+1,w
  5828  0183  00B5               	movwf	___fldiv@b+1
  5829  0184  0838               	movf	??___fldiv,w
  5830  0185  00B4               	movwf	___fldiv@b
  5831  0186                     l2025:
  5832  0186  3001               	movlw	1
  5833  0187  07C2               	addwf	___fldiv@new_exp,f
  5834  0188  1803               	skipnc
  5835  0189  0AC3               	incf	___fldiv@new_exp+1,f
  5836  018A  3000               	movlw	0
  5837  018B  07C3               	addwf	___fldiv@new_exp+1,f
  5838  018C                     l2027:
  5839  018C  0843               	movf	___fldiv@new_exp+1,w
  5840  018D  3A80               	xorlw	128
  5841  018E  00FF               	movwf	btemp+1
  5842  018F  3080               	movlw	128
  5843  0190  027F               	subwf	btemp+1,w
  5844  0191  1D03               	skipz
  5845  0192  2995               	goto	u2195
  5846  0193  30FF               	movlw	255
  5847  0194  0242               	subwf	___fldiv@new_exp,w
  5848  0195                     u2195:
  5849  0195  1C03               	skipc
  5850  0196  2998               	goto	u2191
  5851  0197  2999               	goto	u2190
  5852  0198                     u2191:
  5853  0198  29A7               	goto	l2031
  5854  0199                     u2190:
  5855  0199                     l2029:
  5856  0199  30FF               	movlw	255
  5857  019A  1283               	bcf	3,5	;RP0=0, select bank0
  5858  019B  1303               	bcf	3,6	;RP1=0, select bank0
  5859  019C  00C2               	movwf	___fldiv@new_exp
  5860  019D  3000               	movlw	0
  5861  019E  00C3               	movwf	___fldiv@new_exp+1
  5862  019F  3000               	movlw	0
  5863  01A0  00B7               	movwf	___fldiv@b+3
  5864  01A1  3000               	movlw	0
  5865  01A2  00B6               	movwf	___fldiv@b+2
  5866  01A3  3000               	movlw	0
  5867  01A4  00B5               	movwf	___fldiv@b+1
  5868  01A5  3000               	movlw	0
  5869  01A6  00B4               	movwf	___fldiv@b
  5870  01A7                     l2031:
  5871  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  5872  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  5873  01A9  0843               	movf	___fldiv@new_exp+1,w
  5874  01AA  3A80               	xorlw	128
  5875  01AB  00FF               	movwf	btemp+1
  5876  01AC  3080               	movlw	128
  5877  01AD  027F               	subwf	btemp+1,w
  5878  01AE  1D03               	skipz
  5879  01AF  29B2               	goto	u2205
  5880  01B0  3001               	movlw	1
  5881  01B1  0242               	subwf	___fldiv@new_exp,w
  5882  01B2                     u2205:
  5883  01B2  1803               	skipnc
  5884  01B3  29B5               	goto	u2201
  5885  01B4  29B6               	goto	u2200
  5886  01B5                     u2201:
  5887  01B5  29C3               	goto	l711
  5888  01B6                     u2200:
  5889  01B6                     l2033:
  5890  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  5891  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  5892  01B8  01C2               	clrf	___fldiv@new_exp
  5893  01B9  01C3               	clrf	___fldiv@new_exp+1
  5894  01BA                     l2035:
  5895  01BA  3000               	movlw	0
  5896  01BB  00B7               	movwf	___fldiv@b+3
  5897  01BC  3000               	movlw	0
  5898  01BD  00B6               	movwf	___fldiv@b+2
  5899  01BE  3000               	movlw	0
  5900  01BF  00B5               	movwf	___fldiv@b+1
  5901  01C0  3000               	movlw	0
  5902  01C1  00B4               	movwf	___fldiv@b
  5903  01C2                     l2037:
  5904  01C2  01C1               	clrf	___fldiv@sign
  5905  01C3                     l711:
  5906  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  5907  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  5908  01C5  0842               	movf	___fldiv@new_exp,w
  5909  01C6  00B8               	movwf	??___fldiv
  5910  01C7  0838               	movf	??___fldiv,w
  5911  01C8  00C8               	movwf	___fldiv@bexp
  5912  01C9                     l2039:
  5913  01C9  1C48               	btfss	___fldiv@bexp,0
  5914  01CA  29CC               	goto	u2211
  5915  01CB  29CD               	goto	u2210
  5916  01CC                     u2211:
  5917  01CC  29CF               	goto	l2043
  5918  01CD                     u2210:
  5919  01CD                     l2041:
  5920  01CD  17B6               	bsf	___fldiv@b+2,7
  5921  01CE  29D3               	goto	l713
  5922  01CF                     l2043:
  5923  01CF  307F               	movlw	127
  5924  01D0  00B8               	movwf	??___fldiv
  5925  01D1  0838               	movf	??___fldiv,w
  5926  01D2  05B6               	andwf	___fldiv@b+2,f
  5927  01D3                     l713:
  5928  01D3  0848               	movf	___fldiv@bexp,w
  5929  01D4  00B8               	movwf	??___fldiv
  5930  01D5  1003               	clrc
  5931  01D6  0C38               	rrf	??___fldiv,w
  5932  01D7  00B9               	movwf	??___fldiv+1
  5933  01D8  0839               	movf	??___fldiv+1,w
  5934  01D9  00B7               	movwf	___fldiv@b+3
  5935  01DA  0841               	movf	___fldiv@sign,w
  5936  01DB  00B8               	movwf	??___fldiv
  5937  01DC  0838               	movf	??___fldiv,w
  5938  01DD  04B7               	iorwf	___fldiv@b+3,f
  5939  01DE  2877               	goto	l1951
  5940  01DF                     l691:
  5941  01DF  0008               	return
  5942  01E0                     __end_of___fldiv:
  5943                           
  5944                           	psect	text18
  5945  0C43                     __ptext18:	
  5946 ;; *************** function ___aldiv *****************
  5947 ;; Defined at:
  5948 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\aldiv.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;  divisor         4    0[COMMON] long 
  5951 ;;  dividend        4    4[COMMON] long 
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  quotient        4    2[BANK0 ] long 
  5954 ;;  sign            1    1[BANK0 ] unsigned char 
  5955 ;;  counter         1    0[BANK0 ] unsigned char 
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  4    0[COMMON] long 
  5958 ;; Registers used:
  5959 ;;		wreg, status,2, status,0
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5965 ;;      Params:         8       0       0       0       0
  5966 ;;      Locals:         0       6       0       0       0
  5967 ;;      Temps:          1       0       0       0       0
  5968 ;;      Totals:         9       6       0       0       0
  5969 ;;Total ram usage:       15 bytes
  5970 ;; Hardware stack levels used: 1
  5971 ;; This function calls:
  5972 ;;		Nothing
  5973 ;; This function is called by:
  5974 ;;		_PWM_Inicializar
  5975 ;;		_PWM_Duty
  5976 ;;		_PWM_Inicializar2
  5977 ;;		_PWM_Duty2
  5978 ;;		_USART_Init
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982  0C43                     ___aldiv:	
  5983                           ;psect for function ___aldiv
  5984                           
  5985  0C43                     l1783:	
  5986                           ;incstack = 0
  5987                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5988                           
  5989  0C43  1283               	bcf	3,5	;RP0=0, select bank0
  5990  0C44  1303               	bcf	3,6	;RP1=0, select bank0
  5991  0C45  01A1               	clrf	___aldiv@sign
  5992  0C46                     l1785:
  5993  0C46  1FF3               	btfss	___aldiv@divisor+3,7
  5994  0C47  2C49               	goto	u1601
  5995  0C48  2C4A               	goto	u1600
  5996  0C49                     u1601:
  5997  0C49  2C57               	goto	l405
  5998  0C4A                     u1600:
  5999  0C4A                     l1787:
  6000  0C4A  09F0               	comf	___aldiv@divisor,f
  6001  0C4B  09F1               	comf	___aldiv@divisor+1,f
  6002  0C4C  09F2               	comf	___aldiv@divisor+2,f
  6003  0C4D  09F3               	comf	___aldiv@divisor+3,f
  6004  0C4E  0AF0               	incf	___aldiv@divisor,f
  6005  0C4F  1903               	skipnz
  6006  0C50  0AF1               	incf	___aldiv@divisor+1,f
  6007  0C51  1903               	skipnz
  6008  0C52  0AF2               	incf	___aldiv@divisor+2,f
  6009  0C53  1903               	skipnz
  6010  0C54  0AF3               	incf	___aldiv@divisor+3,f
  6011  0C55  01A1               	clrf	___aldiv@sign
  6012  0C56  0AA1               	incf	___aldiv@sign,f
  6013  0C57                     l405:
  6014  0C57  1FF7               	btfss	___aldiv@dividend+3,7
  6015  0C58  2C5A               	goto	u1611
  6016  0C59  2C5B               	goto	u1610
  6017  0C5A                     u1611:
  6018  0C5A  2C6A               	goto	l1793
  6019  0C5B                     u1610:
  6020  0C5B                     l1789:
  6021  0C5B  09F4               	comf	___aldiv@dividend,f
  6022  0C5C  09F5               	comf	___aldiv@dividend+1,f
  6023  0C5D  09F6               	comf	___aldiv@dividend+2,f
  6024  0C5E  09F7               	comf	___aldiv@dividend+3,f
  6025  0C5F  0AF4               	incf	___aldiv@dividend,f
  6026  0C60  1903               	skipnz
  6027  0C61  0AF5               	incf	___aldiv@dividend+1,f
  6028  0C62  1903               	skipnz
  6029  0C63  0AF6               	incf	___aldiv@dividend+2,f
  6030  0C64  1903               	skipnz
  6031  0C65  0AF7               	incf	___aldiv@dividend+3,f
  6032  0C66                     l1791:
  6033  0C66  3001               	movlw	1
  6034  0C67  00F8               	movwf	??___aldiv
  6035  0C68  0878               	movf	??___aldiv,w
  6036  0C69  06A1               	xorwf	___aldiv@sign,f
  6037  0C6A                     l1793:
  6038  0C6A  3000               	movlw	0
  6039  0C6B  00A5               	movwf	___aldiv@quotient+3
  6040  0C6C  3000               	movlw	0
  6041  0C6D  00A4               	movwf	___aldiv@quotient+2
  6042  0C6E  3000               	movlw	0
  6043  0C6F  00A3               	movwf	___aldiv@quotient+1
  6044  0C70  3000               	movlw	0
  6045  0C71  00A2               	movwf	___aldiv@quotient
  6046  0C72                     l1795:
  6047  0C72  0873               	movf	___aldiv@divisor+3,w
  6048  0C73  0472               	iorwf	___aldiv@divisor+2,w
  6049  0C74  0471               	iorwf	___aldiv@divisor+1,w
  6050  0C75  0470               	iorwf	___aldiv@divisor,w
  6051  0C76  1903               	skipnz
  6052  0C77  2C79               	goto	u1621
  6053  0C78  2C7A               	goto	u1620
  6054  0C79                     u1621:
  6055  0C79  2CC7               	goto	l1815
  6056  0C7A                     u1620:
  6057  0C7A                     l1797:
  6058  0C7A  01A0               	clrf	___aldiv@counter
  6059  0C7B  0AA0               	incf	___aldiv@counter,f
  6060  0C7C  2C8A               	goto	l1801
  6061  0C7D                     l1799:
  6062  0C7D  3001               	movlw	1
  6063  0C7E  00F8               	movwf	??___aldiv
  6064  0C7F                     u1635:
  6065  0C7F  1003               	clrc
  6066  0C80  0DF0               	rlf	___aldiv@divisor,f
  6067  0C81  0DF1               	rlf	___aldiv@divisor+1,f
  6068  0C82  0DF2               	rlf	___aldiv@divisor+2,f
  6069  0C83  0DF3               	rlf	___aldiv@divisor+3,f
  6070  0C84  0BF8               	decfsz	??___aldiv,f
  6071  0C85  2C7F               	goto	u1635
  6072  0C86  3001               	movlw	1
  6073  0C87  00F8               	movwf	??___aldiv
  6074  0C88  0878               	movf	??___aldiv,w
  6075  0C89  07A0               	addwf	___aldiv@counter,f
  6076  0C8A                     l1801:
  6077  0C8A  1FF3               	btfss	___aldiv@divisor+3,7
  6078  0C8B  2C8D               	goto	u1641
  6079  0C8C  2C8E               	goto	u1640
  6080  0C8D                     u1641:
  6081  0C8D  2C7D               	goto	l1799
  6082  0C8E                     u1640:
  6083  0C8E                     l1803:
  6084  0C8E  3001               	movlw	1
  6085  0C8F  00F8               	movwf	??___aldiv
  6086  0C90                     u1655:
  6087  0C90  1003               	clrc
  6088  0C91  0DA2               	rlf	___aldiv@quotient,f
  6089  0C92  0DA3               	rlf	___aldiv@quotient+1,f
  6090  0C93  0DA4               	rlf	___aldiv@quotient+2,f
  6091  0C94  0DA5               	rlf	___aldiv@quotient+3,f
  6092  0C95  0BF8               	decfsz	??___aldiv,f
  6093  0C96  2C90               	goto	u1655
  6094  0C97                     l1805:
  6095  0C97  0873               	movf	___aldiv@divisor+3,w
  6096  0C98  0277               	subwf	___aldiv@dividend+3,w
  6097  0C99  1D03               	skipz
  6098  0C9A  2CA5               	goto	u1665
  6099  0C9B  0872               	movf	___aldiv@divisor+2,w
  6100  0C9C  0276               	subwf	___aldiv@dividend+2,w
  6101  0C9D  1D03               	skipz
  6102  0C9E  2CA5               	goto	u1665
  6103  0C9F  0871               	movf	___aldiv@divisor+1,w
  6104  0CA0  0275               	subwf	___aldiv@dividend+1,w
  6105  0CA1  1D03               	skipz
  6106  0CA2  2CA5               	goto	u1665
  6107  0CA3  0870               	movf	___aldiv@divisor,w
  6108  0CA4  0274               	subwf	___aldiv@dividend,w
  6109  0CA5                     u1665:
  6110  0CA5  1C03               	skipc
  6111  0CA6  2CA8               	goto	u1661
  6112  0CA7  2CA9               	goto	u1660
  6113  0CA8                     u1661:
  6114  0CA8  2CB8               	goto	l1811
  6115  0CA9                     u1660:
  6116  0CA9                     l1807:
  6117  0CA9  0870               	movf	___aldiv@divisor,w
  6118  0CAA  02F4               	subwf	___aldiv@dividend,f
  6119  0CAB  0871               	movf	___aldiv@divisor+1,w
  6120  0CAC  1C03               	skipc
  6121  0CAD  0F71               	incfsz	___aldiv@divisor+1,w
  6122  0CAE  02F5               	subwf	___aldiv@dividend+1,f
  6123  0CAF  0872               	movf	___aldiv@divisor+2,w
  6124  0CB0  1C03               	skipc
  6125  0CB1  0F72               	incfsz	___aldiv@divisor+2,w
  6126  0CB2  02F6               	subwf	___aldiv@dividend+2,f
  6127  0CB3  0873               	movf	___aldiv@divisor+3,w
  6128  0CB4  1C03               	skipc
  6129  0CB5  0F73               	incfsz	___aldiv@divisor+3,w
  6130  0CB6  02F7               	subwf	___aldiv@dividend+3,f
  6131  0CB7                     l1809:
  6132  0CB7  1422               	bsf	___aldiv@quotient,0
  6133  0CB8                     l1811:
  6134  0CB8  3001               	movlw	1
  6135  0CB9                     u1675:
  6136  0CB9  1003               	clrc
  6137  0CBA  0CF3               	rrf	___aldiv@divisor+3,f
  6138  0CBB  0CF2               	rrf	___aldiv@divisor+2,f
  6139  0CBC  0CF1               	rrf	___aldiv@divisor+1,f
  6140  0CBD  0CF0               	rrf	___aldiv@divisor,f
  6141  0CBE  3EFF               	addlw	-1
  6142  0CBF  1D03               	skipz
  6143  0CC0  2CB9               	goto	u1675
  6144  0CC1                     l1813:
  6145  0CC1  3001               	movlw	1
  6146  0CC2  02A0               	subwf	___aldiv@counter,f
  6147  0CC3  1D03               	btfss	3,2
  6148  0CC4  2CC6               	goto	u1681
  6149  0CC5  2CC7               	goto	u1680
  6150  0CC6                     u1681:
  6151  0CC6  2C8E               	goto	l1803
  6152  0CC7                     u1680:
  6153  0CC7                     l1815:
  6154  0CC7  0821               	movf	___aldiv@sign,w
  6155  0CC8  1903               	btfsc	3,2
  6156  0CC9  2CCB               	goto	u1691
  6157  0CCA  2CCC               	goto	u1690
  6158  0CCB                     u1691:
  6159  0CCB  2CD7               	goto	l1819
  6160  0CCC                     u1690:
  6161  0CCC                     l1817:
  6162  0CCC  09A2               	comf	___aldiv@quotient,f
  6163  0CCD  09A3               	comf	___aldiv@quotient+1,f
  6164  0CCE  09A4               	comf	___aldiv@quotient+2,f
  6165  0CCF  09A5               	comf	___aldiv@quotient+3,f
  6166  0CD0  0AA2               	incf	___aldiv@quotient,f
  6167  0CD1  1903               	skipnz
  6168  0CD2  0AA3               	incf	___aldiv@quotient+1,f
  6169  0CD3  1903               	skipnz
  6170  0CD4  0AA4               	incf	___aldiv@quotient+2,f
  6171  0CD5  1903               	skipnz
  6172  0CD6  0AA5               	incf	___aldiv@quotient+3,f
  6173  0CD7                     l1819:
  6174  0CD7  0825               	movf	___aldiv@quotient+3,w
  6175  0CD8  00F3               	movwf	?___aldiv+3
  6176  0CD9  0824               	movf	___aldiv@quotient+2,w
  6177  0CDA  00F2               	movwf	?___aldiv+2
  6178  0CDB  0823               	movf	___aldiv@quotient+1,w
  6179  0CDC  00F1               	movwf	?___aldiv+1
  6180  0CDD  0822               	movf	___aldiv@quotient,w
  6181  0CDE  00F0               	movwf	?___aldiv
  6182  0CDF                     l415:
  6183  0CDF  0008               	return
  6184  0CE0                     __end_of___aldiv:
  6185                           
  6186                           	psect	text19
  6187  097D                     __ptext19:	
  6188 ;; *************** function _LCD_String_xy *****************
  6189 ;; Defined at:
  6190 ;;		line 116 in file "LCD.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;  row             1    wreg     unsigned char 
  6193 ;;  pos             1    5[COMMON] unsigned char 
  6194 ;;  msg             1    6[COMMON] PTR const unsigned char 
  6195 ;;		 -> STR_17(8), STR_15(7), STR_12(8), STR_9(7), 
  6196 ;;		 -> STR_4(3), STR_2(8), 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  row             1    8[COMMON] unsigned char 
  6199 ;;  location        1    9[COMMON] unsigned char 
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  1    wreg      void 
  6202 ;; Registers used:
  6203 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6209 ;;      Params:         2       0       0       0       0
  6210 ;;      Locals:         2       0       0       0       0
  6211 ;;      Temps:          1       0       0       0       0
  6212 ;;      Totals:         5       0       0       0       0
  6213 ;;Total ram usage:        5 bytes
  6214 ;; Hardware stack levels used: 1
  6215 ;; Hardware stack levels required when called: 2
  6216 ;; This function calls:
  6217 ;;		_LCD_Command
  6218 ;;		_LCD_String
  6219 ;; This function is called by:
  6220 ;;		_main
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224  097D                     _LCD_String_xy:	
  6225                           ;psect for function _LCD_String_xy
  6226                           
  6227                           
  6228                           ;incstack = 0
  6229                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6230                           ;LCD_String_xy@row stored from wreg
  6231  097D  00F8               	movwf	LCD_String_xy@row
  6232  097E                     l2333:
  6233  097E                     l2335:
  6234                           
  6235                           ;LCD.c: 119:     if(row<=1)
  6236  097E  3002               	movlw	2
  6237  097F  0278               	subwf	LCD_String_xy@row,w
  6238  0980  1803               	skipnc
  6239  0981  2983               	goto	u2861
  6240  0982  2984               	goto	u2860
  6241  0983                     u2861:
  6242  0983  2991               	goto	l2341
  6243  0984                     u2860:
  6244  0984                     l2337:
  6245                           
  6246                           ;LCD.c: 120:     {;LCD.c: 121:         location=(0x80) | ((pos) & 0x0f);
  6247  0984  0875               	movf	LCD_String_xy@pos,w
  6248  0985  390F               	andlw	15
  6249  0986  3880               	iorlw	128
  6250  0987  00F7               	movwf	??_LCD_String_xy
  6251  0988  0877               	movf	??_LCD_String_xy,w
  6252  0989  00F9               	movwf	LCD_String_xy@location
  6253  098A                     l2339:
  6254                           
  6255                           ;LCD.c: 122:         LCD_Command(location);
  6256  098A  0879               	movf	LCD_String_xy@location,w
  6257  098B  120A  158A  21D6  120A  158A  	fcall	_LCD_Command
  6258                           
  6259                           ;LCD.c: 123:     }
  6260  0990  299D               	goto	l2345
  6261  0991                     l2341:
  6262                           
  6263                           ;LCD.c: 125:     {;LCD.c: 126:         location=(0xC0) | ((pos) & 0x0f);
  6264  0991  0875               	movf	LCD_String_xy@pos,w
  6265  0992  390F               	andlw	15
  6266  0993  38C0               	iorlw	192
  6267  0994  00F7               	movwf	??_LCD_String_xy
  6268  0995  0877               	movf	??_LCD_String_xy,w
  6269  0996  00F9               	movwf	LCD_String_xy@location
  6270  0997                     l2343:
  6271                           
  6272                           ;LCD.c: 127:         LCD_Command(location);
  6273  0997  0879               	movf	LCD_String_xy@location,w
  6274  0998  120A  158A  21D6  120A  158A  	fcall	_LCD_Command
  6275  099D                     l2345:
  6276                           
  6277                           ;LCD.c: 131:     LCD_String(msg);
  6278  099D  0876               	movf	LCD_String_xy@msg,w
  6279  099E  00F3               	movwf	LCD_String@msg
  6280  099F  3000               	movlw	0
  6281  09A0  1D03               	btfss	3,2
  6282  09A1  3080               	movlw	128
  6283  09A2  00F4               	movwf	LCD_String@msg+1
  6284  09A3  120A  158A  20E0  120A  158A  	fcall	_LCD_String
  6285  09A8                     l177:
  6286  09A8  0008               	return
  6287  09A9                     __end_of_LCD_String_xy:
  6288                           
  6289                           	psect	text20
  6290  08E0                     __ptext20:	
  6291 ;; *************** function _LCD_String *****************
  6292 ;; Defined at:
  6293 ;;		line 106 in file "LCD.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;  msg             2    3[COMMON] PTR const unsigned char 
  6296 ;;		 -> STR_17(8), STR_15(7), STR_12(8), STR_9(7), 
  6297 ;;		 -> STR_4(3), luz(4), STR_2(8), 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;		None
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  1    wreg      void 
  6302 ;; Registers used:
  6303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6309 ;;      Params:         2       0       0       0       0
  6310 ;;      Locals:         0       0       0       0       0
  6311 ;;      Temps:          0       0       0       0       0
  6312 ;;      Totals:         2       0       0       0       0
  6313 ;;Total ram usage:        2 bytes
  6314 ;; Hardware stack levels used: 1
  6315 ;; Hardware stack levels required when called: 1
  6316 ;; This function calls:
  6317 ;;		_LCD_Char
  6318 ;; This function is called by:
  6319 ;;		_main
  6320 ;;		_LCD_String_xy
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324  08E0                     _LCD_String:	
  6325                           ;psect for function _LCD_String
  6326                           
  6327  08E0                     l1751:	
  6328                           ;incstack = 0
  6329                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6330                           
  6331                           
  6332                           ;LCD.c: 106:     void LCD_String(const char *msg);LCD.c: 107:     {;LCD.c: 108:         
      +                          while((*msg)!=0)
  6333  08E0  28F5               	goto	l1757
  6334  08E1                     l1753:
  6335                           
  6336                           ;LCD.c: 109:         {;LCD.c: 110:           LCD_Char(*msg);
  6337  08E1  0874               	movf	LCD_String@msg+1,w
  6338  08E2  00FF               	movwf	btemp+1
  6339  08E3  0873               	movf	LCD_String@msg,w
  6340  08E4  0084               	movwf	4
  6341  08E5  120A  158A  2000  120A  158A  	fcall	stringtab
  6342  08EA  120A  158A  220C  120A  158A  	fcall	_LCD_Char
  6343  08EF                     l1755:
  6344                           
  6345                           ;LCD.c: 111:           msg++;
  6346  08EF  3001               	movlw	1
  6347  08F0  07F3               	addwf	LCD_String@msg,f
  6348  08F1  1803               	skipnc
  6349  08F2  0AF4               	incf	LCD_String@msg+1,f
  6350  08F3  3000               	movlw	0
  6351  08F4  07F4               	addwf	LCD_String@msg+1,f
  6352  08F5                     l1757:
  6353                           
  6354                           ;LCD.c: 108:         while((*msg)!=0)
  6355  08F5  0874               	movf	LCD_String@msg+1,w
  6356  08F6  1283               	bcf	3,5	;RP0=0, select bank0
  6357  08F7  1303               	bcf	3,6	;RP1=0, select bank0
  6358  08F8  00FF               	movwf	btemp+1
  6359  08F9  0873               	movf	LCD_String@msg,w
  6360  08FA  0084               	movwf	4
  6361  08FB  120A  158A  2000  120A  158A  	fcall	stringtab
  6362  0900  3A00               	xorlw	0
  6363  0901  1D03               	skipz
  6364  0902  2904               	goto	u1571
  6365  0903  2905               	goto	u1570
  6366  0904                     u1571:
  6367  0904  28E1               	goto	l1753
  6368  0905                     u1570:
  6369  0905                     l172:
  6370  0905  0008               	return
  6371  0906                     __end_of_LCD_String:
  6372                           
  6373                           	psect	text21
  6374  0A0C                     __ptext21:	
  6375 ;; *************** function _LCD_Char *****************
  6376 ;; Defined at:
  6377 ;;		line 91 in file "LCD.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  dat             1    wreg     unsigned char 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  dat             1    2[COMMON] unsigned char 
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  1    wreg      void 
  6384 ;; Registers used:
  6385 ;;		wreg, status,2, status,0
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6391 ;;      Params:         0       0       0       0       0
  6392 ;;      Locals:         1       0       0       0       0
  6393 ;;      Temps:          2       0       0       0       0
  6394 ;;      Totals:         3       0       0       0       0
  6395 ;;Total ram usage:        3 bytes
  6396 ;; Hardware stack levels used: 1
  6397 ;; This function calls:
  6398 ;;		Nothing
  6399 ;; This function is called by:
  6400 ;;		_LCD_String
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404  0A0C                     _LCD_Char:	
  6405                           ;psect for function _LCD_Char
  6406                           
  6407                           
  6408                           ;incstack = 0
  6409                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  6410                           ;LCD_Char@dat stored from wreg
  6411  0A0C  00F2               	movwf	LCD_Char@dat
  6412  0A0D                     l1717:
  6413                           
  6414                           ;LCD.c: 91: void LCD_Char(unsigned char dat);LCD.c: 92: {;LCD.c: 93:  PORTD = (PORTD & 0
      +                          x0f) | (0xF0 & dat);
  6415  0A0D  30F0               	movlw	240
  6416  0A0E  0572               	andwf	LCD_Char@dat,w
  6417  0A0F  00F0               	movwf	??_LCD_Char
  6418  0A10  1283               	bcf	3,5	;RP0=0, select bank0
  6419  0A11  1303               	bcf	3,6	;RP1=0, select bank0
  6420  0A12  0808               	movf	8,w	;volatile
  6421  0A13  390F               	andlw	15
  6422  0A14  0470               	iorwf	??_LCD_Char,w
  6423  0A15  0088               	movwf	8	;volatile
  6424  0A16                     l1719:
  6425                           
  6426                           ;LCD.c: 94:  PORTDbits.RD2 = 1;
  6427  0A16  1508               	bsf	8,2	;volatile
  6428  0A17                     l1721:
  6429                           
  6430                           ;LCD.c: 95:  PORTDbits.RD3 = 1;
  6431  0A17  1588               	bsf	8,3	;volatile
  6432  0A18                     l1723:
  6433                           
  6434                           ;LCD.c: 96:  __nop();
  6435  0A18  0000               	nop
  6436  0A19                     l1725:
  6437                           
  6438                           ;LCD.c: 97:  PORTDbits.RD3 = 0;
  6439  0A19  1283               	bcf	3,5	;RP0=0, select bank0
  6440  0A1A  1303               	bcf	3,6	;RP1=0, select bank0
  6441  0A1B  1188               	bcf	8,3	;volatile
  6442  0A1C                     l1727:
  6443                           
  6444                           ;LCD.c: 98:  _delay((unsigned long)((1)*(8000000/4000.0)));
  6445  0A1C  3003               	movlw	3
  6446  0A1D  00F1               	movwf	??_LCD_Char+1
  6447  0A1E  3097               	movlw	151
  6448  0A1F  00F0               	movwf	??_LCD_Char
  6449  0A20                     u3127:
  6450  0A20  0BF0               	decfsz	??_LCD_Char,f
  6451  0A21  2A20               	goto	u3127
  6452  0A22  0BF1               	decfsz	??_LCD_Char+1,f
  6453  0A23  2A20               	goto	u3127
  6454  0A24  2A25               	nop2
  6455  0A25                     l1729:
  6456                           
  6457                           ;LCD.c: 99:     PORTD = (unsigned char)((PORTD & 0x0f) | (dat<<4));
  6458  0A25  0872               	movf	LCD_Char@dat,w
  6459  0A26  00F0               	movwf	??_LCD_Char
  6460  0A27  3004               	movlw	4
  6461  0A28                     u1535:
  6462  0A28  1003               	clrc
  6463  0A29  0DF0               	rlf	??_LCD_Char,f
  6464  0A2A  3EFF               	addlw	-1
  6465  0A2B  1D03               	skipz
  6466  0A2C  2A28               	goto	u1535
  6467  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  6468  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  6469  0A2F  0808               	movf	8,w	;volatile
  6470  0A30  390F               	andlw	15
  6471  0A31  0470               	iorwf	??_LCD_Char,w
  6472  0A32  0088               	movwf	8	;volatile
  6473  0A33                     l1731:
  6474                           
  6475                           ;LCD.c: 100:  PORTDbits.RD3 = 1;
  6476  0A33  1588               	bsf	8,3	;volatile
  6477  0A34                     l1733:
  6478                           
  6479                           ;LCD.c: 101:  __nop();
  6480  0A34  0000               	nop
  6481  0A35                     l1735:
  6482                           
  6483                           ;LCD.c: 102:  PORTDbits.RD3 = 0;
  6484  0A35  1283               	bcf	3,5	;RP0=0, select bank0
  6485  0A36  1303               	bcf	3,6	;RP1=0, select bank0
  6486  0A37  1188               	bcf	8,3	;volatile
  6487                           
  6488                           ;LCD.c: 103:  _delay((unsigned long)((3)*(8000000/4000.0)));
  6489  0A38  3008               	movlw	8
  6490  0A39  00F1               	movwf	??_LCD_Char+1
  6491  0A3A  30C9               	movlw	201
  6492  0A3B  00F0               	movwf	??_LCD_Char
  6493  0A3C                     u3137:
  6494  0A3C  0BF0               	decfsz	??_LCD_Char,f
  6495  0A3D  2A3C               	goto	u3137
  6496  0A3E  0BF1               	decfsz	??_LCD_Char+1,f
  6497  0A3F  2A3C               	goto	u3137
  6498  0A40  2A41               	nop2
  6499  0A41                     l166:
  6500  0A41  0008               	return
  6501  0A42                     __end_of_LCD_Char:
  6502                           
  6503                           	psect	text22
  6504  0953                     __ptext22:	
  6505 ;; *************** function _LCD_Init *****************
  6506 ;; Defined at:
  6507 ;;		line 38 in file "LCD.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;		None
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;		None
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  1    wreg      void 
  6514 ;; Registers used:
  6515 ;;		wreg, status,2, status,0, pclath, cstack
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6521 ;;      Params:         0       0       0       0       0
  6522 ;;      Locals:         0       0       0       0       0
  6523 ;;      Temps:          2       0       0       0       0
  6524 ;;      Totals:         2       0       0       0       0
  6525 ;;Total ram usage:        2 bytes
  6526 ;; Hardware stack levels used: 1
  6527 ;; Hardware stack levels required when called: 1
  6528 ;; This function calls:
  6529 ;;		_LCD_Command
  6530 ;; This function is called by:
  6531 ;;		_main
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535  0953                     _LCD_Init:	
  6536                           ;psect for function _LCD_Init
  6537                           
  6538  0953                     l2301:	
  6539                           ;incstack = 0
  6540                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  6541                           
  6542                           
  6543                           ;LCD.c: 40:     TRISD = 0;
  6544  0953  1683               	bsf	3,5	;RP0=1, select bank1
  6545  0954  1303               	bcf	3,6	;RP1=0, select bank1
  6546  0955  0188               	clrf	8	;volatile
  6547  0956                     l2303:
  6548                           
  6549                           ;LCD.c: 41:     _delay((unsigned long)((15)*(8000000/4000.0)));
  6550  0956  3027               	movlw	39
  6551  0957  00F4               	movwf	??_LCD_Init+1
  6552  0958  30F5               	movlw	245
  6553  0959  00F3               	movwf	??_LCD_Init
  6554  095A                     u3147:
  6555  095A  0BF3               	decfsz	??_LCD_Init,f
  6556  095B  295A               	goto	u3147
  6557  095C  0BF4               	decfsz	??_LCD_Init+1,f
  6558  095D  295A               	goto	u3147
  6559  095E                     l2305:
  6560                           
  6561                           ;LCD.c: 42:     LCD_Command(0x02);
  6562  095E  3002               	movlw	2
  6563  095F  120A  158A  21D6  120A  158A  	fcall	_LCD_Command
  6564  0964                     l2307:
  6565                           
  6566                           ;LCD.c: 43:     LCD_Command(0x28);
  6567  0964  3028               	movlw	40
  6568  0965  120A  158A  21D6  120A  158A  	fcall	_LCD_Command
  6569  096A                     l2309:
  6570                           
  6571                           ;LCD.c: 44:     LCD_Command(0x01);
  6572  096A  3001               	movlw	1
  6573  096B  120A  158A  21D6  120A  158A  	fcall	_LCD_Command
  6574  0970                     l2311:
  6575                           
  6576                           ;LCD.c: 45:     LCD_Command(0x0c);
  6577  0970  300C               	movlw	12
  6578  0971  120A  158A  21D6  120A  158A  	fcall	_LCD_Command
  6579  0976                     l2313:
  6580                           
  6581                           ;LCD.c: 46:     LCD_Command(0x06);
  6582  0976  3006               	movlw	6
  6583  0977  120A  158A  21D6  120A  158A  	fcall	_LCD_Command
  6584  097C                     l160:
  6585  097C  0008               	return
  6586  097D                     __end_of_LCD_Init:
  6587                           
  6588                           	psect	text23
  6589  089D                     __ptext23:	
  6590 ;; *************** function _LCD_Clear *****************
  6591 ;; Defined at:
  6592 ;;		line 147 in file "LCD.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;		None
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;		None
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  1    wreg      void 
  6599 ;; Registers used:
  6600 ;;		wreg, status,2, status,0, pclath, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6606 ;;      Params:         0       0       0       0       0
  6607 ;;      Locals:         0       0       0       0       0
  6608 ;;      Temps:          2       0       0       0       0
  6609 ;;      Totals:         2       0       0       0       0
  6610 ;;Total ram usage:        2 bytes
  6611 ;; Hardware stack levels used: 1
  6612 ;; Hardware stack levels required when called: 1
  6613 ;; This function calls:
  6614 ;;		_LCD_Command
  6615 ;; This function is called by:
  6616 ;;		_main
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620  089D                     _LCD_Clear:	
  6621                           ;psect for function _LCD_Clear
  6622                           
  6623  089D                     l2347:	
  6624                           ;incstack = 0
  6625                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  6626                           
  6627                           
  6628                           ;LCD.c: 149:     LCD_Command(0x01);
  6629  089D  3001               	movlw	1
  6630  089E  120A  158A  21D6  120A  158A  	fcall	_LCD_Command
  6631  08A3                     l2349:
  6632                           
  6633                           ;LCD.c: 150:     _delay((unsigned long)((3)*(8000000/4000.0)));
  6634  08A3  3008               	movlw	8
  6635  08A4  00F4               	movwf	??_LCD_Clear+1
  6636  08A5  30C9               	movlw	201
  6637  08A6  00F3               	movwf	??_LCD_Clear
  6638  08A7                     u3157:
  6639  08A7  0BF3               	decfsz	??_LCD_Clear,f
  6640  08A8  28A7               	goto	u3157
  6641  08A9  0BF4               	decfsz	??_LCD_Clear+1,f
  6642  08AA  28A7               	goto	u3157
  6643  08AB  28AC               	nop2
  6644  08AC                     l180:
  6645  08AC  0008               	return
  6646  08AD                     __end_of_LCD_Clear:
  6647                           
  6648                           	psect	text24
  6649  09D6                     __ptext24:	
  6650 ;; *************** function _LCD_Command *****************
  6651 ;; Defined at:
  6652 ;;		line 62 in file "LCD.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  cmd             1    wreg     unsigned char 
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;  cmd             1    2[COMMON] unsigned char 
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  1    wreg      void 
  6659 ;; Registers used:
  6660 ;;		wreg, status,2, status,0
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6666 ;;      Params:         0       0       0       0       0
  6667 ;;      Locals:         1       0       0       0       0
  6668 ;;      Temps:          2       0       0       0       0
  6669 ;;      Totals:         3       0       0       0       0
  6670 ;;Total ram usage:        3 bytes
  6671 ;; Hardware stack levels used: 1
  6672 ;; This function calls:
  6673 ;;		Nothing
  6674 ;; This function is called by:
  6675 ;;		_LCD_Init
  6676 ;;		_LCD_String_xy
  6677 ;;		_LCD_Clear
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681  09D6                     _LCD_Command:	
  6682                           ;psect for function _LCD_Command
  6683                           
  6684                           
  6685                           ;incstack = 0
  6686                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  6687                           ;LCD_Command@cmd stored from wreg
  6688  09D6  00F2               	movwf	LCD_Command@cmd
  6689  09D7                     l1759:
  6690                           
  6691                           ;LCD.c: 62: void LCD_Command(unsigned char cmd );LCD.c: 63: {;LCD.c: 64:  PORTD = (PORTD
      +                           & 0x0f) |(0xF0 & cmd);
  6692  09D7  30F0               	movlw	240
  6693  09D8  0572               	andwf	LCD_Command@cmd,w
  6694  09D9  00F0               	movwf	??_LCD_Command
  6695  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  6696  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  6697  09DC  0808               	movf	8,w	;volatile
  6698  09DD  390F               	andlw	15
  6699  09DE  0470               	iorwf	??_LCD_Command,w
  6700  09DF  0088               	movwf	8	;volatile
  6701  09E0                     l1761:
  6702                           
  6703                           ;LCD.c: 65:  PORTDbits.RD2 = 0;
  6704  09E0  1108               	bcf	8,2	;volatile
  6705  09E1                     l1763:
  6706                           
  6707                           ;LCD.c: 66:  PORTDbits.RD3 = 1;
  6708  09E1  1588               	bsf	8,3	;volatile
  6709  09E2                     l1765:
  6710                           
  6711                           ;LCD.c: 67:  __nop();
  6712  09E2  0000               	nop
  6713  09E3                     l1767:
  6714                           
  6715                           ;LCD.c: 68:  PORTDbits.RD3 = 0;
  6716  09E3  1283               	bcf	3,5	;RP0=0, select bank0
  6717  09E4  1303               	bcf	3,6	;RP1=0, select bank0
  6718  09E5  1188               	bcf	8,3	;volatile
  6719  09E6                     l1769:
  6720                           
  6721                           ;LCD.c: 69:  _delay((unsigned long)((1)*(8000000/4000.0)));
  6722  09E6  3003               	movlw	3
  6723  09E7  00F1               	movwf	??_LCD_Command+1
  6724  09E8  3097               	movlw	151
  6725  09E9  00F0               	movwf	??_LCD_Command
  6726  09EA                     u3167:
  6727  09EA  0BF0               	decfsz	??_LCD_Command,f
  6728  09EB  29EA               	goto	u3167
  6729  09EC  0BF1               	decfsz	??_LCD_Command+1,f
  6730  09ED  29EA               	goto	u3167
  6731  09EE  29EF               	nop2
  6732  09EF                     l1771:
  6733                           
  6734                           ;LCD.c: 70:     PORTD = (unsigned char)((PORTD & 0x0f) | (cmd<<4));
  6735  09EF  0872               	movf	LCD_Command@cmd,w
  6736  09F0  00F0               	movwf	??_LCD_Command
  6737  09F1  3004               	movlw	4
  6738  09F2                     u1585:
  6739  09F2  1003               	clrc
  6740  09F3  0DF0               	rlf	??_LCD_Command,f
  6741  09F4  3EFF               	addlw	-1
  6742  09F5  1D03               	skipz
  6743  09F6  29F2               	goto	u1585
  6744  09F7  1283               	bcf	3,5	;RP0=0, select bank0
  6745  09F8  1303               	bcf	3,6	;RP1=0, select bank0
  6746  09F9  0808               	movf	8,w	;volatile
  6747  09FA  390F               	andlw	15
  6748  09FB  0470               	iorwf	??_LCD_Command,w
  6749  09FC  0088               	movwf	8	;volatile
  6750  09FD                     l1773:
  6751                           
  6752                           ;LCD.c: 71:  PORTDbits.RD3 = 1;
  6753  09FD  1588               	bsf	8,3	;volatile
  6754  09FE                     l1775:
  6755                           
  6756                           ;LCD.c: 72:  __nop();
  6757  09FE  0000               	nop
  6758  09FF                     l1777:
  6759                           
  6760                           ;LCD.c: 73:  PORTDbits.RD3 = 0;
  6761  09FF  1283               	bcf	3,5	;RP0=0, select bank0
  6762  0A00  1303               	bcf	3,6	;RP1=0, select bank0
  6763  0A01  1188               	bcf	8,3	;volatile
  6764                           
  6765                           ;LCD.c: 74:  _delay((unsigned long)((3)*(8000000/4000.0)));
  6766  0A02  3008               	movlw	8
  6767  0A03  00F1               	movwf	??_LCD_Command+1
  6768  0A04  30C9               	movlw	201
  6769  0A05  00F0               	movwf	??_LCD_Command
  6770  0A06                     u3177:
  6771  0A06  0BF0               	decfsz	??_LCD_Command,f
  6772  0A07  2A06               	goto	u3177
  6773  0A08  0BF1               	decfsz	??_LCD_Command+1,f
  6774  0A09  2A06               	goto	u3177
  6775  0A0A  2A0B               	nop2
  6776  0A0B                     l163:
  6777  0A0B  0008               	return
  6778  0A0C                     __end_of_LCD_Command:
  6779                           
  6780                           	psect	text25
  6781  0A7C                     __ptext25:	
  6782 ;; *************** function _ADC_Read *****************
  6783 ;; Defined at:
  6784 ;;		line 21 in file "adc.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;  channel         2    0[COMMON] int 
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;  digital         2    5[COMMON] int 
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  2    0[COMMON] int 
  6791 ;; Registers used:
  6792 ;;		wreg, status,2, status,0
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6798 ;;      Params:         2       0       0       0       0
  6799 ;;      Locals:         2       0       0       0       0
  6800 ;;      Temps:          3       0       0       0       0
  6801 ;;      Totals:         7       0       0       0       0
  6802 ;;Total ram usage:        7 bytes
  6803 ;; Hardware stack levels used: 1
  6804 ;; This function calls:
  6805 ;;		Nothing
  6806 ;; This function is called by:
  6807 ;;		_main
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811  0A7C                     _ADC_Read:	
  6812                           ;psect for function _ADC_Read
  6813                           
  6814  0A7C                     l2351:	
  6815                           ;incstack = 0
  6816                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  6817                           
  6818                           
  6819                           ;adc.c: 21: int ADC_Read(int channel);adc.c: 22: {;adc.c: 23:     int digital;;adc.c: 26
      +                          :     ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b00111100);
  6820  0A7C  0870               	movf	ADC_Read@channel,w
  6821  0A7D  00F2               	movwf	??_ADC_Read
  6822  0A7E  3002               	movlw	2
  6823  0A7F                     u2875:
  6824  0A7F  1003               	clrc
  6825  0A80  0DF2               	rlf	??_ADC_Read,f
  6826  0A81  3EFF               	addlw	-1
  6827  0A82  1D03               	skipz
  6828  0A83  2A7F               	goto	u2875
  6829  0A84  303C               	movlw	60
  6830  0A85  0572               	andwf	??_ADC_Read,w
  6831  0A86  00F3               	movwf	??_ADC_Read+1
  6832  0A87  1283               	bcf	3,5	;RP0=0, select bank0
  6833  0A88  1303               	bcf	3,6	;RP1=0, select bank0
  6834  0A89  081F               	movf	31,w	;volatile
  6835  0A8A  39C3               	andlw	195
  6836  0A8B  0473               	iorwf	??_ADC_Read+1,w
  6837  0A8C  009F               	movwf	31	;volatile
  6838                           
  6839                           ;adc.c: 28:     ADCON0 |= ((1<<ADON)|(1<<GO));
  6840  0A8D  3001               	movlw	1
  6841  0A8E  00F2               	movwf	??_ADC_Read
  6842  0A8F  3000               	movlw	0
  6843  0A90  189F               	btfsc	31,1	;volatile
  6844  0A91  3001               	movlw	1
  6845  0A92  3E01               	addlw	1
  6846  0A93  2A96               	goto	u2884
  6847  0A94                     u2885:
  6848  0A94  1003               	clrc
  6849  0A95  0DF2               	rlf	??_ADC_Read,f
  6850  0A96                     u2884:
  6851  0A96  3EFF               	addlw	-1
  6852  0A97  1D03               	skipz
  6853  0A98  2A94               	goto	u2885
  6854  0A99  3001               	movlw	1
  6855  0A9A  00F3               	movwf	??_ADC_Read+1
  6856  0A9B  3000               	movlw	0
  6857  0A9C  181F               	btfsc	31,0	;volatile
  6858  0A9D  3001               	movlw	1
  6859  0A9E  3E01               	addlw	1
  6860  0A9F  2AA2               	goto	u2894
  6861  0AA0                     u2895:
  6862  0AA0  1003               	clrc
  6863  0AA1  0DF3               	rlf	??_ADC_Read+1,f
  6864  0AA2                     u2894:
  6865  0AA2  3EFF               	addlw	-1
  6866  0AA3  1D03               	skipz
  6867  0AA4  2AA0               	goto	u2895
  6868  0AA5  0873               	movf	??_ADC_Read+1,w
  6869  0AA6  0472               	iorwf	??_ADC_Read,w
  6870  0AA7  00F4               	movwf	??_ADC_Read+2
  6871  0AA8  0874               	movf	??_ADC_Read+2,w
  6872  0AA9  049F               	iorwf	31,f	;volatile
  6873  0AAA                     l142:	
  6874                           ;adc.c: 31:     while(ADCON0bits.GO_nDONE==1);
  6875                           
  6876  0AAA  189F               	btfsc	31,1	;volatile
  6877  0AAB  2AAD               	goto	u2901
  6878  0AAC  2AAE               	goto	u2900
  6879  0AAD                     u2901:
  6880  0AAD  2AAA               	goto	l142
  6881  0AAE                     u2900:
  6882  0AAE                     l2353:
  6883                           
  6884                           ;adc.c: 33:     digital = (ADRESH << 8) + ADRESL;
  6885  0AAE  081E               	movf	30,w	;volatile
  6886  0AAF  00F6               	movwf	ADC_Read@digital+1
  6887  0AB0  1683               	bsf	3,5	;RP0=1, select bank1
  6888  0AB1  1303               	bcf	3,6	;RP1=0, select bank1
  6889  0AB2  081E               	movf	30,w	;volatile
  6890  0AB3  00F5               	movwf	ADC_Read@digital
  6891                           
  6892                           ;adc.c: 34:     return(digital);
  6893  0AB4  0876               	movf	ADC_Read@digital+1,w
  6894  0AB5  00F1               	movwf	?_ADC_Read+1
  6895  0AB6  0875               	movf	ADC_Read@digital,w
  6896  0AB7  00F0               	movwf	?_ADC_Read
  6897  0AB8                     l145:
  6898  0AB8  0008               	return
  6899  0AB9                     __end_of_ADC_Read:
  6900                           
  6901                           	psect	text26
  6902  08AD                     __ptext26:	
  6903 ;; *************** function _ADC_Init *****************
  6904 ;; Defined at:
  6905 ;;		line 5 in file "adc.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;		None
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;		None
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  1    wreg      void 
  6912 ;; Registers used:
  6913 ;;		wreg, status,2
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6919 ;;      Params:         0       0       0       0       0
  6920 ;;      Locals:         0       0       0       0       0
  6921 ;;      Temps:          0       0       0       0       0
  6922 ;;      Totals:         0       0       0       0       0
  6923 ;;Total ram usage:        0 bytes
  6924 ;; Hardware stack levels used: 1
  6925 ;; This function calls:
  6926 ;;		Nothing
  6927 ;; This function is called by:
  6928 ;;		_main
  6929 ;; This function uses a non-reentrant model
  6930 ;;
  6931                           
  6932  08AD                     _ADC_Init:	
  6933                           ;psect for function _ADC_Init
  6934                           
  6935  08AD                     l2315:	
  6936                           ;incstack = 0
  6937                           ; Regs used in _ADC_Init: [wreg+status,2]
  6938                           
  6939                           
  6940                           ;adc.c: 7:     TRISA0 = 1;
  6941  08AD  1683               	bsf	3,5	;RP0=1, select bank1
  6942  08AE  1303               	bcf	3,6	;RP1=0, select bank1
  6943  08AF  1405               	bsf	5,0	;volatile
  6944  08B0                     l2317:
  6945                           
  6946                           ;adc.c: 8:     ANSEL = 0x07;
  6947  08B0  3007               	movlw	7
  6948  08B1  1683               	bsf	3,5	;RP0=1, select bank3
  6949  08B2  1703               	bsf	3,6	;RP1=1, select bank3
  6950  08B3  0088               	movwf	8	;volatile
  6951  08B4                     l2319:
  6952                           
  6953                           ;adc.c: 9:     TRISA1= 1;
  6954  08B4  1683               	bsf	3,5	;RP0=1, select bank1
  6955  08B5  1303               	bcf	3,6	;RP1=0, select bank1
  6956  08B6  1485               	bsf	5,1	;volatile
  6957  08B7                     l2321:
  6958                           
  6959                           ;adc.c: 10:     TRISA2= 1;
  6960  08B7  1505               	bsf	5,2	;volatile
  6961  08B8                     l2323:
  6962                           
  6963                           ;adc.c: 14:     ADCON1bits.ADFM = 1;
  6964  08B8  179F               	bsf	31,7	;volatile
  6965  08B9                     l2325:
  6966                           
  6967                           ;adc.c: 15:     ADCON1bits.VCFG0 = 0;
  6968  08B9  121F               	bcf	31,4	;volatile
  6969  08BA                     l2327:
  6970                           
  6971                           ;adc.c: 16:     ADCON1bits.VCFG1 = 0;
  6972  08BA  129F               	bcf	31,5	;volatile
  6973  08BB                     l2329:
  6974                           
  6975                           ;adc.c: 17:     ADRESH=0;
  6976  08BB  1283               	bcf	3,5	;RP0=0, select bank0
  6977  08BC  1303               	bcf	3,6	;RP1=0, select bank0
  6978  08BD  019E               	clrf	30	;volatile
  6979  08BE                     l2331:
  6980                           
  6981                           ;adc.c: 18:     ADRESL=0;
  6982  08BE  1683               	bsf	3,5	;RP0=1, select bank1
  6983  08BF  1303               	bcf	3,6	;RP1=0, select bank1
  6984  08C0  019E               	clrf	30	;volatile
  6985  08C1                     l139:
  6986  08C1  0008               	return
  6987  08C2                     __end_of_ADC_Init:
  6988  007E                     btemp	set	126	;btemp
  6989  007E                     wtemp0	set	126
  6990                           
  6991                           	psect	config
  6992                           
  6993                           ;Config register CONFIG1 @ 0x2007
  6994                           ;	Oscillator Selection bits
  6995                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  6996                           ;	Watchdog Timer Enable bit
  6997                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6998                           ;	Power-up Timer Enable bit
  6999                           ;	PWRTE = OFF, PWRT disabled
  7000                           ;	RE3/MCLR pin function select bit
  7001                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  7002                           ;	Code Protection bit
  7003                           ;	CP = OFF, Program memory code protection is disabled
  7004                           ;	Data Code Protection bit
  7005                           ;	CPD = OFF, Data memory code protection is disabled
  7006                           ;	Brown Out Reset Selection bits
  7007                           ;	BOREN = OFF, BOR disabled
  7008                           ;	Internal External Switchover bit
  7009                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7010                           ;	Fail-Safe Clock Monitor Enabled bit
  7011                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7012                           ;	Low Voltage Programming Enable bit
  7013                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7014                           ;	In-Circuit Debugger Mode bit
  7015                           ;	DEBUG = 0x1, unprogrammed default
  7016  2007                     	org	8199
  7017  2007  20D5               	dw	8405
  7018                           
  7019                           ;Config register CONFIG2 @ 0x2008
  7020                           ;	Brown-out Reset Selection bit
  7021                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  7022                           ;	Flash Program Memory Self Write Enable bits
  7023                           ;	WRT = OFF, Write protection off
  7024  2008                     	org	8200
  7025  2008  3FFF               	dw	16383

Data Sizes:
    Strings     90
    Constant    10
    Data        4
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80      9      67
    BANK3            96      0      50
    BANK2            96      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(1) Largest target is 4
		 -> luz(BANK1[4]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 50
		 -> stringBT(BANK3[50]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 50
		 -> stringBT(BANK3[50]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_18(CODE[11]), STR_16(CODE[9]), STR_14(CODE[2]), STR_13(CODE[8]), 
		 -> STR_11(CODE[2]), STR_10(CODE[7]), STR_6(CODE[2]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 50
		 -> stringBT(BANK3[50]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 50
		 -> stringBT(BANK3[50]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_3(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> sensorSalida2(BANK1[3]), sensorSalida1(BANK1[3]), luz(BANK1[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    USART_SendString@out	PTR const unsigned char  size(2) Largest target is 50
		 -> stringBT(BANK3[50]), STR_5(CODE[6]), STR_1(CODE[14]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_17(CODE[8]), STR_15(CODE[7]), STR_12(CODE[8]), STR_9(CODE[7]), 
		 -> STR_4(CODE[3]), STR_2(CODE[8]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_17(CODE[8]), STR_15(CODE[7]), STR_12(CODE[8]), STR_9(CODE[7]), 
		 -> STR_4(CODE[3]), luz(BANK1[4]), STR_2(CODE[8]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 50
		 -> stringBT(BANK3[50]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 50
		 -> stringBT(BANK3[50]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_SendString->_USART_TxChar
    _USART_Init->___aldiv
    _PWM_Inicializar2->___aldiv
    _PWM_Inicializar->___aldiv
    _PWM_Duty2->___xxtofl
    _PWM_Duty->___xxtofl
    ___xxtofl->___aldiv
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command

Critical Paths under _main in BANK0

    _USART_Init->___aldiv
    _PWM_Inicializar2->___aldiv
    _PWM_Inicializar->___aldiv
    _PWM_Duty2->___fltol
    _PWM_Duty->___fltol
    ___xxtofl->___aldiv
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK1

    _main->_PWM_Duty
    _main->_PWM_Duty2

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   21520
                                              6 BANK1      3     3      0
                           _ADC_Init
                           _ADC_Read
                          _LCD_Clear
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                           _PWM_Duty
                          _PWM_Duty2
                    _PWM_Inicializar
                   _PWM_Inicializar2
                         _USART_Init
                   _USART_SendString
                            _sprintf
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               4     3      1     184
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     3      1     861
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1429
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_SendString                                     2     0      2     295
                                              1 COMMON     2     0      2
                       _USART_TxChar
 ---------------------------------------------------------------------------------
 (2) _USART_TxChar                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          12     8      4    1333
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM_Inicializar2                                     4     4      0    1212
                                              9 COMMON     4     4      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM_Inicializar                                      4     4      0    1212
                                              9 COMMON     4     4      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM_Duty2                                            6     4      2    6530
                                              0 BANK1      6     4      2
                            ___aldiv
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _PWM_Duty                                             6     4      2    6530
                                              0 BANK1      6     4      2
                            ___aldiv
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              9 COMMON     4     4      0
                                              6 BANK0     10     6      4
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     381
                                             68 BANK0     11     7      4
                            ___aldiv (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2569
                                             42 BANK0     26    18      8
                          __Umul8_16
                            ___aldiv (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             16 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    1212
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     3      2    1332
                                              5 COMMON     5     3      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     241
                                              3 COMMON     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             7     5      2     273
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String
     _LCD_Char
   _LCD_String_xy
     _LCD_Command
     _LCD_String
   _PWM_Duty
     ___aldiv
     ___fldiv
       ___xxtofl (ARG)
         ___aldiv (ARG)
     ___flmul
       __Umul8_16
       ___aldiv (ARG)
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___aldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _PWM_Duty2
     ___aldiv
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
   _PWM_Inicializar
     ___aldiv
   _PWM_Inicializar2
     ___aldiv
   _USART_Init
     ___aldiv
   _USART_SendString
     _USART_TxChar
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _strcat
   _strcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      32       9       52.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      9      43       7       83.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D3      12        0.0%
ABS                  0      0      D3       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Feb 10 13:59:52 2023

            ___fldiv@aexp 0049              ___fldiv@bexp 0048                         pc 0002  
            ___fldiv@sign 0041              ?_LCD_Command 0070                        l91 0AFB  
                      l95 0E59                        _GO 00F9                        l98 0B3E  
                      fsr 0004               ?_LCD_String 0073       __Umul8_16@word_mpld 0076  
                     l102 0F17                       l210 0894                       l213 089C  
                     l142 0AAA                       l207 0B82                       l160 097C  
                     l145 0AB8                       l226 092B                       l139 08C1  
                     l163 0A0B                       l180 08AC                       l172 0905  
                     l405 0C57                       l166 0A41                       l415 0CDF  
                     l336 0FFF                       l177 09A8                       l612 0BC6  
                     l533 0C2D                       l526 0C42                       l622 0A7B  
                     l711 01C3                       l536 0C42                       l713 01D3  
                     l705 0151                       l803 08DF                       l741 07C0  
                     l750 0952                       l735 0738                       l729 07CC  
                     l691 01DF                       l748 0940                       l773 0D04  
                     l775 0D9B                       l689 005F                       l786 0D65  
                     l787 0D71                       l779 0D49                       l797 09D5  
                     _PR2 0092                       _idx 006F                       _luz 00CC  
                     fsr0 0004                       indf 0000              ___flmul@aexp 005C  
            ___flmul@bexp 005D              ___flmul@sign 0057              ___flmul@temp 0062  
            ___flmul@prod 005E               LCD_Char@dat 0072              ___fltol@exp1 006E  
                    l2001 0122                      l2011 013A                      l2003 012B  
                    l2021 0169                      l2013 014E                      l2005 0131  
                    l2101 052F                      l2031 01A7                      l2023 016D  
                    l2007 0135                      l2111 05AC                      l2103 055B  
                    l2041 01CD                      l2033 01B6                      l2025 0186  
                    l2017 0156                      l2009 0136                      l2121 062C  
                    l2113 05C9                      l2105 0577                      l2201 0D15  
                    l2043 01CF                      l2035 01BA                      l2019 015B  
                    l2027 018C                      l2131 06E4                      l2123 0659  
                    l2115 05D9                      l2107 0593                      l2051 0473  
                    l2211 0D40                      l2203 0D1A                      l2301 0953  
                    l2037 01C2                      l2029 0199                      l2141 0709  
                    l2133 06ED                      l2125 0669                      l2117 05F6  
                    l2109 059C                      l2061 0488                      l2053 0479  
                    l2221 0D73                      l2213 0D50                      l2205 0D27  
                    l2311 0970                      l2303 0956                      l2039 01C9  
                    l2151 0721                      l2143 0712                      l2135 06FB  
                    l2127 0696                      l2119 060F                      l2071 04A5  
                    l2063 0490                      l2055 047D                      l2223 0D89  
                    l2215 0D5B                      l2207 0D2E                      l2321 08B7  
                    l2313 0976                      l2305 095E                      l2161 0750  
                    l2153 0735                      l2137 0704                      l2145 0718  
                    l2129 06BC                      l2081 04BC                      l2073 04A9  
                    l2065 0492                      l2057 047E                      l2049 046C  
                    l2225 0D8E                      l2217 0D5F                      l2209 0D32  
                    l2241 0AF5                      l2233 0AB9                      l2401 0FA7  
                    l2331 08BE                      l2323 08B8                      l2315 08AD  
                    l2307 0964                      l2171 078B                      l2163 0754  
                    l2147 071C                      l2139 0708                      l2083 04BE  
                    l2075 04AA                      l2067 049A                      l2059 0483  
                    l2227 0D92                      l2219 0D69                      l2251 0DA9  
                    l2243 0AF6                      l2235 0ABD                      l2403 0FD5  
                    l2411 0FFB                      l2325 08B9                      l2317 08B0  
                    l2309 096A                      l2341 0991                      l2333 097E  
                    l2181 07B8                      l2173 079A                      l2165 076D  
                    l2157 073D                      l2149 071D                      l2093 04D9  
                    l2085 04C6                      l2077 04AF                      l2069 049F  
                    l2229 0D93                      l2253 0E3E                      l2245 0AF7  
                    l2237 0AF1                      l2261 0B00                      l2405 0FDC  
                    l2421 08C8                      l2501 036C                      l2327 08BA  
                    l2319 08B4                      l2351 0A7C                      l2343 0997  
                    l2335 097E                      l2183 07B9                      l2175 07A4  
                    l2159 0742                      l2167 0773                      l2095 04E9  
                    l2087 04CB                      l2079 04B4                      l2191 0CE8  
                    l2255 0E48                      l2247 0AF8                      l2239 0AF4  
                    l2271 0B3A                      l2263 0B34                      l2407 0FE0  
                    l2431 09BC                      l2423 08D0                      l2503 0377  
                    l2511 03AF                      l2329 08BB                      l2353 0AAE  
                    l1721 0A17                      l2345 099D                      l2337 0984  
                    l1801 0C8A                      l2185 07C4                      l2177 07A6  
                    l2169 0780                      l2097 04F6                      l2089 04D0  
                    l2193 0CEC                      l2257 0E49                      l2249 0D9C  
                    l2281 0F06                      l2273 0B3B                      l2265 0B37  
                    l2361 0F26                      l2409 0FE9                      l2433 09C4  
                    l2425 09AA                      l2513 03B9                      l2521 03E2  
                    l2505 0387                      l2441 01E6                      l2347 089D  
                    l1731 0A33                      l1723 0A18                      l2339 098A  
                    l1811 0CB8                      l1803 0C8E                      l2179 07B4  
                    l2099 0513                      l2195 0CFC                      l2283 0F07  
                    l2275 0E5A                      l2267 0B38                      l2259 0AFC  
                    l2291 0B7E                      l2371 0F50                      l2363 0F2D  
                    l2427 09AF                      l2419 08C3                      l2523 03F8  
                    l2531 042C                      l2515 03C9                      l2507 0393  
                    l2451 0208                      l2443 01E7                      l2435 01E0  
                    l2349 08A3                      l1733 0A34                      l1725 0A19  
                    l1717 0A0D                      l1813 0CC1                      l1805 0C97  
                    l1741 0936                      l2197 0D0C                      l2189 0CE3  
                    l2277 0E67                      l2269 0B39                      l2285 0B3F  
                    l2293 0906                      l1901 0A71                      l2381 0F69  
                    l2373 0F58                      l2365 0F32                      l2357 0F1B  
                    l2429 09B3                      l2541 045F                      l2533 0436  
                    l2525 0403                      l2517 03D5                      l2509 039F  
                    l2461 022B                      l2453 020D                      l2445 01EB  
                    l2437 01E4                      l1735 0A35                      l1727 0A1C  
                    l1719 0A16                      l1751 08E0                      l1807 0CA9  
                    l1815 0CC7                      l1911 0010                      l1743 093A  
                    l1831 0BF2                      l1823 0BC7                      l2279 0EFC  
                    l2287 0B43                      l2295 0907                      l1903 0A77  
                    l2391 0F87                      l2375 0F5C                      l2359 0F20  
                    l2535 0443                      l2527 0410                      l2471 026D  
                    l2463 0239                      l2455 0212                      l2447 01FA  
                    l2439 01E5                      l1761 09E0                      l1729 0A25  
                    l1753 08E1                      l1817 0CCC                      l1809 0CB7  
                    l1921 0027                      l1913 0014                      l1745 0949  
                    l1737 092D                      l1833 0BF3                      l1825 0BD4  
                    l2289 0B7C                      l2297 0915                      l2393 0F91  
                    l2377 0F60                      l2369 0F33                      l2529 041C  
                    l2481 02C2                      l2473 027C                      l2465 0246  
                    l2457 0217                      l2449 0203                      l1771 09EF  
                    l1763 09E1                      l1755 08EF                      l1819 0CD7  
                    l1931 003D                      l1923 0028                      l1915 0015  
                    l1907 0003                      l1747 094E                      l1739 092F  
                    l1835 0BFB                      l2299 091B                      l2395 0F97  
                    l2387 0F6B                      l2379 0F64                      l2539 0450  
                    l2491 030A                      l2483 02DC                      l2475 0290  
                    l2467 0255                      l2459 0221                      l1773 09FD  
                    l1765 09E2                      l1757 08F5                      l1941 0054  
                    l1933 0041                      l1917 001A                      l1925 002A  
                    l1909 000A                      l1853 0C22                      l1845 0C09  
                    l1837 0BFD                      l1829 0BDD                      l1781 089A  
                    l1861 0B85                      l2397 0F9E                      l2565 0F45  
                    l2493 0316                      l2485 02E9                      l2477 029F  
                    l2469 025A                      l1775 09FE                      l1767 09E3  
                    l1759 09D7                      l1791 0C66                      l1783 0C43  
                    l1951 0077                      l1943 0055                      l1935 0042  
                    l1927 0032                      l1919 001F                      l1855 0C32  
                    l1839 0C01                      l1847 0C1B                      l1871 0B9D  
                    l1863 0B8B                      l2399 0FA2                      l2495 0322  
                    l2487 02F2                      l2479 02B3                      l1777 09FF  
                    l1769 09E6                      l1793 0C6A                      l1785 0C46  
                    l1961 008E                      l1937 0047                      l1945 0057  
                    l1929 0037                      l1857 0C37                      l1873 0BAE  
                    l1865 0B8E                      l1881 0BC2                      l2497 033C  
                    l2489 0301                      l1795 0C72                      l1787 0C4A  
                    l1971 00BA                      l1963 00A0                      l1947 0067  
                    l1955 0080                      l1939 004C                      l1779 0894  
                    l1875 0BB4                      l1867 0B95                      l1859 0B83  
                    l1891 0A52                      l2499 0356                      l1797 0C7A  
                    l1789 0C5B                      l1973 00BF                      l1981 00DF  
                    l1965 00A8                      l1957 0085                      l1949 0073  
                    l1877 0BB5                      l1869 0B99                      l1893 0A56  
                    l1885 0A42                      l1799 0C7D                      l1991 010A  
                    l1983 00F1                      l1975 00D1                      l1967 00B0  
                    l1879 0BBC                      l1895 0A5A                      l1887 0A48  
                    l1993 0112                      l1985 00F2                      l1977 00D5  
                    l1969 00B8                      l1897 0A64                      l1889 0A4B  
                    l1995 0114                      l1987 0100                      l1979 00D6  
                    l1899 0A6A                      l1997 011D                      l1989 0104  
                    l1999 0121                      _ADON 00F8                      STR_1 081A  
                    STR_2 083C                      STR_3 0868                      STR_4 086C  
                    STR_5 0862                      STR_6 0872                      STR_7 086F  
                    STR_8 086F                      STR_9 0854                      _CREN 00C4  
                    u2000 0085                      u2001 0084                      u2010 00BF  
                    u2011 00BE                      u2100 0121                      u2101 0120  
                    u2200 01B6                      u2120 0135                      u2040 00D5  
                    u3000 09D5                      u2201 01B5                      u2121 0134  
                    u2041 00D4                      u2025 00C1                      u3001 09D4  
                    u2210 01CD                      u2130 013A                      u3010 036C  
                    u2211 01CC                      u2131 0139                      u2115 0124  
                    u2035 00CA                      u3011 036B                      u2140 014E  
                    u2060 00F1                      u2220 047D                      u3020 03F8  
                    u2205 01B2                      u2141 014D                      u2061 00F0  
                    u2301 0521                      u2221 047C                      u3021 03F7  
                    u3013 0368                      u2150 0155                      u2070 010A  
                    u2302 0528                      u2230 0483                      u2151 0154  
                    u2071 0109                      u2055 00D8                      u2311 053D  
                    u2303 052F                      u2231 0482                      u3023 03F4  
                    u1600 0C4A                      u2160 015B                      u2080 0112  
                    u2312 0544                      u2240 0488                      u1601 0C49  
                    u2161 015A                      u2081 0111                      u2065 00ED  
                    u2401 0678                      u2321 0569                      u2313 054B  
                    u2241 0487                      u1610 0C5B                      u2170 016D  
                    u2410 06A2                      u2402 067F                      u2322 0570  
                    u2250 04A9                      u1611 0C5A                      u2171 016C  
                    u2403 0686                      u2331 0585                      u2323 0577  
                    u2251 04A8                      u3107 0424                      u1620 0C7A  
                    u2180 017C                      u1540 093A                      u2500 0721  
                    u2332 058C                      u2260 04AF                      u1700 0BD4  
                    u1621 0C79                      u1541 0939                      u2501 0720  
                    u2421 06AE                      u2333 0593                      u2261 04AE  
                    u1701 0BD3                      u3117 0458                      u3037 0233  
                    u2190 0199                      u2510 0735                      u2430 06CA  
                    u2422 06B5                      u2270 04B4                      u1710 0BEB  
                    u1535 0A28                      u3127 0A20                      u2191 0198  
                    u2095 0116                      u2511 0734                      u2423 06BC  
                    u2415 069D                      u2351 05BB                      u2271 04B3  
                    u3047 024E                      u1640 0C8E                      u1560 094E  
                    u2520 073C                      u2352 05C2                      u2280 04CB  
                    u1720 0C01                      u2600 0CEC                      u1800 0B8B  
                    u3137 0A3C                      u1641 0C8D                      u2185 0177  
                    u1561 094D                      u2521 073B                      u2441 06D6  
                    u2361 05E8                      u2353 05C9                      u2345 0595  
                    u2281 04CA                      u1721 0C00                      u2601 0CEB  
                    u1801 0B8A                      u3057 0275                      u1570 0905  
                    u2530 0742                      u2442 06DD                      u2362 05EF  
                    u2290 04D0                      u1730 0C08                      u2610 0D0C  
                    u3147 095A                      u1571 0904                      u1635 0C7F  
                    u2195 0195                      u1555 0941                      u2531 0741  
                    u2443 06E4                      u2435 06C5                      u2363 05F6  
                    u2291 04CF                      u1731 0C07                      u1715 0BE6  
                    u2611 0D0B                      u3067 0298                      u1660 0CA9  
                    u2540 0754                      u2700 0D7E                      u1820 0B9D  
                    u1900 0A64                      u3157 08A7                      u1661 0CA8  
                    u2541 0753                      u2381 061E                      u1821 0B9C  
                    u1901 0A63                      u3077 02BB                      u2550 0763  
                    u2470 0708                      u2382 0625                      u1750 0C1A  
                    u2710 0D8E                      u2630 0D2D                      u1590 089A  
                    u3167 09EA                      u1655 0C90                      u2471 0707  
                    u2455 06E6                      u2391 064B                      u2383 062C  
                    u2375 05F8                      u1751 0C19                      u2711 0D8D  
                    u2631 0D2C                      u1591 0899                      u1815 0B8F  
                    u3087 02FA                      u1680 0CC7                      u2560 0780  
                    u2392 0652                      u1760 0C21                      u2720 0D92  
                    u2800 0B17                      u1840 0BAE                      u1920 0A77  
                    u3177 0A06                      u1585 09F2                      u1681 0CC6  
                    u1665 0CA5                      u2561 077F                      u2465 06FD  
                    u2393 0659                      u1761 0C20                      u1745 0C0A  
                    u2721 0D91                      u2705 0D79                      u2625 0D1F  
                    u1841 0BAD                      u1921 0A76                      u1905 0A60  
                    u3097 03A7                      u1690 0CCC                      u1930 0014  
                    u2570 079A                      u2490 071C                      u2650 0D4F  
                    u2810 0E67                      u2730 0ACB                      u1691 0CCB  
                    u1675 0CB9                      u1931 0013                      u2571 0799  
                    u2555 075E                      u2491 071B                      u2651 0D4E  
                    u2811 0E66                      u1835 0B9E                      u1915 0A6B  
                    u2900 0AAE                      u1940 001A                      u2580 07B8  
                    u1780 0C32                      u2820 0EB2                      u2740 0AD4  
                    u1860 0BC2                      u2901 0AAD                      u1941 0019  
                    u2581 07B7                      u2565 077C                      u2485 070B  
                    u1781 0C31                      u2645 0D41                      u2805 0B12  
                    u1861 0BC1                      u1845 0BAA                      u1950 001F  
                    u1790 0C37                      u2670 0D5F                      u2590 0CE8  
                    u2750 0DA9                      u2830 0F03                      u1870 0A48  
                    u2910 0F26                      u1951 001E                      u2575 0796  
                    u1791 0C36                      u1775 0C24                      u2671 0D5E  
                    u2591 0CE7                      u2751 0DA8                      u2831 0EFF  
                    u2735 0AC6                      u1855 0BB6                      u1871 0A47  
                    u2911 0F25                      u1960 0041                      u2680 0D65  
                    u2760 0DF4                      u2920 0F60                      u1961 0040  
                    u2681 0D64                      u2665 0D54                      u2825 0EAD  
                    u2745 0ACF                      u2921 0F5F                      u1970 0047  
                    u2690 0D69                      u2770 0E45                      u2850 092B  
                    u1890 0A5A                      u2930 0F86                      u1971 0046  
                    u2691 0D68                      u2771 0E41                      u2851 092A  
                    u1891 0A59                      u2931 0F85                      u2860 0984  
                    u1980 004C                      u2844 0F06                      u2940 0F91  
                    u2861 0983                      u1981 004B                      u2765 0DEF  
                    u1885 0A4C                      u2941 0F90                      u1990 0067  
                    u2790 0B0E                      u2950 0F97                      u1991 0066  
                    u2951 0F96                      u2935 0F82                      u2784 0E48  
                    u2960 0FE9                      u2961 0FE8                      u2970 0FFB  
                    u2875 0A7F                      u2795 0B09                      u2971 0FFA  
                    u2884 0A96                      u2980 08DF                      _RCIF 0065  
                    u2885 0A94                      u2981 08DE                      u2894 0AA2  
                    u2990 09BB                      u2895 0AA0                      u2991 09BA  
                    _TXIF 0064                      _main 01E0                      btemp 007E  
__end_of_USART_SendString 092C          __end_of_ADC_Init 08C2          __end_of_ADC_Read 0AB9  
                    start 0000           ___fldiv@new_exp 0042             _LCD_String_xy 097D  
        __end_of_LCD_Char 0A42          __end_of_LCD_Init 097D                     _DC1B0 00BC  
                   _DC1B1 00BD                     _DC2B0 00EC                     _DC2B1 00ED  
           ___fltol@sign1 006D           __end_of___aldiv 0CE0                     ?_main 0070  
         __end_of___fldiv 01E0                     STR_10 0854                     STR_11 0872  
                   STR_12 0844                     STR_13 0844                     STR_14 0872  
                   STR_15 085B                     STR_16 0833                     STR_17 084C  
                   STR_18 0828           __end_of___flmul 07CD           __end_of___fltol 0C43  
                   _ANSEL 0188           __end_of___lwdiv 0BC7           __end_of___lwmod 0A7C  
                   _RCREG 001A                     _RCSTA 0018                     _SPBRG 0099  
                   _PORTD 0008                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089                     _TXREG 0019  
                   _TXSTA 0098                     _Fila1 00B0                     _Fila2 00A0  
         __end_of_dpowers 081A                     pclath 000A          __end_of_PWM_Duty 0E5A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 1000  
          ?_LCD_String_xy 0075               ?_USART_Init 0026           __initialization 07CD  
       ??_PWM_Inicializar 0079              __end_of_main 046C                    ??_main 00DC  
       __end_of_LCD_Clear 08AD                    _ADCON0 001F                    _CCP1M2 00BA  
                  _CCP1M3 00BB                    _CCP2M2 00EA                    _CCP2M3 00EB  
                  _ADRESH 001E                    _ADRESL 009E                    _CCPR1L 0015  
                  _CCPR2L 001B          LCD_String_xy@msg 0076          LCD_String_xy@pos 0075  
        LCD_String_xy@row 0078                    _OSCCON 008F                    _TMR2ON 0092  
                  _TRISA0 0428                    _TRISA1 0429                    _TRISA2 042A  
                  _TRISB2 0432                    _TRISC2 043A                    _TRISC6 043E  
                  _TRISC7 043F          __end_of___xxtofl 0D9C                 ??___aldiv 0078  
               ??___fldiv 0038                 ??___flmul 0052                 ??___fltol 0068  
               ??___lwdiv 0074                 ??___lwmod 007C           ADC_Read@channel 0070  
         ADC_Read@digital 0075                    _strcat 09A9                    _strcpy 08C2  
       __end_of_PWM_Duty2 0F18                 ?_ADC_Init 0070                 ?_ADC_Read 0070  
            PWM_Duty@duty 00D6                 ??_sprintf 0023              ___xxtofl@arg 002C  
            ___xxtofl@exp 002B              ___xxtofl@val 0026                 ?_LCD_Char 0070  
 __end_of__initialization 07FC                 ?_LCD_Init 0070           ??_LCD_String_xy 0077  
              ___fltol@f1 0064         ?_PWM_Inicializar2 0070            __pcstackCOMMON 0070  
      ??_PWM_Inicializar2 0079              __pidataBANK1 0887              ??_LCD_String 0075  
               ?_PWM_Duty 00D6                ??_ADC_Init 0070                ??_ADC_Read 0072  
              __pbssBANK0 006F                __pbssBANK1 00A0                __pbssBANK3 0190  
              ??_LCD_Char 0070                ??_LCD_Init 0073        __end_of_LCD_String 0906  
       ?_USART_SendString 0071         __end_of__Umul8_16 0953        ??_USART_SendString 0073  
              __pmaintext 01E0                ??_PWM_Duty 00D8                   ?_strcat 0070  
                 ?_strcpy 0070                   _T2CKPS0 0090                   _T2CKPS1 0091  
               ?___xxtofl 0026                __stringtab 0800           _PWM_Inicializar 0AB9  
           LCD_String@msg 0073              ??_USART_Init 0079                   ___aldiv 0C43  
                 ___fldiv 0003                   ___flmul 046C                   ___fltol 0BC7  
                 ___lwdiv 0B83                   ___lwmod 0A42                   __ptext1 08C2  
                 __ptext2 09A9                   __ptext3 0F18                   __ptext4 0A42  
                 __ptext5 0B83                   __ptext6 0906                   __ptext7 0893  
                 __ptext8 0B3F                   __ptext9 0AFC                   _bloque1 00C4  
                 _bloque2 00C0       USART_SendString@out 0071                   _dpowers 0810  
              ??___xxtofl 0079          ___aldiv@dividend 0074                 _LCD_Clear 089D  
      __end_of_USART_Init 0B83                   _sprintf 0F18                   clrloop0 088C  
    end_of_initialization 07FC            LCD_Command@cmd 0072             PWM_Duty2@duty 00D6  
               _RCSTAbits 0018          ___aldiv@quotient 0022                 _PORTDbits 0008  
 __end_of_PWM_Inicializar 0AFC             ___xxtofl@sign 002A                ?_LCD_Clear 0070  
             ___fldiv@grs 0044               ___fldiv@rem 003D                 _PWM_Duty2 0E5A  
     USART_Init@baud_rate 0026               ___flmul@grs 0058             ?_USART_TxChar 0070  
           ??_LCD_Command 0070            __end_of_strcat 09D6            __end_of_strcpy 08E0  
     start_initialization 07CD                ?_PWM_Duty2 00D6            ??_USART_TxChar 0070  
   __end_of_LCD_String_xy 09A9                 __Umul8_16 092C               __pdataBANK1 00DF  
                ??_strcat 0071                  ??_strcpy 0071                 ___fldiv@a 0030  
               ___fldiv@b 0034       __end_of_LCD_Command 0A0C                 ___flmul@a 004E  
               ___flmul@b 004A                 ___latbits 0002          ?_PWM_Inicializar 0070  
           __pcstackBANK0 0020             __pcstackBANK1 00D6               ??_LCD_Clear 0073  
             sprintf@flag 0027               sprintf@prec 0028          ___lwdiv@dividend 0072  
                ?___aldiv 0070                  ?___fldiv 0030                  ?___flmul 004A  
                ?___fltol 0064                ?__Umul8_16 0070                  ?___lwdiv 0070  
                ?___lwmod 0078                 __pstrings 0800                  _ADC_Init 08AD  
                _ADC_Read 0A7C          ___lwdiv@quotient 0075               ??_PWM_Duty2 00D8  
   LCD_String_xy@location 0079                  ?_sprintf 0020           ___aldiv@divisor 0070  
                _LCD_Char 0A0C           ___aldiv@counter 0020                  _LCD_Init 0953  
               clear_ram0 088B                 _sensorLuz 00C8               _LCD_Command 09D6  
              _ADCON0bits 001F               __stringbase 080F                _ADCON1bits 009F  
                _PWM_Duty 0D9C      __end_of_USART_TxChar 089D          _PWM_Inicializar2 0AFC  
             ??__Umul8_16 0072             _sensorSalida1 00D3             _sensorSalida2 00D0  
      __end_of__stringtab 0810          _USART_SendString 0906                sprintf@val 0029  
                ___xxtofl 0CE0                strcat@from 0070             _pwmFrecuencia 00DF  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0077                  __ptext10 0AB9  
                __ptext11 0E5A                  __ptext20 08E0                  __ptext12 0D9C  
                __ptext21 0A0C                  __ptext13 0CE0                  __ptext22 0953  
                __ptext14 0BC7                  __ptext23 089D                  __ptext15 046C  
                __ptext24 09D6                  __ptext16 092C                  __ptext25 0A7C  
                __ptext17 0003                  __ptext26 08AD                  __ptext18 0C43  
                __ptext19 097D                strcpy@from 0070           _USART_Init$1010 0079  
                _stringBT 0190                _LCD_String 08E0           USART_TxChar@out 0070  
               sprintf@ap 0026                 sprintf@sp 002B          ___lwmod@dividend 007A  
               stringcode 080A    __Umul8_16@multiplicand 0070                  sprintf@c 002C  
                sprintf@f 0020                  strcat@cp 0072                  strcat@to 0073  
         ___lwmod@divisor 0078                  strcpy@cp 0073                  strcpy@to 0072  
         ___lwmod@counter 007D                  stringdir 080A                  stringtab 0800  
            ___aldiv@sign 0021      __Umul8_16@multiplier 0078              _USART_TxChar 0893  
__end_of_PWM_Inicializar2 0B3F                _USART_Init 0B3F         __Umul8_16@product 0074  
